<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-02-29T19:20:51+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Detect Assertion Status from Drug Entities</title><link href="/2024/02/28/assertion_opioid_drug_status_wip_en.html" rel="alternate" type="text/html" title="Detect Assertion Status from Drug Entities" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-02-28T00:00:00+00:00</updated><id>/2024/02/28/assertion_opioid_drug_status_wip_en</id><content type="html" xml:base="/2024/02/28/assertion_opioid_drug_status_wip_en.html">## Description

This model detects the assertion status of  drug entities related to opioid (including opioid_drug and other_drug).

## Predicted Entities

`opioid_medical_use`, `opioid_abuse`, `opioid_overdose`, `drug_medical_use`, `drug_abuse`, `drug_overdose`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_drug_status_wip_en_5.2.1_3.0_1709113624863.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_drug_status_wip_en_5.2.1_3.0_1709113624863.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)\
    .setWhiteList([&quot;opioid_drug&quot;, &quot;other_drug&quot;])

assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_drug_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;assertion&quot;)

pipeline = Pipeline(stages=[
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter,
    assertion
    ])

sample_texts = [&quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain. Assessment revealed ongoing discomfort localized to the lumbar region, with associated numbness and tingling in the lower extremities.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, with a known history of hypertension managed with atenolol 50mg and verapamil 40mg, presented after a fall resulting in an ankle injury. Examination revealed swelling and tenderness, indicative of a twisted ankle. Considering the patient's medical history and pain management needs, a prescription for tramadol was provided to alleviate discomfort while ensuring minimal impact on blood pressure control.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, with a documented history of chronic pain syndrome, was admitted following an accidental overdose of prescribed OxyContin. Upon assessment, the patient displayed symptoms indicative of opioid toxicity, including respiratory depression, altered mental status, and pinpoint pupils. Immediate resuscitative measures were undertaken, including airway management, administration of naloxone, and close monitoring of vital signs.&quot;&quot;&quot;]

data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;))
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(Array(&quot;sentence&quot;))
    .setOutputCol(&quot;token&quot;)

val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)                

val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)
    .setWhiteList(Array(&quot;opioid_drug&quot;, &quot;other_drug&quot;))

val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_drug_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;assertion&quot;)
    
val pipeline = new Pipeline().setStages(Array(document_assembler,
                                              sentence_detector,
                                              tokenizer,
                                              word_embeddings,
                                              ner_model,
                                              ner_converter,
                                              assertion))

val data = Seq(&quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain. Assessment revealed ongoing discomfort localized to the lumbar region, with associated numbness and tingling in the lower extremities.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, with a known history of hypertension managed with atenolol 50mg and verapamil 40mg, presented after a fall resulting in an ankle injury. Examination revealed swelling and tenderness, indicative of a twisted ankle. Considering the patient's medical history and pain management needs, a prescription for tramadol was provided to alleviate discomfort while ensuring minimal impact on blood pressure control.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, with a documented history of chronic pain syndrome, was admitted following an accidental overdose of prescribed OxyContin. Upon assessment, the patient displayed symptoms indicative of opioid toxicity, including respiratory depression, altered mental status, and pinpoint pupils. Immediate resuscitative measures were undertaken, including airway management, administration of naloxone, and close monitoring of vital signs.&quot;&quot;&quot;).toDF(&quot;text&quot;)


val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+---------+-----+---+-----------+------------------+----------+
|chunk    |begin|end|ner_label  |assertion         |confidence|
+---------+-----+---+-----------+------------------+----------+
|Percocet |104  |111|opioid_drug|opioid_medical_use|0.9976    |
|atenolol |63   |70 |other_drug |drug_medical_use  |1.0       |
|verapamil|81   |89 |other_drug |drug_medical_use  |1.0       |
|tramadol |315  |322|opioid_drug|opioid_medical_use|0.9986    |
|opioid   |82   |87 |opioid_drug|opioid_abuse      |0.6656    |
|percocet |143  |150|opioid_drug|opioid_abuse      |0.828     |
|opioid   |256  |261|opioid_drug|opioid_abuse      |0.9498    |
|cocaine  |75   |81 |other_drug |drug_overdose     |0.9093    |
|OxyContin|125  |133|opioid_drug|opioid_overdose   |0.9986    |
|opioid   |198  |203|opioid_drug|opioid_overdose   |0.9995    |
+---------+-----+---+-----------+------------------+----------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|assertion_opioid_drug_status_wip|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, ner_chunk, embeddings]|
|Output Labels:|[assertion_pred]|
|Language:|en|
|Size:|942.3 KB|

## Benchmarking

```bash
             label  precision    recall  f1-score   support
        drug_abuse       0.91      0.74      0.82        39
  drug_medical_use       0.97      0.99      0.98      1181
     drug_overdose       0.85      0.57      0.68        30
      opioid_abuse       0.75      0.86      0.80        59
opioid_medical_use       0.91      0.91      0.91       284
   opioid_overdose       0.77      0.64      0.70        42
          accuracy        -         -        0.95      1635
         macro avg       0.86      0.79      0.82      1635
      weighted avg       0.95      0.95      0.94      1635
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="clinical" /><category term="assertion" /><category term="opioid" /><summary type="html">Description This model detects the assertion status of drug entities related to opioid (including opioid_drug and other_drug). Predicted Entities opioid_medical_use, opioid_abuse, opioid_overdose, drug_medical_use, drug_abuse, drug_overdose Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;)\ .setWhiteList([&quot;opioid_drug&quot;, &quot;other_drug&quot;]) assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_drug_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;assertion&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter, assertion ]) sample_texts = [&quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain. Assessment revealed ongoing discomfort localized to the lumbar region, with associated numbness and tingling in the lower extremities.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, with a known history of hypertension managed with atenolol 50mg and verapamil 40mg, presented after a fall resulting in an ankle injury. Examination revealed swelling and tenderness, indicative of a twisted ankle. Considering the patient's medical history and pain management needs, a prescription for tramadol was provided to alleviate discomfort while ensuring minimal impact on blood pressure control.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, with a documented history of chronic pain syndrome, was admitted following an accidental overdose of prescribed OxyContin. Upon assessment, the patient displayed symptoms indicative of opioid toxicity, including respiratory depression, altered mental status, and pinpoint pupils. Immediate resuscitative measures were undertaken, including airway management, administration of naloxone, and close monitoring of vital signs.&quot;&quot;&quot;] data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) .setWhiteList(Array(&quot;opioid_drug&quot;, &quot;other_drug&quot;)) val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_drug_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;assertion&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, ner_model, ner_converter, assertion)) val data = Seq(&quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain. Assessment revealed ongoing discomfort localized to the lumbar region, with associated numbness and tingling in the lower extremities.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, with a known history of hypertension managed with atenolol 50mg and verapamil 40mg, presented after a fall resulting in an ankle injury. Examination revealed swelling and tenderness, indicative of a twisted ankle. Considering the patient's medical history and pain management needs, a prescription for tramadol was provided to alleviate discomfort while ensuring minimal impact on blood pressure control.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, with a documented history of chronic pain syndrome, was admitted following an accidental overdose of prescribed OxyContin. Upon assessment, the patient displayed symptoms indicative of opioid toxicity, including respiratory depression, altered mental status, and pinpoint pupils. Immediate resuscitative measures were undertaken, including airway management, administration of naloxone, and close monitoring of vital signs.&quot;&quot;&quot;).toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +---------+-----+---+-----------+------------------+----------+ |chunk |begin|end|ner_label |assertion |confidence| +---------+-----+---+-----------+------------------+----------+ |Percocet |104 |111|opioid_drug|opioid_medical_use|0.9976 | |atenolol |63 |70 |other_drug |drug_medical_use |1.0 | |verapamil|81 |89 |other_drug |drug_medical_use |1.0 | |tramadol |315 |322|opioid_drug|opioid_medical_use|0.9986 | |opioid |82 |87 |opioid_drug|opioid_abuse |0.6656 | |percocet |143 |150|opioid_drug|opioid_abuse |0.828 | |opioid |256 |261|opioid_drug|opioid_abuse |0.9498 | |cocaine |75 |81 |other_drug |drug_overdose |0.9093 | |OxyContin|125 |133|opioid_drug|opioid_overdose |0.9986 | |opioid |198 |203|opioid_drug|opioid_overdose |0.9995 | +---------+-----+---+-----------+------------------+----------+ Model Information Model Name: assertion_opioid_drug_status_wip Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [document, ner_chunk, embeddings] Output Labels: [assertion_pred] Language: en Size: 942.3 KB Benchmarking label precision recall f1-score support drug_abuse 0.91 0.74 0.82 39 drug_medical_use 0.97 0.99 0.98 1181 drug_overdose 0.85 0.57 0.68 30 opioid_abuse 0.75 0.86 0.80 59 opioid_medical_use 0.91 0.91 0.91 284 opioid_overdose 0.77 0.64 0.70 42 accuracy - - 0.95 1635 macro avg 0.86 0.79 0.82 1635 weighted avg 0.95 0.95 0.94 1635</summary></entry><entry><title type="html">Detect Assertion Status from General Symptoms Entities</title><link href="/2024/02/28/assertion_opioid_general_symptoms_status_wip_en.html" rel="alternate" type="text/html" title="Detect Assertion Status from General Symptoms Entities" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-02-28T00:00:00+00:00</updated><id>/2024/02/28/assertion_opioid_general_symptoms_status_wip_en</id><content type="html" xml:base="/2024/02/28/assertion_opioid_general_symptoms_status_wip_en.html">## Description

This model detects the assertion status of  general symptoms entity related to opioid.

## Predicted Entities

`underlying_pain`, `withdrawal_symptom`, `overdose_symptom`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_general_symptoms_status_wip_en_5.2.1_3.0_1709119096996.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_general_symptoms_status_wip_en_5.2.1_3.0_1709119096996.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)\
    .setWhiteList([&quot;general_symptoms&quot;])

assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_general_symptoms_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;assertion&quot;)

pipeline = Pipeline(stages=[
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter,
    assertion
    ])

sample_texts = [&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the clinic following a suicide attempt by heroin overdose. Upon assessment, the patient exhibited altered mental status, shallow breathing, and pinpoint pupils, indicative of opioid toxicity. Immediate resuscitative measures were initiated, including airway management, administration of naloxone, and close monitoring of vital signs. The patient was stabilized and admitted for further psychiatric evaluation and management.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;]

data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;))
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(Array(&quot;sentence&quot;))
    .setOutputCol(&quot;token&quot;)

val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)                

val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)
    .setWhiteList(&quot;general_symptoms&quot;)

val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_general_symptoms_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;assertion&quot;)
    
val pipeline = new Pipeline().setStages(Array(document_assembler,
                                              sentence_detector,
                                              tokenizer,
                                              word_embeddings,
                                              ner_model,
                                              ner_converter,
                                              assertion))

val data = Seq(&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the clinic following a suicide attempt by heroin overdose. Upon assessment, the patient exhibited altered mental status, shallow breathing, and pinpoint pupils, indicative of opioid toxicity. Immediate resuscitative measures were initiated, including airway management, administration of naloxone, and close monitoring of vital signs. The patient was stabilized and admitted for further psychiatric evaluation and management.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;).toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+---------------------------+-----+---+----------------+------------------+----------+
|chunk                      |begin|end|ner_label       |assertion         |confidence|
+---------------------------+-----+---+----------------+------------------+----------+
|withdrawal                 |59   |68 |general_symptoms|withdrawal_symptom|1.0       |
|tremors                    |102  |108|general_symptoms|withdrawal_symptom|1.0       |
|diarrhea                   |115  |122|general_symptoms|withdrawal_symptom|1.0       |
|chronic back pain          |123  |139|general_symptoms|underlying_pain   |1.0       |
|altered mental status      |123  |143|general_symptoms|overdose_symptom  |1.0       |
|shallow breathing          |146  |162|general_symptoms|overdose_symptom  |1.0       |
|pinpoint pupils            |169  |183|general_symptoms|overdose_symptom  |1.0       |
|constricted pupils         |117  |134|general_symptoms|overdose_symptom  |1.0       |
|cyanotic lips              |137  |149|general_symptoms|overdose_symptom  |1.0       |
|drowsiness                 |152  |161|general_symptoms|overdose_symptom  |1.0       |
|confusion                  |168  |176|general_symptoms|overdose_symptom  |1.0       |
|agitated                   |93   |100|general_symptoms|withdrawal_symptom|0.9999    |
|aggressive state           |106  |121|general_symptoms|withdrawal_symptom|0.9996    |
|sympathetic overstimulation|200  |226|general_symptoms|withdrawal_symptom|1.0       |
|tachycardia                |239  |249|general_symptoms|withdrawal_symptom|1.0       |
|profuse sweating           |270  |285|general_symptoms|withdrawal_symptom|0.9999    |
+---------------------------+-----+---+----------------+------------------+----------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|assertion_opioid_general_symptoms_status_wip|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, ner_chunk, embeddings]|
|Output Labels:|[assertion_pred]|
|Language:|en|
|Size:|952.9 KB|

## Benchmarking

```bash
             label  precision    recall  f1-score   support
  overdose_symptom       0.86      0.73      0.79        33
   underlying_pain       0.94      0.98      0.96       121
withdrawal_symptom       0.92      0.92      0.92        72
          accuracy         -         -       0.92       226
         macro avg       0.91      0.88      0.89       226
      weighted avg       0.92      0.92      0.92       226
```</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="assertion" /><category term="opioid" /><summary type="html">Description This model detects the assertion status of general symptoms entity related to opioid. Predicted Entities underlying_pain, withdrawal_symptom, overdose_symptom Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;)\ .setWhiteList([&quot;general_symptoms&quot;]) assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_general_symptoms_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;assertion&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter, assertion ]) sample_texts = [&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the clinic following a suicide attempt by heroin overdose. Upon assessment, the patient exhibited altered mental status, shallow breathing, and pinpoint pupils, indicative of opioid toxicity. Immediate resuscitative measures were initiated, including airway management, administration of naloxone, and close monitoring of vital signs. The patient was stabilized and admitted for further psychiatric evaluation and management.&quot;&quot;&quot;, &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;] data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) .setWhiteList(&quot;general_symptoms&quot;) val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_general_symptoms_status_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;assertion&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, ner_model, ner_converter, assertion)) val data = Seq(&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the hospital for a neurological evaluation, with a documented prescription for Percocet to manage chronic back pain.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the clinic following a suicide attempt by heroin overdose. Upon assessment, the patient exhibited altered mental status, shallow breathing, and pinpoint pupils, indicative of opioid toxicity. Immediate resuscitative measures were initiated, including airway management, administration of naloxone, and close monitoring of vital signs. The patient was stabilized and admitted for further psychiatric evaluation and management.&quot;&quot;&quot;, &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;).toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +---------------------------+-----+---+----------------+------------------+----------+ |chunk |begin|end|ner_label |assertion |confidence| +---------------------------+-----+---+----------------+------------------+----------+ |withdrawal |59 |68 |general_symptoms|withdrawal_symptom|1.0 | |tremors |102 |108|general_symptoms|withdrawal_symptom|1.0 | |diarrhea |115 |122|general_symptoms|withdrawal_symptom|1.0 | |chronic back pain |123 |139|general_symptoms|underlying_pain |1.0 | |altered mental status |123 |143|general_symptoms|overdose_symptom |1.0 | |shallow breathing |146 |162|general_symptoms|overdose_symptom |1.0 | |pinpoint pupils |169 |183|general_symptoms|overdose_symptom |1.0 | |constricted pupils |117 |134|general_symptoms|overdose_symptom |1.0 | |cyanotic lips |137 |149|general_symptoms|overdose_symptom |1.0 | |drowsiness |152 |161|general_symptoms|overdose_symptom |1.0 | |confusion |168 |176|general_symptoms|overdose_symptom |1.0 | |agitated |93 |100|general_symptoms|withdrawal_symptom|0.9999 | |aggressive state |106 |121|general_symptoms|withdrawal_symptom|0.9996 | |sympathetic overstimulation|200 |226|general_symptoms|withdrawal_symptom|1.0 | |tachycardia |239 |249|general_symptoms|withdrawal_symptom|1.0 | |profuse sweating |270 |285|general_symptoms|withdrawal_symptom|0.9999 | +---------------------------+-----+---+----------------+------------------+----------+ Model Information Model Name: assertion_opioid_general_symptoms_status_wip Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [document, ner_chunk, embeddings] Output Labels: [assertion_pred] Language: en Size: 952.9 KB Benchmarking label precision recall f1-score support overdose_symptom 0.86 0.73 0.79 33 underlying_pain 0.94 0.98 0.96 121 withdrawal_symptom 0.92 0.92 0.92 72 accuracy - - 0.92 226 macro avg 0.91 0.88 0.89 226 weighted avg 0.92 0.92 0.92 226</summary></entry><entry><title type="html">Detect Assertion Status from Opioid Entities</title><link href="/2024/02/28/assertion_opioid_wip_en.html" rel="alternate" type="text/html" title="Detect Assertion Status from Opioid Entities" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-02-28T00:00:00+00:00</updated><id>/2024/02/28/assertion_opioid_wip_en</id><content type="html" xml:base="/2024/02/28/assertion_opioid_wip_en.html">## Description

This model detects the assertion status of entities related to opioid.

## Predicted Entities

`present`, `history`, `absent`, `hypothetical`, `past`, `family_or_someoneelse`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_wip_en_5.2.1_3.0_1709111823206.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/assertion_opioid_wip_en_5.2.1_3.0_1709111823206.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)

assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;assertion&quot;)

pipeline = Pipeline(stages=[
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter,
    assertion
    ])

sample_texts = [ &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;,
                &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient was brought to the clinic exhibiting symptoms consistent with opioid withdrawal, despite denying any illicit drug use. Upon further questioning, the patient revealed using tramadol for chronic pain management.&quot;&quot;&quot;]
               
data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
    
val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;))
    .setOutputCol(&quot;sentence&quot;)
    
val tokenizer = new Tokenizer()
    .setInputCols(Array(&quot;sentence&quot;))
    .setOutputCol(&quot;token&quot;)
    
val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)                
    
val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)
    
val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)

val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;))
    .setOutputCol(&quot;assertion&quot;)
        
val pipeline = new Pipeline().setStages(Array(document_assembler,
                                              sentence_detector,
                                              tokenizer,
                                              word_embeddings,
                                              ner_model,
                                              ner_converter,
                                              assertion))

val data = Seq(&quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;,
                &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient was brought to the clinic exhibiting symptoms consistent with opioid withdrawal, despite denying any illicit drug use. Upon further questioning, the patient revealed using tramadol for chronic pain management.&quot;&quot;&quot;).toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------+-----+---+----------------------+------------+----------+
|chunk                 |begin|end|ner_label             |assertion   |confidence|
+----------------------+-----+---+----------------------+------------+----------+
|substance abuse       |30   |44 |substance_use_disorder|history     |0.9644    |
|opioid                |90   |95 |opioid_drug           |hypothetical|0.7974    |
|overdose              |97   |104|other_disease         |hypothetical|0.9961    |
|constricted pupils    |117  |134|general_symptoms      |past        |0.732     |
|cyanotic lips         |137  |149|general_symptoms      |past        |0.8501    |
|drowsiness            |152  |161|general_symptoms      |past        |0.9469    |
|confusion             |168  |176|general_symptoms      |past        |0.9686    |
|respiratory depression|351  |372|other_disease         |hypothetical|0.5921    |
|opioid                |82   |87 |opioid_drug           |history     |0.735     |
|percocet              |143  |150|opioid_drug           |present     |0.905     |
|pills                 |152  |156|drug_form             |present     |0.9363    |
|withdrawal            |220  |229|general_symptoms      |present     |0.9929    |
|opioid                |256  |261|opioid_drug           |present     |0.9348    |
|opioid                |74   |79 |opioid_drug           |present     |0.8874    |
|withdrawal            |81   |90 |general_symptoms      |present     |0.8789    |
|illicit drug use      |113  |128|substance_use_disorder|absent      |0.9919    |
|tramadol              |184  |191|opioid_drug           |present     |0.9836    |
|chronic pain          |197  |208|general_symptoms      |present     |0.9993    |
+----------------------+-----+---+----------------------+------------+----------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|assertion_opioid_wip|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, ner_chunk, embeddings]|
|Output Labels:|[assertion_pred]|
|Language:|en|
|Size:|942.4 KB|

## Benchmarking

```bash
       label  precision    recall  f1-score   support
      absent       0.80      0.86      0.83       507
      family       0.73      0.71      0.72       136
     history       0.75      0.62      0.68       770
hypothetical       0.64      0.69      0.66       352
        past       0.59      0.32      0.42       214
     present       0.72      0.80      0.76      1571
 someoneelse       0.18      0.11      0.13        28
    accuracy         -        -        0.72      3578
   macro-avg       0.63      0.59      0.60      3578
weighted-avg       0.72      0.72      0.71      3578
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="clinical" /><category term="licensed" /><category term="assertion" /><category term="opioid" /><summary type="html">Description This model detects the assertion status of entities related to opioid. Predicted Entities present, history, absent, hypothetical, past, family_or_someoneelse Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;) assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;assertion&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter, assertion ]) sample_texts = [ &quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency.&quot;&quot;&quot;, &quot;&quot;&quot;The patient was brought to the clinic exhibiting symptoms consistent with opioid withdrawal, despite denying any illicit drug use. Upon further questioning, the patient revealed using tramadol for chronic pain management.&quot;&quot;&quot;] data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val word_embeddings = WordEmbeddingsModel().pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val assertion = AssertionDLModel.pretrained(&quot;assertion_opioid_wip&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;ner_chunk&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;assertion&quot;) val pipeline = new Pipeline().setStages(Array(document_assembler, sentence_detector, tokenizer, word_embeddings, ner_model, ner_converter, assertion)) val data = Seq(&quot;&quot;&quot;The patient with a history of substance abuse presented with clinical signs indicative of opioid overdose, including constricted pupils, cyanotic lips, drowsiness, and confusion. Immediate assessment and intervention were initiated to address the patient's symptoms and stabilize their condition. Close monitoring for potential complications, such as respiratory depression, was maintained throughout the course of treatment.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency.&quot;&quot;&quot;, &quot;&quot;&quot;The patient was brought to the clinic exhibiting symptoms consistent with opioid withdrawal, despite denying any illicit drug use. Upon further questioning, the patient revealed using tramadol for chronic pain management.&quot;&quot;&quot;).toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +----------------------+-----+---+----------------------+------------+----------+ |chunk |begin|end|ner_label |assertion |confidence| +----------------------+-----+---+----------------------+------------+----------+ |substance abuse |30 |44 |substance_use_disorder|history |0.9644 | |opioid |90 |95 |opioid_drug |hypothetical|0.7974 | |overdose |97 |104|other_disease |hypothetical|0.9961 | |constricted pupils |117 |134|general_symptoms |past |0.732 | |cyanotic lips |137 |149|general_symptoms |past |0.8501 | |drowsiness |152 |161|general_symptoms |past |0.9469 | |confusion |168 |176|general_symptoms |past |0.9686 | |respiratory depression|351 |372|other_disease |hypothetical|0.5921 | |opioid |82 |87 |opioid_drug |history |0.735 | |percocet |143 |150|opioid_drug |present |0.905 | |pills |152 |156|drug_form |present |0.9363 | |withdrawal |220 |229|general_symptoms |present |0.9929 | |opioid |256 |261|opioid_drug |present |0.9348 | |opioid |74 |79 |opioid_drug |present |0.8874 | |withdrawal |81 |90 |general_symptoms |present |0.8789 | |illicit drug use |113 |128|substance_use_disorder|absent |0.9919 | |tramadol |184 |191|opioid_drug |present |0.9836 | |chronic pain |197 |208|general_symptoms |present |0.9993 | +----------------------+-----+---+----------------------+------------+----------+ Model Information Model Name: assertion_opioid_wip Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [document, ner_chunk, embeddings] Output Labels: [assertion_pred] Language: en Size: 942.4 KB Benchmarking label precision recall f1-score support absent 0.80 0.86 0.83 507 family 0.73 0.71 0.72 136 history 0.75 0.62 0.68 770 hypothetical 0.64 0.69 0.66 352 past 0.59 0.32 0.42 214 present 0.72 0.80 0.76 1571 someoneelse 0.18 0.11 0.13 28 accuracy - - 0.72 3578 macro-avg 0.63 0.59 0.60 3578 weighted-avg 0.72 0.72 0.71 3578</summary></entry><entry><title type="html">Detect Opioid Specific Entities</title><link href="/2024/02/28/ner_opioid_en.html" rel="alternate" type="text/html" title="Detect Opioid Specific Entities" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-02-28T00:00:00+00:00</updated><id>/2024/02/28/ner_opioid_en</id><content type="html" xml:base="/2024/02/28/ner_opioid_en.html">## Description

This model is designed to detect and label opioid related entities within text data. Opioids are a class of drugs that include the illegal drug heroin, synthetic opioids such as fentanyl, and pain relievers available legally by prescription. The model has been trained using advanced deep learning techniques on a diverse range of text sources and can accurately recognize and classify a wide range of opioid-related entities. The model’s accuracy and precision have been carefully validated against expert-labeled data to ensure reliable and consistent results.

Here are the labels of the OPIOID model with their descriptions:

- `communicable_disease`: Communicable disease is a disease that people spread to one another through contact with contaminated surfaces, bodily fluids, blood products, insect bites, or through the air.
- `general_symptoms`: Include all the symptoms,vital findings and signs mentioned in the document, of the patient or someone else.
- `substance_use_disorder` : Mentions of substance use that include unspecific illicit drug abuse.
- `drug_duration`: The duration for which the drug was taken or prescribed.
- `psychiatric_issue`: Psychiatric disorders may also be referred to as mental health conditions is a behavioral or mental pattern that causes significant distress or impairment of personal functioning. A mental disorder is also characterized by a clinically significant disturbance in an individual’s cognition, emotional regulation, or behavior. It is usually associated with distress or impairment in important areas of functioning.
- `drug_strength`: The potency of one unit of drug (or a combination of drugs, generally speaking); the measurement units available are described by FDA.
- `drug_quantity`: The quantity associated with drug dosage.
- `other_drug`: Any generic or trade name of the drugs in the text other than the opioids.
- `drug_form`: The dosage forms available are described by FDA.
- `drug_frequency`: The frequency at which the drug doses are given or being used.
- `opioid_drug`: Any drug mentioned in the text that belongs to the opioid family either legally by prescription as pain relievers like fentanyl, oxycodone, hydrocodone, codeine, morphine, Oxymorphone, Hydromorphone, Methadone, Tramadol, Buprenorphine or illegal street drug like “heroin”.
- `drug_route`: The administration routes available are described by FDA.
- `employment`: Patient occupational titles. Includes &quot;unemployed&quot; and &quot;retired&quot;.
- `violence`: Refers to any violent behavior towards self or others.
- `legal_issue`: Any problem, mention, act, or matter that related to crime and/or requires resolution within the legal framework.
- `other_disease`: Include all the diseases mentioned in the document, of the patient or someone else. 
- `alcohol_use`:  Mentions of alcohol drinking habit. 
- `test`: This label is assigned to entities representing tests conducted to detect the presence of drugs or substances in urine, blood, or saliva of the patient. 
- `marital_status`: Marital status examples like: Married, single, widowed, divorced, separated and registered partnership.
- `test_result`: This label is assigned to entities representing the outcome of a drug screening test, indicating whether specific drugs or substances were detected (positive) or not detected (negative) in an individual's system.
- `antidote`: Antidote is a medicine that rapidly reverses an opioid overdose like Naloxone, Kloxxado, Narcan, Evzio, Zimhi and it is not a treatment for opioid use disorder.
- `sexual_orientation`:  Sexual orientations include gay, lesbian, straight, bisexual, and asexual.

## Predicted Entities

`communicable_disease`, `general_symptoms`, `substance_use_disorder`, `drug_duration`, `psychiatric_issue`, `drug_strength`, `drug_quantity`, `other_drug`, `drug_form`, `drug_frequency`, `opioid_drug`, `drug_route`, `employment`, `violence`, `legal_issue`, `other_disease`, `alcohol_use`, `test`, `marital_status`, `test_result`, `antidote`, `sexual_orientation`

{:.btn-box}
[Live Demo](https://demo.johnsnowlabs.com/healthcare/NER_OPIOID/){:.button.button-orange}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_opioid_en_5.2.1_3.0_1709109768256.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_opioid_en_5.2.1_3.0_1709109768256.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;sentence&quot;])\
    .setOutputCol(&quot;token&quot;)

clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;embeddings&quot;)

ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverterInternal()\
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\
    .setOutputCol(&quot;ner_chunk&quot;)

pipeline = Pipeline(stages=[
    document_assembler, 
    sentence_detector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter   
    ])

sample_texts = [&quot;&quot;&quot;The patient, unmarried and with a significant history of substance abuse involving the illicit consumption of various opioids such as heroin, fentanyl, and oxycodone, presented with a headache and was diagnosed PTSD. Despite denying the use of alcohol, smoking, or marijuana, the patient, who has been unemployed for several months, required administration of Narcan for suspected opioid overdose. A recent toxicology screen confirmed the presence of opioids, and showed negative results for benzodiazepines, cocaine, amphetamines, barbiturates, and tricyclic substances.&quot;&quot;&quot;]


data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(&quot;document&quot;)
    .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
    .setInputCols(&quot;sentence&quot;)
    .setOutputCol(&quot;token&quot;)

val clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
    .setOutputCol(&quot;embeddings&quot;)

val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;))
    .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverterInternal()
    .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
    .setOutputCol(&quot;ner_chunk&quot;)

val pipeline = new Pipeline().setStages(Array(
    document_assembler, 
    sentenceDetector,
    tokenizer,
    clinical_embeddings,
    ner_model,
    ner_converter   
))

val sample_texts = Seq(&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;,
               &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;).toDF(&quot;text&quot;)

val result = pipeline.fit(sample_texts).transform(sample_texts)
```
&lt;/div&gt;

## Results

```bash
+--------------------+-----+---+----------------------+
|chunk               |begin|end|ner_label             |
+--------------------+-----+---+----------------------+
|unmarried           |13   |21 |marital_status        |
|substance abuse     |57   |71 |substance_use_disorder|
|opioids             |118  |124|opioid_drug           |
|heroin              |134  |139|opioid_drug           |
|fentanyl            |142  |149|opioid_drug           |
|oxycodone           |156  |164|opioid_drug           |
|headache            |184  |191|general_symptoms      |
|PTSD                |211  |214|psychiatric_issue     |
|alcohol             |244  |250|alcohol_use           |
|marijuana           |265  |273|other_drug            |
|unemployed          |302  |311|employment            |
|Narcan              |360  |365|antidote              |
|opioid              |381  |386|opioid_drug           |
|overdose            |388  |395|other_disease         |
|toxicology screen   |407  |423|test                  |
|opioids             |451  |457|test                  |
|negative            |471  |478|test_result           |
|benzodiazepines     |492  |506|test                  |
|cocaine             |509  |515|test                  |
|amphetamines        |518  |529|test                  |
|barbiturates        |532  |543|test                  |
|tricyclic substances|550  |569|test                  |
+--------------------+-----+---+----------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_opioid|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|4.9 MB|

## Benchmarking

```bash
                 label  precision    recall  f1-score   support
           alcohol_use       0.94      0.91      0.92       248
              antidote       1.00      0.97      0.98        88
  communicable_disease       0.91      0.93      0.92       153
         drug_duration       0.87      0.88      0.87        91
             drug_form       0.98      0.98      0.98       695
        drug_frequency       0.99      0.97      0.98      1560
         drug_quantity       0.97      0.96      0.96      1757
            drug_route       0.98      0.99      0.99       774
         drug_strength       0.92      0.95      0.93       571
            employment       0.86      0.64      0.74       182
      general_symptoms       0.90      0.77      0.83      1428
           legal_issue       0.88      0.74      0.80        47
        marital_status       0.89      0.97      0.93        35
           opioid_drug       0.99      0.97      0.98       468
         other_disease       0.92      0.88      0.90      2030
            other_drug       0.92      0.95      0.94      1701
     psychiatric_issue       0.92      0.75      0.83       750
    sexual_orientation       1.00      1.00      1.00        10
substance_use_disorder       0.85      0.94      0.89       187
                  test       0.94      0.92      0.93        73
           test_result       1.00      0.95      0.98        21
              violence       0.85      0.66      0.74       251
             micro-avg       0.94      0.91      0.92     13120
             macro-avg       0.93      0.90      0.91     13120
          weighted-avg       0.94      0.91      0.92     13120
```</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="ner" /><category term="opioid" /><category term="clinical" /><summary type="html">Description This model is designed to detect and label opioid related entities within text data. Opioids are a class of drugs that include the illegal drug heroin, synthetic opioids such as fentanyl, and pain relievers available legally by prescription. The model has been trained using advanced deep learning techniques on a diverse range of text sources and can accurately recognize and classify a wide range of opioid-related entities. The model’s accuracy and precision have been carefully validated against expert-labeled data to ensure reliable and consistent results. Here are the labels of the OPIOID model with their descriptions: communicable_disease: Communicable disease is a disease that people spread to one another through contact with contaminated surfaces, bodily fluids, blood products, insect bites, or through the air. general_symptoms: Include all the symptoms,vital findings and signs mentioned in the document, of the patient or someone else. substance_use_disorder : Mentions of substance use that include unspecific illicit drug abuse. drug_duration: The duration for which the drug was taken or prescribed. psychiatric_issue: Psychiatric disorders may also be referred to as mental health conditions is a behavioral or mental pattern that causes significant distress or impairment of personal functioning. A mental disorder is also characterized by a clinically significant disturbance in an individual’s cognition, emotional regulation, or behavior. It is usually associated with distress or impairment in important areas of functioning. drug_strength: The potency of one unit of drug (or a combination of drugs, generally speaking); the measurement units available are described by FDA. drug_quantity: The quantity associated with drug dosage. other_drug: Any generic or trade name of the drugs in the text other than the opioids. drug_form: The dosage forms available are described by FDA. drug_frequency: The frequency at which the drug doses are given or being used. opioid_drug: Any drug mentioned in the text that belongs to the opioid family either legally by prescription as pain relievers like fentanyl, oxycodone, hydrocodone, codeine, morphine, Oxymorphone, Hydromorphone, Methadone, Tramadol, Buprenorphine or illegal street drug like “heroin”. drug_route: The administration routes available are described by FDA. employment: Patient occupational titles. Includes ”unemployed” and “retired”. violence: Refers to any violent behavior towards self or others. legal_issue: Any problem, mention, act, or matter that related to crime and/or requires resolution within the legal framework. other_disease: Include all the diseases mentioned in the document, of the patient or someone else. alcohol_use: Mentions of alcohol drinking habit. test: This label is assigned to entities representing tests conducted to detect the presence of drugs or substances in urine, blood, or saliva of the patient. marital_status: Marital status examples like: Married, single, widowed, divorced, separated and registered partnership. test_result: This label is assigned to entities representing the outcome of a drug screening test, indicating whether specific drugs or substances were detected (positive) or not detected (negative) in an individual’s system. antidote: Antidote is a medicine that rapidly reverses an opioid overdose like Naloxone, Kloxxado, Narcan, Evzio, Zimhi and it is not a treatment for opioid use disorder. sexual_orientation: Sexual orientations include gay, lesbian, straight, bisexual, and asexual. Predicted Entities communicable_disease, general_symptoms, substance_use_disorder, drug_duration, psychiatric_issue, drug_strength, drug_quantity, other_drug, drug_form, drug_frequency, opioid_drug, drug_route, employment, violence, legal_issue, other_disease, alcohol_use, test, marital_status, test_result, antidote, sexual_orientation Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;])\ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverterInternal()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;])\ .setOutputCol(&quot;ner_chunk&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, clinical_embeddings, ner_model, ner_converter ]) sample_texts = [&quot;&quot;&quot;The patient, unmarried and with a significant history of substance abuse involving the illicit consumption of various opioids such as heroin, fentanyl, and oxycodone, presented with a headache and was diagnosed PTSD. Despite denying the use of alcohol, smoking, or marijuana, the patient, who has been unemployed for several months, required administration of Narcan for suspected opioid overdose. A recent toxicology screen confirmed the presence of opioids, and showed negative results for benzodiazepines, cocaine, amphetamines, barbiturates, and tricyclic substances.&quot;&quot;&quot;] data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(&quot;document&quot;) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(&quot;sentence&quot;) .setOutputCol(&quot;token&quot;) val clinical_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner_model = MedicalNerModel.pretrained(&quot;ner_opioid&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;,&quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverterInternal() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val pipeline = new Pipeline().setStages(Array( document_assembler, sentenceDetector, tokenizer, clinical_embeddings, ner_model, ner_converter )) val sample_texts = Seq(&quot;&quot;&quot;The patient presented with symptoms consistent with opioid withdrawal, including feelings of anxiety, tremors, and diarrhea. Vital signs were within normal limits, and supportive measures were initiated. The patient was closely monitored for potential complications and provided with appropriate pharmacological interventions to manage their symptoms.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the rehabilitation facility with a documented history of opioid abuse, primarily stemming from misuse of prescription percocet pills intended for their partner's use. Initial assessment revealed withdrawal symptoms consistent with opioid dependency, including agitation, diaphoresis, and myalgias.&quot;&quot;&quot;, &quot;&quot;&quot;The patient presented to the emergency department following an overdose on cocaine. On examination, the patient displayed signs of sympathetic nervous system stimulation, including tachycardia, hypertension, dilated pupils, and agitation.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, known for a history of substance abuse, was brought to the hospital in a highly agitated and aggressive state, consistent with potential cocaine use. Initial assessment revealed signs of sympathetic overstimulation, including tachycardia, hypertension, and profuse sweating.&quot;&quot;&quot;).toDF(&quot;text&quot;) val result = pipeline.fit(sample_texts).transform(sample_texts) Results +--------------------+-----+---+----------------------+ |chunk |begin|end|ner_label | +--------------------+-----+---+----------------------+ |unmarried |13 |21 |marital_status | |substance abuse |57 |71 |substance_use_disorder| |opioids |118 |124|opioid_drug | |heroin |134 |139|opioid_drug | |fentanyl |142 |149|opioid_drug | |oxycodone |156 |164|opioid_drug | |headache |184 |191|general_symptoms | |PTSD |211 |214|psychiatric_issue | |alcohol |244 |250|alcohol_use | |marijuana |265 |273|other_drug | |unemployed |302 |311|employment | |Narcan |360 |365|antidote | |opioid |381 |386|opioid_drug | |overdose |388 |395|other_disease | |toxicology screen |407 |423|test | |opioids |451 |457|test | |negative |471 |478|test_result | |benzodiazepines |492 |506|test | |cocaine |509 |515|test | |amphetamines |518 |529|test | |barbiturates |532 |543|test | |tricyclic substances|550 |569|test | +--------------------+-----+---+----------------------+ Model Information Model Name: ner_opioid Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: en Size: 4.9 MB Benchmarking label precision recall f1-score support alcohol_use 0.94 0.91 0.92 248 antidote 1.00 0.97 0.98 88 communicable_disease 0.91 0.93 0.92 153 drug_duration 0.87 0.88 0.87 91 drug_form 0.98 0.98 0.98 695 drug_frequency 0.99 0.97 0.98 1560 drug_quantity 0.97 0.96 0.96 1757 drug_route 0.98 0.99 0.99 774 drug_strength 0.92 0.95 0.93 571 employment 0.86 0.64 0.74 182 general_symptoms 0.90 0.77 0.83 1428 legal_issue 0.88 0.74 0.80 47 marital_status 0.89 0.97 0.93 35 opioid_drug 0.99 0.97 0.98 468 other_disease 0.92 0.88 0.90 2030 other_drug 0.92 0.95 0.94 1701 psychiatric_issue 0.92 0.75 0.83 750 sexual_orientation 1.00 1.00 1.00 10 substance_use_disorder 0.85 0.94 0.89 187 test 0.94 0.92 0.93 73 test_result 1.00 0.95 0.98 21 violence 0.85 0.66 0.74 251 micro-avg 0.94 0.91 0.92 13120 macro-avg 0.93 0.90 0.91 13120 weighted-avg 0.94 0.91 0.92 13120</summary></entry><entry><title type="html">Biomarker Text Matcher</title><link href="/2024/02/28/biomarker_matcher_en.html" rel="alternate" type="text/html" title="Biomarker Text Matcher" /><published>2024-02-28T00:00:00+00:00</published><updated>2024-02-28T00:00:00+00:00</updated><id>/2024/02/28/biomarker_matcher_en</id><content type="html" xml:base="/2024/02/28/biomarker_matcher_en.html">## Description

Extracts biomarker entities using rule based `TextMatcherInternal` annotator.

## Predicted Entities

`Biomarker`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/biomarker_matcher_en_5.2.1_3.0_1709150341244.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/biomarker_matcher_en_5.2.1_3.0_1709150341244.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
	
```python
documentAssembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

tokenizer = Tokenizer()\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;token&quot;)

text_matcher = TextMatcherInternalModel.pretrained(&quot;biomarker_matcher&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;, &quot;token&quot;])\
    .setOutputCol(&quot;matched_text&quot;)\

mathcer_pipeline = Pipeline().setStages([
                  documentAssembler,
                  tokenizer,
                  text_matcher])

data = spark.createDataFrame([[&quot;In the bone- marrow (BM) aspiration, blasts accounted for 88.1% of ANCs, which were positive for CD20, CD34, CD38, CD58, CD66c, CD123, HLA-DR, cCD79a, and TdT on flow cytometry. Measurements of serum tumor markers showed elevated level of cytokeratin 19 fragment (Cyfra21-1: 4.77 ng/mL), neuron-specific enolase (NSE: 19.60 ng/mL), and squamous cell carcinoma antigen (SCCA: 2.58 ng/mL).&quot;]]).toDF(&quot;text&quot;)

matcher_model = mathcer_pipeline.fit(data)
result = matcher_model.transform(data)
```
```scala
val documentAssembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
	
val tokenizer = new Tokenizer()
    .setInputCols(Array(&quot;document&quot;))
    .setOutputCol(&quot;token&quot;)
	
val text_matcher = TextMatcherInternalModel.pretrained(&quot;biomarker_matcher&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;document&quot;,&quot;token&quot;))
    .setOutputCol(&quot;matched_text&quot;)
	
val mathcer_pipeline = new Pipeline()
    .setStages(Array(documentAssembler,
	             tokenizer,
 	             text_matcher))
	
val data = Seq(&quot;In the bone- marrow (BM) aspiration, blasts accounted for 88.1% of ANCs, which were positive for CD20, CD34, CD38, CD58, CD66c, CD123, HLA-DR, cCD79a, and TdT on flow cytometry. Measurements of serum tumor markers showed elevated level of cytokeratin 19 fragment (Cyfra21-1: 4.77 ng/mL), neuron-specific enolase (NSE: 19.60 ng/mL), and squamous cell carcinoma antigen (SCCA: 2.58 ng/mL).&quot;) .toDF(&quot;text&quot;)
	
val matcher_model = mathcer_pipeline.fit(data)
	
val result = matcher_model.transform(data)
```
&lt;/div&gt;

## Results

```bash
+-------------------------------+-----+---+---------+
|                          chunk|begin|end|    label|
+-------------------------------+-----+---+---------+
|                           CD20|   97|100|Biomarker|
|                           CD34|  103|106|Biomarker|
|                           CD38|  109|112|Biomarker|
|                           CD58|  115|118|Biomarker|
|                          CD66c|  121|125|Biomarker|
|                          CD123|  128|132|Biomarker|
|                         HLA-DR|  135|140|Biomarker|
|                         cCD79a|  143|148|Biomarker|
|                            TdT|  155|157|Biomarker|
|            serum tumor markers|  195|213|Biomarker|
|        cytokeratin 19 fragment|  240|262|Biomarker|
|                      Cyfra21-1|  265|273|Biomarker|
|        neuron-specific enolase|  289|311|Biomarker|
|                            NSE|  314|316|Biomarker|
|squamous cell carcinoma antigen|  337|367|Biomarker|
|                           SCCA|  370|373|Biomarker|
+-------------------------------+-----+---+---------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|biomarker_matcher|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[matched_text]|
|Language:|en|
|Size:|26.8 KB|
|Case sensitive:|false|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="biomarker" /><category term="textmatcher" /><summary type="html">Description Extracts biomarker entities using rule based TextMatcherInternal annotator. Predicted Entities Biomarker Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;token&quot;) text_matcher = TextMatcherInternalModel.pretrained(&quot;biomarker_matcher&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;, &quot;token&quot;])\ .setOutputCol(&quot;matched_text&quot;)\ mathcer_pipeline = Pipeline().setStages([ documentAssembler, tokenizer, text_matcher]) data = spark.createDataFrame([[&quot;In the bone- marrow (BM) aspiration, blasts accounted for 88.1% of ANCs, which were positive for CD20, CD34, CD38, CD58, CD66c, CD123, HLA-DR, cCD79a, and TdT on flow cytometry. Measurements of serum tumor markers showed elevated level of cytokeratin 19 fragment (Cyfra21-1: 4.77 ng/mL), neuron-specific enolase (NSE: 19.60 ng/mL), and squamous cell carcinoma antigen (SCCA: 2.58 ng/mL).&quot;]]).toDF(&quot;text&quot;) matcher_model = mathcer_pipeline.fit(data) result = matcher_model.transform(data) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;token&quot;) val text_matcher = TextMatcherInternalModel.pretrained(&quot;biomarker_matcher&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;,&quot;token&quot;)) .setOutputCol(&quot;matched_text&quot;) val mathcer_pipeline = new Pipeline() .setStages(Array(documentAssembler, tokenizer, text_matcher)) val data = Seq(&quot;In the bone- marrow (BM) aspiration, blasts accounted for 88.1% of ANCs, which were positive for CD20, CD34, CD38, CD58, CD66c, CD123, HLA-DR, cCD79a, and TdT on flow cytometry. Measurements of serum tumor markers showed elevated level of cytokeratin 19 fragment (Cyfra21-1: 4.77 ng/mL), neuron-specific enolase (NSE: 19.60 ng/mL), and squamous cell carcinoma antigen (SCCA: 2.58 ng/mL).&quot;) .toDF(&quot;text&quot;) val matcher_model = mathcer_pipeline.fit(data) val result = matcher_model.transform(data) Results +-------------------------------+-----+---+---------+ | chunk|begin|end| label| +-------------------------------+-----+---+---------+ | CD20| 97|100|Biomarker| | CD34| 103|106|Biomarker| | CD38| 109|112|Biomarker| | CD58| 115|118|Biomarker| | CD66c| 121|125|Biomarker| | CD123| 128|132|Biomarker| | HLA-DR| 135|140|Biomarker| | cCD79a| 143|148|Biomarker| | TdT| 155|157|Biomarker| | serum tumor markers| 195|213|Biomarker| | cytokeratin 19 fragment| 240|262|Biomarker| | Cyfra21-1| 265|273|Biomarker| | neuron-specific enolase| 289|311|Biomarker| | NSE| 314|316|Biomarker| |squamous cell carcinoma antigen| 337|367|Biomarker| | SCCA| 370|373|Biomarker| +-------------------------------+-----+---+---------+ Model Information Model Name: biomarker_matcher Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [matched_text] Language: en Size: 26.8 KB Case sensitive: false</summary></entry><entry><title type="html">Mapping CPT Codes with Their Corresponding UMLS Codes</title><link href="/2024/02/27/cpt_umls_mapper_en.html" rel="alternate" type="text/html" title="Mapping CPT Codes with Their Corresponding UMLS Codes" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>/2024/02/27/cpt_umls_mapper_en</id><content type="html" xml:base="/2024/02/27/cpt_umls_mapper_en.html">## Description

This pretrained model maps CPT codes to corresponding UMLS codes.

## Predicted Entities

`umls_code`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/cpt_umls_mapper_en_5.2.1_3.0_1709067375032.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/cpt_umls_mapper_en_5.2.1_3.0_1709067375032.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
	
```python
document_assembler = DocumentAssembler()\
    .setInputCol('text')\
    .setOutputCol('doc')

chunk_assembler = Doc2Chunk()\
    .setInputCols(['doc'])\
    .setOutputCol('cpt_code')
 
mapperModel = ChunkMapperModel.pretrained(&quot;cpt_umls_mapper&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;cpt_code&quot;])\
    .setOutputCol(&quot;mappings&quot;)\

mapper_pipeline = Pipeline(stages=[
    document_assembler,
    chunk_assembler,
    mapperModel
])

data = spark.createDataFrame([[&quot;2016F&quot;],[&quot;48155&quot;],[&quot;64823&quot;],[&quot;4500F&quot;]]).toDF(&quot;text&quot;)

mapper_model = mapper_pipeline.fit(data)
result= mapper_model.transform(data)                                 
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;doc&quot;)
	
val chunk_assembler = new Doc2Chunk()
    .setInputCols(Array(&quot;doc&quot;))
    .setOutputCol(&quot;cpt_code&quot;)
	
val mapperModel = ChunkMapperModel.pretrained(&quot;cpt_umls_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;cpt_code&quot;))
    .setOutputCol(&quot;mappings&quot;)
	
val mapper_pipeline = new Pipeline().setStages(Array(
    document_assembler, 
    chunk_assembler, 
    mapperModel ))
	
val data = Seq(&quot;2016F&quot;, &quot;48155&quot;, &quot;64823&quot;, &quot;4500F&quot;).toDF(&quot;text&quot;)
	
val mapper_model = mapper_pipeline.fit(data)
result= mapper_model.transform(data)
```
&lt;/div&gt;

## Results

```bash
+--------+---------+
|cpt_code|umls_code|
+--------+---------+
|2016F   |C3248275 |
|48155   |C0040511 |
|64823   |C0973430 |
|4500F   |C3248301 |
+--------+---------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|cpt_umls_mapper|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[ner_chunk]|
|Output Labels:|[mappings]|
|Language:|en|
|Size:|319.8 KB|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="cpt" /><category term="umls" /><category term="mapping" /><summary type="html">Description This pretrained model maps CPT codes to corresponding UMLS codes. Predicted Entities umls_code Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol('text')\ .setOutputCol('doc') chunk_assembler = Doc2Chunk()\ .setInputCols(['doc'])\ .setOutputCol('cpt_code') mapperModel = ChunkMapperModel.pretrained(&quot;cpt_umls_mapper&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;cpt_code&quot;])\ .setOutputCol(&quot;mappings&quot;)\ mapper_pipeline = Pipeline(stages=[ document_assembler, chunk_assembler, mapperModel ]) data = spark.createDataFrame([[&quot;2016F&quot;],[&quot;48155&quot;],[&quot;64823&quot;],[&quot;4500F&quot;]]).toDF(&quot;text&quot;) mapper_model = mapper_pipeline.fit(data) result= mapper_model.transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;doc&quot;) val chunk_assembler = new Doc2Chunk() .setInputCols(Array(&quot;doc&quot;)) .setOutputCol(&quot;cpt_code&quot;) val mapperModel = ChunkMapperModel.pretrained(&quot;cpt_umls_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;cpt_code&quot;)) .setOutputCol(&quot;mappings&quot;) val mapper_pipeline = new Pipeline().setStages(Array( document_assembler, chunk_assembler, mapperModel )) val data = Seq(&quot;2016F&quot;, &quot;48155&quot;, &quot;64823&quot;, &quot;4500F&quot;).toDF(&quot;text&quot;) val mapper_model = mapper_pipeline.fit(data) result= mapper_model.transform(data) Results +--------+---------+ |cpt_code|umls_code| +--------+---------+ |2016F |C3248275 | |48155 |C0040511 | |64823 |C0973430 | |4500F |C3248301 | +--------+---------+ Model Information Model Name: cpt_umls_mapper Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [ner_chunk] Output Labels: [mappings] Language: en Size: 319.8 KB</summary></entry><entry><title type="html">Mapping UMLS Codes with Their Corresponding CPT Codes</title><link href="/2024/02/27/umls_cpt_mapper_en.html" rel="alternate" type="text/html" title="Mapping UMLS Codes with Their Corresponding CPT Codes" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>/2024/02/27/umls_cpt_mapper_en</id><content type="html" xml:base="/2024/02/27/umls_cpt_mapper_en.html">## Description

This pretrained model maps UMLS codes to corresponding CPT codes.

## Predicted Entities

`cpt_code`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/umls_cpt_mapper_en_5.2.1_3.0_1709066255479.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/umls_cpt_mapper_en_5.2.1_3.0_1709066255479.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
	
```python
document_assembler = DocumentAssembler()\
    .setInputCol('text')\
    .setOutputCol('doc')

chunkAssembler = Doc2Chunk()\
    .setInputCols(&quot;doc&quot;)\
    .setOutputCol(&quot;umls_code&quot;)\

chunkerMapper = ChunkMapperModel.pretrained(&quot;umls_cpt_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;umls_code&quot;])\
    .setOutputCol(&quot;mappings&quot;)\

mapper_pipeline = Pipeline(stages=[
    document_assembler,
    chunkAssembler,
    chunkerMapper
])

data = spark.createDataFrame([[&quot;C3248275&quot;],[&quot;C3496535&quot;],[&quot;C0973430&quot;],[&quot;C3248301&quot;]]).toDF(&quot;text&quot;)

mapper_model = mapper_pipeline.fit(data)
result= mapper_model.transform(data)                                 
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;doc&quot;)
	
val chunkAssembler = new Doc2Chunk()
    .setInputCols(&quot;doc&quot;)
    .setOutputCol(&quot;umls_code&quot;)
	
val chunkerMapper = ChunkMapperModel.pretrained(&quot;umls_cpt_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;umls_code&quot;))
    .setOutputCol(&quot;mappings&quot;)
	
val mapper_pipeline = new Pipeline().setStages(Array( 
    document_assembler,
    chunkAssembler,
    chunkerMapper))
	
val data = Seq(&quot;C3248275&quot;, &quot;C3496535&quot;, &quot;C0973430&quot;, &quot;C3248301&quot;).toDF(&quot;text&quot;)
	
val mapper_model = mapper_pipeline.fit(data)
result= mapper_model.transform(data)
```
&lt;/div&gt;

## Results

```bash
+---------+--------+
|umls_code|cpt_code|
+---------+--------+
|C3248275 |2016F   |
|C3496535 |48155   |
|C0973430 |64823   |
|C3248301 |4500F   |
+---------+--------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|umls_cpt_mapper|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[ner_chunk]|
|Output Labels:|[mappings]|
|Language:|en|
|Size:|601.8 KB|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="umls" /><category term="cpt" /><category term="mapping" /><summary type="html">Description This pretrained model maps UMLS codes to corresponding CPT codes. Predicted Entities cpt_code Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol('text')\ .setOutputCol('doc') chunkAssembler = Doc2Chunk()\ .setInputCols(&quot;doc&quot;)\ .setOutputCol(&quot;umls_code&quot;)\ chunkerMapper = ChunkMapperModel.pretrained(&quot;umls_cpt_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;umls_code&quot;])\ .setOutputCol(&quot;mappings&quot;)\ mapper_pipeline = Pipeline(stages=[ document_assembler, chunkAssembler, chunkerMapper ]) data = spark.createDataFrame([[&quot;C3248275&quot;],[&quot;C3496535&quot;],[&quot;C0973430&quot;],[&quot;C3248301&quot;]]).toDF(&quot;text&quot;) mapper_model = mapper_pipeline.fit(data) result= mapper_model.transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;doc&quot;) val chunkAssembler = new Doc2Chunk() .setInputCols(&quot;doc&quot;) .setOutputCol(&quot;umls_code&quot;) val chunkerMapper = ChunkMapperModel.pretrained(&quot;umls_cpt_mapper&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;umls_code&quot;)) .setOutputCol(&quot;mappings&quot;) val mapper_pipeline = new Pipeline().setStages(Array( document_assembler, chunkAssembler, chunkerMapper)) val data = Seq(&quot;C3248275&quot;, &quot;C3496535&quot;, &quot;C0973430&quot;, &quot;C3248301&quot;).toDF(&quot;text&quot;) val mapper_model = mapper_pipeline.fit(data) result= mapper_model.transform(data) Results +---------+--------+ |umls_code|cpt_code| +---------+--------+ |C3248275 |2016F | |C3496535 |48155 | |C0973430 |64823 | |C3248301 |4500F | +---------+--------+ Model Information Model Name: umls_cpt_mapper Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [ner_chunk] Output Labels: [mappings] Language: en Size: 601.8 KB</summary></entry><entry><title type="html">Pipeline to Resolve Medication Codes</title><link href="/2024/02/27/medication_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Resolve Medication Codes" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>/2024/02/27/medication_resolver_pipeline_en</id><content type="html" xml:base="/2024/02/27/medication_resolver_pipeline_en.html">## Description

A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text.

Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication.

This pipeline can be used as Lightpipeline (with `annotate/fullAnnotate`). You can use `medication_resolver_transform_pipeline` for Spark transform.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/medication_resolver_pipeline_en_5.2.1_3.4_1709057958694.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/medication_resolver_pipeline_en_5.2.1_3.4_1709057958694.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;

result = med_resolver_pipeline.fullAnnotate(text)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val med_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = med_resolver_pipeline.fullAnnotate(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|chunk                       |ner_label|ADE                        |RxNorm |Action                    |Treatment                                 |UMLS    |SNOMED_CT|NDC_Product|NDC_Package  |
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|Amlodopine Vallarta 10-320mg|DRUG     |Gynaecomastia              |722131 |NONE                      |NONE                                      |C1949334|425838008|00093-7693 |00093-7693-56|
|Eviplera                    |DRUG     |Anxiety                    |217010 |Inhibitory Bone Resorption|Osteoporosis                              |C0720318|NONE     |NONE       |NONE         |
|Lescol 40 MG                |DRUG     |NONE                       |103919 |Hypocholesterolemic       |Heterozygous Familial Hypercholesterolemia|C0353573|NONE     |00078-0234 |00078-0234-05|
|Everolimus 1.5 mg tablet    |DRUG     |Acute myocardial infarction|2056895|NONE                      |NONE                                      |C4723581|NONE     |00054-0604 |00054-0604-21|
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|medication_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|3.4 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- TextMatcherInternalModel
- ChunkMergeModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperFilterer
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel
- ResolverMerger
- ResolverMerger
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="resolver" /><category term="rxnorm" /><category term="medication" /><category term="ndc" /><category term="snomed" /><category term="ade" /><category term="umls" /><category term="pipeline" /><category term="en" /><category term="licensed" /><summary type="html">Description A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text. Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication. This pipeline can be used as Lightpipeline (with annotate/fullAnnotate). You can use medication_resolver_transform_pipeline for Spark transform. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot; result = med_resolver_pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val med_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = med_resolver_pipeline.fullAnnotate(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;) Results +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |chunk |ner_label|ADE |RxNorm |Action |Treatment |UMLS |SNOMED_CT|NDC_Product|NDC_Package | +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |Amlodopine Vallarta 10-320mg|DRUG |Gynaecomastia |722131 |NONE |NONE |C1949334|425838008|00093-7693 |00093-7693-56| |Eviplera |DRUG |Anxiety |217010 |Inhibitory Bone Resorption|Osteoporosis |C0720318|NONE |NONE |NONE | |Lescol 40 MG |DRUG |NONE |103919 |Hypocholesterolemic |Heterozygous Familial Hypercholesterolemia|C0353573|NONE |00078-0234 |00078-0234-05| |Everolimus 1.5 mg tablet |DRUG |Acute myocardial infarction|2056895|NONE |NONE |C4723581|NONE |00054-0604 |00054-0604-21| +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ Model Information Model Name: medication_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 3.4 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel TextMatcherInternalModel ChunkMergeModel ChunkMapperModel ChunkMapperModel ChunkMapperFilterer Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel ResolverMerger ResolverMerger ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel Finisher</summary></entry><entry><title type="html">Pipeline to Resolve Medication Codes(Transform)</title><link href="/2024/02/27/medication_resolver_transform_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Resolve Medication Codes(Transform)" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>/2024/02/27/medication_resolver_transform_pipeline_en</id><content type="html" xml:base="/2024/02/27/medication_resolver_transform_pipeline_en.html">## Description

A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text.

Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication.

This pipeline can be used with Spark transform. You can use `medication_resolver_pipeline` as Lightpipeline (with `annotate/fullAnnotate`).

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/medication_resolver_transform_pipeline_en_5.2.1_3.4_1709057307229.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/medication_resolver_transform_pipeline_en_5.2.1_3.4_1709057307229.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_transform_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;

data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;)

result = medication_resolver_pipeline.transform(data)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val medication_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_transform_pipeline&quot;,, &quot;en&quot;, &quot;clinical/models&quot;)

val data = Seq(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;)

val result = medication_resolver_pipeline.fit(data).transform(data)

```
&lt;/div&gt;

## Results

```bash
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|chunk                       |ner_label|ADE                        |RxNorm |Action                    |Treatment                                 |UMLS    |SNOMED_CT|NDC_Product|NDC_Package  |
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|Amlodopine Vallarta 10-320mg|DRUG     |Gynaecomastia              |722131 |NONE                      |NONE                                      |C1949334|425838008|00093-7693 |00093-7693-56|
|Eviplera                    |DRUG     |Anxiety                    |217010 |Inhibitory Bone Resorption|Osteoporosis                              |C0720318|NONE     |NONE       |NONE         |
|Lescol 40 MG                |DRUG     |NONE                       |103919 |Hypocholesterolemic       |Heterozygous Familial Hypercholesterolemia|C0353573|NONE     |00078-0234 |00078-0234-05|
|Everolimus 1.5 mg tablet    |DRUG     |Acute myocardial infarction|2056895|NONE                      |NONE                                      |C4723581|NONE     |00054-0604 |00054-0604-21|
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|medication_resolver_transform_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|3.4 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- TextMatcherInternalModel
- ChunkMergeModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperFilterer
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel
- ResolverMerger
- Doc2Chunk
- ResolverMerger
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- Doc2Chunk
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="resolver" /><category term="rxnorm" /><category term="medication" /><category term="ndc" /><category term="snomed" /><category term="ade" /><category term="umls" /><category term="pipeline" /><category term="en" /><category term="licensed" /><summary type="html">Description A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text. Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication. This pipeline can be used with Spark transform. You can use medication_resolver_pipeline as Lightpipeline (with annotate/fullAnnotate). Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_transform_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot; data = spark.createDataFrame([[text]]).toDF(&quot;text&quot;) result = medication_resolver_pipeline.transform(data) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val medication_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_transform_pipeline&quot;,, &quot;en&quot;, &quot;clinical/models&quot;) val data = Seq(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;).toDS.toDF(&quot;text&quot;) val result = medication_resolver_pipeline.fit(data).transform(data) Results +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |chunk |ner_label|ADE |RxNorm |Action |Treatment |UMLS |SNOMED_CT|NDC_Product|NDC_Package | +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |Amlodopine Vallarta 10-320mg|DRUG |Gynaecomastia |722131 |NONE |NONE |C1949334|425838008|00093-7693 |00093-7693-56| |Eviplera |DRUG |Anxiety |217010 |Inhibitory Bone Resorption|Osteoporosis |C0720318|NONE |NONE |NONE | |Lescol 40 MG |DRUG |NONE |103919 |Hypocholesterolemic |Heterozygous Familial Hypercholesterolemia|C0353573|NONE |00078-0234 |00078-0234-05| |Everolimus 1.5 mg tablet |DRUG |Acute myocardial infarction|2056895|NONE |NONE |C4723581|NONE |00054-0604 |00054-0604-21| +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ Model Information Model Name: medication_resolver_transform_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 3.4 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel TextMatcherInternalModel ChunkMergeModel ChunkMapperModel ChunkMapperModel ChunkMapperFilterer Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel ResolverMerger Doc2Chunk ResolverMerger ChunkMapperModel ChunkMapperModel ChunkMapperModel Doc2Chunk ChunkMapperModel ChunkMapperModel ChunkMapperModel Finisher</summary></entry><entry><title type="html">Pipeline to Resolve Medication Codes</title><link href="/2024/02/27/medication_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline to Resolve Medication Codes" /><published>2024-02-27T00:00:00+00:00</published><updated>2024-02-27T00:00:00+00:00</updated><id>/2024/02/27/medication_resolver_pipeline_en</id><content type="html" xml:base="/2024/02/27/medication_resolver_pipeline_en.html">## Description

A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text.

Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication.

This pipeline can be used as Lightpipeline (with `annotate/fullAnnotate`). You can use `medication_resolver_transform_pipeline` for Spark transform.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/medication_resolver_pipeline_en_5.2.1_3.0_1709055651634.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/medication_resolver_pipeline_en_5.2.1_3.0_1709055651634.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;

result = med_resolver_pipeline.fullAnnotate(text)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val med_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = med_resolver_pipeline.fullAnnotate(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|chunk                       |ner_label|ADE                        |RxNorm |Action                    |Treatment                                 |UMLS    |SNOMED_CT|NDC_Product|NDC_Package  |
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
|Amlodopine Vallarta 10-320mg|DRUG     |Gynaecomastia              |722131 |NONE                      |NONE                                      |C1949334|425838008|00093-7693 |00093-7693-56|
|Eviplera                    |DRUG     |Anxiety                    |217010 |Inhibitory Bone Resorption|Osteoporosis                              |C0720318|NONE     |NONE       |NONE         |
|Lescol 40 MG                |DRUG     |NONE                       |103919 |Hypocholesterolemic       |Heterozygous Familial Hypercholesterolemia|C0353573|NONE     |00078-0234 |00078-0234-05|
|Everolimus 1.5 mg tablet    |DRUG     |Acute myocardial infarction|2056895|NONE                      |NONE                                      |C4723581|NONE     |00054-0604 |00054-0604-21|
+----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|medication_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|3.4 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- TextMatcherInternalModel
- ChunkMergeModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperFilterer
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel
- ResolverMerger
- ResolverMerger
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- ChunkMapperModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="resolver" /><category term="rxnorm" /><category term="medication" /><category term="ndc" /><category term="snomed" /><category term="ade" /><category term="umls" /><category term="pipeline" /><category term="en" /><category term="licensed" /><summary type="html">Description A pretrained resolver pipeline to extract medications and resolve their adverse reactions (ADE), RxNorm, UMLS, NDC, SNOMED CT codes, and action/treatments in clinical text. Action/treatments are available for branded medication, and SNOMED codes are available for non-branded medication. This pipeline can be used as Lightpipeline (with annotate/fullAnnotate). You can use medication_resolver_transform_pipeline for Spark transform. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline medication_resolver_pipeline = PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot; result = med_resolver_pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val med_resolver_pipeline = new PretrainedPipeline(&quot;medication_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = med_resolver_pipeline.fullAnnotate(&quot;&quot;&quot;The patient was prescribed Amlodopine Vallarta 10-320mg, Eviplera. The other patient is given Lescol 40 MG and Everolimus 1.5 mg tablet.&quot;&quot;&quot;) Results +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |chunk |ner_label|ADE |RxNorm |Action |Treatment |UMLS |SNOMED_CT|NDC_Product|NDC_Package | +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ |Amlodopine Vallarta 10-320mg|DRUG |Gynaecomastia |722131 |NONE |NONE |C1949334|425838008|00093-7693 |00093-7693-56| |Eviplera |DRUG |Anxiety |217010 |Inhibitory Bone Resorption|Osteoporosis |C0720318|NONE |NONE |NONE | |Lescol 40 MG |DRUG |NONE |103919 |Hypocholesterolemic |Heterozygous Familial Hypercholesterolemia|C0353573|NONE |00078-0234 |00078-0234-05| |Everolimus 1.5 mg tablet |DRUG |Acute myocardial infarction|2056895|NONE |NONE |C4723581|NONE |00054-0604 |00054-0604-21| +----------------------------+---------+---------------------------+-------+--------------------------+------------------------------------------+--------+---------+-----------+-------------+ Model Information Model Name: medication_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 3.4 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel TextMatcherInternalModel ChunkMergeModel ChunkMapperModel ChunkMapperModel ChunkMapperFilterer Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel ResolverMerger ResolverMerger ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel ChunkMapperModel Finisher</summary></entry></feed>