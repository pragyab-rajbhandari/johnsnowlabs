<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-02-21T18:56:28+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Sentence Entity Resolver for SNOMED Concepts</title><link href="/2024/02/14/sbiobertresolve_snomed_auxConcepts_en.html" rel="alternate" type="text/html" title="Sentence Entity Resolver for SNOMED Concepts" /><published>2024-02-14T00:00:00+00:00</published><updated>2024-02-14T00:00:00+00:00</updated><id>/2024/02/14/sbiobertresolve_snomed_auxConcepts_en</id><content type="html" xml:base="/2024/02/14/sbiobertresolve_snomed_auxConcepts_en.html">## Description

This model maps clinical entities and concepts to Snomed codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings. This is also capable of extracting `Morph Abnormality`, `Clinical Drug`, `Clinical Drug Form`, `Procedure`, `Substance`, `Physical Object`, and `Body Structure` concepts of Snomed codes.

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_snomed_auxConcepts_en_5.2.1_3.0_1707938389782.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_snomed_auxConcepts_en_5.2.1_3.0_1707938389782.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
documentAssembler = DocumentAssembler()\
      .setInputCol(&quot;text&quot;)\
      .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
      .setInputCols([&quot;document&quot;])\
      .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
      .setInputCols([&quot;sentence&quot;]) \
      .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;, &quot;clinical/models&quot;)\
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
      .setOutputCol(&quot;embeddings&quot;)

ner_jsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
      .setOutputCol(&quot;ner_jsl&quot;)

ner_jsl_converter = NerConverter() \
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;]) \
      .setOutputCol(&quot;ner_jsl_chunk&quot;)\
      .setWhiteList([&quot;Procedure&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,&quot;Internal_organ_or_component&quot;,&quot;Modifier&quot;,&quot;BMI&quot;,&quot;LDL&quot;,&quot;External_body_part_or_region&quot;,&quot;Alcohol&quot;,&quot;Treatment&quot;,&quot;Test&quot;,&quot;Smoking&quot;])

chunk2doc = Chunk2Doc() \
      .setInputCols(&quot;ner_jsl_chunk&quot;) \
      .setOutputCol(&quot;ner_chunk_doc&quot;)

sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
     .setInputCols([&quot;ner_chunk_doc&quot;])\
     .setOutputCol(&quot;sbert_embeddings&quot;)\
     .setCaseSensitive(False)

snomed_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_auxConcepts&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
     .setInputCols([&quot;sbert_embeddings&quot;]) \
     .setOutputCol(&quot;snomed_code&quot;)\
     .setDistanceFunction(&quot;EUCLIDEAN&quot;)

nlpPipeline= Pipeline(stages=[
                              documentAssembler,
                              sentenceDetector,
                              tokenizer,
                              word_embeddings,
                              ner_jsl,
                              ner_jsl_converter,
                              chunk2doc,
                              sbert_embedder,
                              snomed_resolver
])

text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot;

df= spark.createDataFrame([[text]]).toDF(&quot;text&quot;)

result= nlpPipeline.fit(df).transform(df)
```
```scala
val documentAssembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val wordEmbeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
  .setOutputCol(&quot;embeddings&quot;)

val nerJsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
  .setOutputCol(&quot;ner_jsl&quot;)

val nerJslConverter = new NerConverter()
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;))
  .setOutputCol(&quot;ner_jsl_chunk&quot;)
  .setWhiteList(Array(&quot;Procedure&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,&quot;Internal_organ_or_component&quot;,&quot;Modifier&quot;,&quot;BMI&quot;,&quot;LDL&quot;,&quot;External_body_part_or_region&quot;,&quot;Alcohol&quot;,&quot;Treatment&quot;,&quot;Test&quot;,&quot;Smoking&quot;))

val chunk2doc = new Chunk2Doc()
  .setInputCols(Array(&quot;ner_jsl_chunk&quot;))
  .setOutputCol(&quot;ner_chunk_doc&quot;)

val sbertEmbedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;ner_chunk_doc&quot;))
  .setOutputCol(&quot;sbert_embeddings&quot;)
  .setCaseSensitive(False)

val snomedResolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_auxConcepts&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sbert_embeddings&quot;))
  .setOutputCol(&quot;snomed_code&quot;)
  .setDistanceFunction(&quot;EUCLIDEAN&quot;)

val nlpPipeline = new Pipeline().setStages(Array(
  documentAssembler,
  sentenceDetector,
  tokenizer,
  wordEmbeddings,
  nerJsl,
  nerJslConverter,
  chunk2doc,
  sbertEmbedder,
  snomedResolver
))

val text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot;

val df = Seq(text).toDF(&quot;text&quot;)

val result = nlpPipeline.fit(df).transform(df)

```
&lt;/div&gt;

## Results

```bash
+-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|                  chunk|          label|snomed_code|             resolution|                                         all_codes|                                   all_resolutions|                                    all_aux_labels|
+-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|                tobacco|        Smoking|   57264008|                tobacco|57264008:::102407002:::39953003:::159882006:::1...|tobacco:::tobacco smoke:::tobacco - substance::...|Organism:::Substance:::Substance:::Social Conte...|
|            nonspecific|       Modifier|   10003008|           non-specific|10003008:::261992003:::863956004:::300844001:::...|non-specific:::non-biological:::non-sterile:::n...|Qualifier Value:::Qualifier Value:::Qualifier V...|
|cardiac catheterization|      Procedure|   41976001|cardiac catheterization|41976001:::705923009:::721968000:::467735004:::...|cardiac catheterization:::cardiac catheter:::ca...|Procedure:::Physical Object:::Record Artifact::...|
|               atropine|Drug_Ingredient|   73949004|               atropine|73949004:::105075009:::349945006:::410493009:::...|atropine:::atropine measurement:::oral atropine...|Pharma/Biol Product:::Procedure:::Clinical Drug...|
|                 fluids|Drug_Ingredient|  255765007|                  fluid|255765007:::246498002:::258442002:::251851008::...|fluid:::fluid used:::fluid sample:::fluid input...|Qualifier Value:::Attribute:::Specimen:::Observ...|
|               dopamine|Drug_Ingredient|   59187003|               dopamine|59187003:::412383006:::37484001:::32779004:::41...|dopamine:::dopamine agent:::dopamine receptor::...|Pharma/Biol Product:::Substance:::Substance:::P...|
+-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|sbiobertresolve_snomed_auxConcepts|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence_embeddings]|
|Output Labels:|[snomed_code]|
|Language:|en|
|Size:|1.5 GB|
|Case sensitive:|false|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="resolver" /><category term="auxconcepts" /><summary type="html">Description This model maps clinical entities and concepts to Snomed codes using sbiobert_base_cased_mli Sentence Bert Embeddings. This is also capable of extracting Morph Abnormality, Clinical Drug, Clinical Drug Form, Procedure, Substance, Physical Object, and Body Structure concepts of Snomed codes. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_jsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;ner_jsl&quot;) ner_jsl_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;]) \ .setOutputCol(&quot;ner_jsl_chunk&quot;)\ .setWhiteList([&quot;Procedure&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,&quot;Internal_organ_or_component&quot;,&quot;Modifier&quot;,&quot;BMI&quot;,&quot;LDL&quot;,&quot;External_body_part_or_region&quot;,&quot;Alcohol&quot;,&quot;Treatment&quot;,&quot;Test&quot;,&quot;Smoking&quot;]) chunk2doc = Chunk2Doc() \ .setInputCols(&quot;ner_jsl_chunk&quot;) \ .setOutputCol(&quot;ner_chunk_doc&quot;) sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;ner_chunk_doc&quot;])\ .setOutputCol(&quot;sbert_embeddings&quot;)\ .setCaseSensitive(False) snomed_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_auxConcepts&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;sbert_embeddings&quot;]) \ .setOutputCol(&quot;snomed_code&quot;)\ .setDistanceFunction(&quot;EUCLIDEAN&quot;) nlpPipeline= Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, ner_jsl, ner_jsl_converter, chunk2doc, sbert_embedder, snomed_resolver ]) text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot; df= spark.createDataFrame([[text]]).toDF(&quot;text&quot;) result= nlpPipeline.fit(df).transform(df) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val wordEmbeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val nerJsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner_jsl&quot;) val nerJslConverter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;)) .setOutputCol(&quot;ner_jsl_chunk&quot;) .setWhiteList(Array(&quot;Procedure&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,&quot;Internal_organ_or_component&quot;,&quot;Modifier&quot;,&quot;BMI&quot;,&quot;LDL&quot;,&quot;External_body_part_or_region&quot;,&quot;Alcohol&quot;,&quot;Treatment&quot;,&quot;Test&quot;,&quot;Smoking&quot;)) val chunk2doc = new Chunk2Doc() .setInputCols(Array(&quot;ner_jsl_chunk&quot;)) .setOutputCol(&quot;ner_chunk_doc&quot;) val sbertEmbedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;ner_chunk_doc&quot;)) .setOutputCol(&quot;sbert_embeddings&quot;) .setCaseSensitive(False) val snomedResolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_auxConcepts&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sbert_embeddings&quot;)) .setOutputCol(&quot;snomed_code&quot;) .setDistanceFunction(&quot;EUCLIDEAN&quot;) val nlpPipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, wordEmbeddings, nerJsl, nerJslConverter, chunk2doc, sbertEmbedder, snomedResolver )) val text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot; val df = Seq(text).toDF(&quot;text&quot;) val result = nlpPipeline.fit(df).transform(df) Results +-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | chunk| label|snomed_code| resolution| all_codes| all_resolutions| all_aux_labels| +-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | tobacco| Smoking| 57264008| tobacco|57264008:::102407002:::39953003:::159882006:::1...|tobacco:::tobacco smoke:::tobacco - substance::...|Organism:::Substance:::Substance:::Social Conte...| | nonspecific| Modifier| 10003008| non-specific|10003008:::261992003:::863956004:::300844001:::...|non-specific:::non-biological:::non-sterile:::n...|Qualifier Value:::Qualifier Value:::Qualifier V...| |cardiac catheterization| Procedure| 41976001|cardiac catheterization|41976001:::705923009:::721968000:::467735004:::...|cardiac catheterization:::cardiac catheter:::ca...|Procedure:::Physical Object:::Record Artifact::...| | atropine|Drug_Ingredient| 73949004| atropine|73949004:::105075009:::349945006:::410493009:::...|atropine:::atropine measurement:::oral atropine...|Pharma/Biol Product:::Procedure:::Clinical Drug...| | fluids|Drug_Ingredient| 255765007| fluid|255765007:::246498002:::258442002:::251851008::...|fluid:::fluid used:::fluid sample:::fluid input...|Qualifier Value:::Attribute:::Specimen:::Observ...| | dopamine|Drug_Ingredient| 59187003| dopamine|59187003:::412383006:::37484001:::32779004:::41...|dopamine:::dopamine agent:::dopamine receptor::...|Pharma/Biol Product:::Substance:::Substance:::P...| +-----------------------+---------------+-----------+-----------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ Model Information Model Name: sbiobertresolve_snomed_auxConcepts Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence_embeddings] Output Labels: [snomed_code] Language: en Size: 1.5 GB Case sensitive: false</summary></entry><entry><title type="html">Sentence Entity Resolver for SNOMED Concepts</title><link href="/2024/02/14/sbiobertresolve_snomed_findings_auxConcepts_en.html" rel="alternate" type="text/html" title="Sentence Entity Resolver for SNOMED Concepts" /><published>2024-02-14T00:00:00+00:00</published><updated>2024-02-14T00:00:00+00:00</updated><id>/2024/02/14/sbiobertresolve_snomed_findings_auxConcepts_en</id><content type="html" xml:base="/2024/02/14/sbiobertresolve_snomed_findings_auxConcepts_en.html">## Description

This model maps clinical entities and concepts to SNOMED codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings. This is also capable of extracting `Clinical Findings `, `Morph Abnormality`, `Clinical Drug`, `Clinical Drug Form`, `Procedure`, `Substance`, `Physical Object`, and `Body Structure` concepts of SNOMED codes.

## Predicted Entities



{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_snomed_findings_auxConcepts_en_5.2.1_3.0_1707933775763.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_snomed_findings_auxConcepts_en_5.2.1_3.0_1707933775763.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
documentAssembler = DocumentAssembler()\
      .setInputCol(&quot;text&quot;)\
      .setOutputCol(&quot;document&quot;)

sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
      .setInputCols([&quot;document&quot;])\
      .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer()\
      .setInputCols([&quot;sentence&quot;])\
      .setOutputCol(&quot;token&quot;)

word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;, &quot;clinical/models&quot;)\
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\
      .setOutputCol(&quot;embeddings&quot;)

ner_jsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;])\
      .setOutputCol(&quot;ner_jsl&quot;)

ner_jsl_converter = NerConverter()\
      .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;])\
      .setOutputCol(&quot;ner_jsl_chunk&quot;)\
      .setWhiteList([&quot;Procedure&quot;,&quot;Kidney_Disease&quot;,&quot;Cerebrovascular_Disease&quot;,&quot;Heart_Disease&quot;,
                     &quot;Disease_Syndrome_Disorder&quot;, &quot;ImagingFindings&quot;, &quot;Symptom&quot;, &quot;VS_Finding&quot;,
                     &quot;EKG_Findings&quot;, &quot;Communicable_Disease&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,
                     &quot;Internal_organ_or_component&quot;,&quot;External_body_part_or_region&quot;,&quot;Modifier&quot;,
                     &quot;Triglycerides&quot;,&quot;Alcohol&quot;,&quot;Smoking&quot;,&quot;Pregnancy&quot;,&quot;Hypertension&quot;,&quot;Obesity&quot;,
                     &quot;Injury_or_Poisoning&quot;,&quot;Test&quot;,&quot;Hyperlipidemia&quot;,&quot;BMI&quot;,&quot;Oncological&quot;,&quot;Psychological_Condition&quot;,&quot;LDL&quot;,&quot;Diabetes&quot;])

chunk2doc = Chunk2Doc()\
      .setInputCols(&quot;ner_jsl_chunk&quot;)\
      .setOutputCol(&quot;ner_chunk_doc&quot;)

sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
     .setInputCols([&quot;ner_chunk_doc&quot;])\
     .setOutputCol(&quot;sbert_embeddings&quot;)\
     .setCaseSensitive(False)

snomed_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_findings_aux_concepts&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
     .setInputCols([&quot;sbert_embeddings&quot;])\
     .setOutputCol(&quot;snomed_code&quot;)\
     .setDistanceFunction(&quot;EUCLIDEAN&quot;)

nlpPipeline= Pipeline(stages=[
                              documentAssembler,
                              sentenceDetector,
                              tokenizer,
                              word_embeddings,
                              ner_jsl,
                              ner_jsl_converter,
                              chunk2doc,
                              sbert_embedder,
                              snomed_resolver
])

text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot;

df= spark.createDataFrame([[text]]).toDF(&quot;text&quot;)

result= nlpPipeline.fit(df).transform(df)
```
```scala
val documentAssembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val wordEmbeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
  .setOutputCol(&quot;embeddings&quot;)

val nerJsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
  .setOutputCol(&quot;ner_jsl&quot;)

val nerJslConverter = new NerConverter()
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;))
  .setOutputCol(&quot;ner_jsl_chunk&quot;)
  .setWhiteList(Array(&quot;Procedure&quot;,&quot;Kidney_Disease&quot;,&quot;Cerebrovascular_Disease&quot;,&quot;Heart_Disease&quot;,
                     &quot;Disease_Syndrome_Disorder&quot;, &quot;ImagingFindings&quot;, &quot;Symptom&quot;, &quot;VS_Finding&quot;,
                     &quot;EKG_Findings&quot;, &quot;Communicable_Disease&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;,
                     &quot;Internal_organ_or_component&quot;,&quot;External_body_part_or_region&quot;,&quot;Modifier&quot;,
                     &quot;Triglycerides&quot;,&quot;Alcohol&quot;,&quot;Smoking&quot;,&quot;Pregnancy&quot;,&quot;Hypertension&quot;,&quot;Obesity&quot;,
                     &quot;Injury_or_Poisoning&quot;,&quot;Test&quot;,&quot;Hyperlipidemia&quot;,&quot;BMI&quot;,&quot;Oncological&quot;,&quot;Psychological_Condition&quot;,&quot;LDL&quot;,&quot;Diabetes&quot;))

val chunk2doc = new Chunk2Doc()
  .setInputCols(Array(&quot;ner_jsl_chunk&quot;))
  .setOutputCol(&quot;ner_chunk_doc&quot;)

val sbertEmbedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;ner_chunk_doc&quot;))
  .setOutputCol(&quot;sbert_embeddings&quot;)
  .setCaseSensitive(false)

val snomedResolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_findings_aux_concepts&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sbert_embeddings&quot;))
  .setOutputCol(&quot;snomed_code&quot;)
  .setDistanceFunction(&quot;EUCLIDEAN&quot;)

val nlpPipeline = new Pipeline().setStages(Array(
  documentAssembler,
  sentenceDetector,
  tokenizer,
  wordEmbeddings,
  nerJsl,
  nerJslConverter,
  chunk2doc,
  sbertEmbedder,
  snomedResolver
))

val text = &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot;

val df = Seq(text).toDF(&quot;text&quot;)

val result = nlpPipeline.fit(df).transform(df)

```
&lt;/div&gt;

## Results

```bash
+--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|                                             chunk|                    label|snomed_code|                                        resolution|                                         all_codes|                                   all_resolutions|                                    all_aux_labels|
+--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|                                           tobacco|                  Smoking|   57264008|                                           tobacco|57264008:::102407002:::39953003:::110483000:::2...|tobacco:::tobacco smoke:::tobacco - substance::...|Organism:::Substance:::Substance:::Clinical Fin...|
|                                      hypertension|             Hypertension|   38341003|                                      hypertension|38341003:::59621000:::270440008:::31992008:::16...|hypertension:::essential hypertension:::hyperte...|Clinical Finding:::Clinical Finding:::Clinical ...|
|                       chronic renal insufficiency|           Kidney_Disease|  723190009|                       chronic renal insufficiency|723190009:::709044004:::90688005:::425369003:::...|chronic renal insufficiency:::chronic renal imp...|Clinical Finding:::Clinical Finding:::Clinical ...|
|                                              COPD|Disease_Syndrome_Disorder|   13645005|                                              copd|13645005:::414400006:::223821008:::60349006:::2...|copd:::coning:::cos:::ump:::ling:::chive:::caev...|Clinical Finding:::Clinical Finding:::Location:...|
|                                         gastritis|Disease_Syndrome_Disorder|    4556007|                                         gastritis|4556007:::235656001:::1086791000119100:::425410...|gastritis:::chemical gastritis:::erosive gastri...|Clinical Finding:::Clinical Finding:::Clinical ...|
|                                               TIA|  Cerebrovascular_Disease|  266257000|                                               tia|266257000:::31597007:::160363004:::396145008:::...|tia:::tui:::fh: tia:::tidac:::tu:::trna:::timor...|Clinical Finding:::Organism:::Context-dependent...|
|                                       nonspecific|                 Modifier|   10003008|                                      non-specific|10003008:::261992003:::863956004:::300844001:::...|non-specific:::non-biological:::non-sterile:::n...|Qualifier Value:::Qualifier Value:::Qualifier V...|
|                                  ST-T abnormality|             EKG_Findings|  428750005|                      nonspecific st-t abnormality|428750005:::399504009:::55930002:::455721000124...|nonspecific st-t abnormality:::clinical t categ...|Clinical Finding:::Observable Entity:::Clinical...|
|                           cardiac catheterization|                Procedure|   41976001|                           cardiac catheterization|41976001:::705923009:::721968000:::467735004:::...|cardiac catheterization:::cardiac catheter:::ca...|Procedure:::Physical Object:::Record Artifact::...|
|occlusion of the mid left anterior descending c...|                  Symptom|  840313007|occlusion of mid left anterior descending coron...|840313007:::44771000087108:::840315000:::447810...|occlusion of mid left anterior descending coron...|Clinical Finding:::No_Concept_Class:::Clinical ...|
|                                       hypotension|               VS_Finding|   45007003|                                       hypotension|45007003:::241727003:::19721008:::28651003:::67...|hypotension:::induced hypotension:::globe hypot...|Clinical Finding:::Procedure:::Clinical Finding...|
|                                       bradycardia|               VS_Finding|   48867003|                                       bradycardia|48867003:::49710005:::44273001:::42177007:::426...|bradycardia:::sinus bradycardia:::reflex bradyc...|Clinical Finding:::Clinical Finding:::Clinical ...|
|                                          atropine|          Drug_Ingredient|   73949004|                                          atropine|73949004:::105075009:::349945006:::410493009:::...|atropine:::atropine measurement:::oral atropine...|Pharma/Biol Product:::Procedure:::Clinical Drug...|
|                                            fluids|          Drug_Ingredient|  255765007|                                             fluid|255765007:::246498002:::258442002:::251851008::...|fluid:::fluid used:::fluid sample:::fluid input...|Qualifier Value:::Attribute:::Specimen:::Observ...|
|                                          dopamine|          Drug_Ingredient|   59187003|                                          dopamine|59187003:::412383006:::37484001:::32779004:::41...|dopamine:::dopamine agent:::dopamine receptor::...|Pharma/Biol Product:::Substance:::Substance:::P...|
|                                    vagal reaction|                  Symptom|  128968000|                                 vagal stimulation|128968000:::398665005:::106160007:::88882009:::...|vagal stimulation:::vaso vagal episode:::vagus ...|Procedure:::Clinical Finding:::Clinical Finding...|
+--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|sbiobertresolve_snomed_findings_auxConcepts|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence_embeddings]|
|Output Labels:|[snomed_code]|
|Language:|en|
|Size:|2.1 GB|
|Case sensitive:|false|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="resolver" /><category term="auxconcepts" /><category term="findings" /><summary type="html">Description This model maps clinical entities and concepts to SNOMED codes using sbiobert_base_cased_mli Sentence Bert Embeddings. This is also capable of extracting Clinical Findings , Morph Abnormality, Clinical Drug, Clinical Drug Form, Procedure, Substance, Physical Object, and Body Structure concepts of SNOMED codes. Predicted Entities Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer()\ .setInputCols([&quot;sentence&quot;])\ .setOutputCol(&quot;token&quot;) word_embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;,&quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;])\ .setOutputCol(&quot;embeddings&quot;) ner_jsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;])\ .setOutputCol(&quot;ner_jsl&quot;) ner_jsl_converter = NerConverter()\ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;])\ .setOutputCol(&quot;ner_jsl_chunk&quot;)\ .setWhiteList([&quot;Procedure&quot;,&quot;Kidney_Disease&quot;,&quot;Cerebrovascular_Disease&quot;,&quot;Heart_Disease&quot;, &quot;Disease_Syndrome_Disorder&quot;, &quot;ImagingFindings&quot;, &quot;Symptom&quot;, &quot;VS_Finding&quot;, &quot;EKG_Findings&quot;, &quot;Communicable_Disease&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;, &quot;Internal_organ_or_component&quot;,&quot;External_body_part_or_region&quot;,&quot;Modifier&quot;, &quot;Triglycerides&quot;,&quot;Alcohol&quot;,&quot;Smoking&quot;,&quot;Pregnancy&quot;,&quot;Hypertension&quot;,&quot;Obesity&quot;, &quot;Injury_or_Poisoning&quot;,&quot;Test&quot;,&quot;Hyperlipidemia&quot;,&quot;BMI&quot;,&quot;Oncological&quot;,&quot;Psychological_Condition&quot;,&quot;LDL&quot;,&quot;Diabetes&quot;]) chunk2doc = Chunk2Doc()\ .setInputCols(&quot;ner_jsl_chunk&quot;)\ .setOutputCol(&quot;ner_chunk_doc&quot;) sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;ner_chunk_doc&quot;])\ .setOutputCol(&quot;sbert_embeddings&quot;)\ .setCaseSensitive(False) snomed_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_findings_aux_concepts&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;sbert_embeddings&quot;])\ .setOutputCol(&quot;snomed_code&quot;)\ .setDistanceFunction(&quot;EUCLIDEAN&quot;) nlpPipeline= Pipeline(stages=[ documentAssembler, sentenceDetector, tokenizer, word_embeddings, ner_jsl, ner_jsl_converter, chunk2doc, sbert_embedder, snomed_resolver ]) text= &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot; df= spark.createDataFrame([[text]]).toDF(&quot;text&quot;) result= nlpPipeline.fit(df).transform(df) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val wordEmbeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val nerJsl = MedicalNerModel.pretrained(&quot;ner_jsl&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner_jsl&quot;) val nerJslConverter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner_jsl&quot;)) .setOutputCol(&quot;ner_jsl_chunk&quot;) .setWhiteList(Array(&quot;Procedure&quot;,&quot;Kidney_Disease&quot;,&quot;Cerebrovascular_Disease&quot;,&quot;Heart_Disease&quot;, &quot;Disease_Syndrome_Disorder&quot;, &quot;ImagingFindings&quot;, &quot;Symptom&quot;, &quot;VS_Finding&quot;, &quot;EKG_Findings&quot;, &quot;Communicable_Disease&quot;,&quot;Substance&quot;,&quot;Drug_Ingredient&quot;, &quot;Internal_organ_or_component&quot;,&quot;External_body_part_or_region&quot;,&quot;Modifier&quot;, &quot;Triglycerides&quot;,&quot;Alcohol&quot;,&quot;Smoking&quot;,&quot;Pregnancy&quot;,&quot;Hypertension&quot;,&quot;Obesity&quot;, &quot;Injury_or_Poisoning&quot;,&quot;Test&quot;,&quot;Hyperlipidemia&quot;,&quot;BMI&quot;,&quot;Oncological&quot;,&quot;Psychological_Condition&quot;,&quot;LDL&quot;,&quot;Diabetes&quot;)) val chunk2doc = new Chunk2Doc() .setInputCols(Array(&quot;ner_jsl_chunk&quot;)) .setOutputCol(&quot;ner_chunk_doc&quot;) val sbertEmbedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;ner_chunk_doc&quot;)) .setOutputCol(&quot;sbert_embeddings&quot;) .setCaseSensitive(false) val snomedResolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_snomed_findings_aux_concepts&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sbert_embeddings&quot;)) .setOutputCol(&quot;snomed_code&quot;) .setDistanceFunction(&quot;EUCLIDEAN&quot;) val nlpPipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, wordEmbeddings, nerJsl, nerJslConverter, chunk2doc, sbertEmbedder, snomedResolver )) val text = &quot;&quot;&quot;This is an 82-year-old male with a history of prior tobacco use, hypertension, chronic renal insufficiency, COPD, gastritis, and TIA. He initially presented to Braintree with a nonspecific ST-T abnormality and was transferred to St. Margaret’s Center. He underwent cardiac catheterization because of occlusion of the mid left anterior descending coronary artery lesion, which was complicated by hypotension and bradycardia. He required atropine, IV fluids, and dopamine, possibly secondary to a vagal reaction. He was subsequently transferred to the CCU for close monitoring. He was hemodynamically stable at the time of admission to the CCU.&quot;&quot;&quot; val df = Seq(text).toDF(&quot;text&quot;) val result = nlpPipeline.fit(df).transform(df) Results +--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | chunk| label|snomed_code| resolution| all_codes| all_resolutions| all_aux_labels| +--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | tobacco| Smoking| 57264008| tobacco|57264008:::102407002:::39953003:::110483000:::2...|tobacco:::tobacco smoke:::tobacco - substance::...|Organism:::Substance:::Substance:::Clinical Fin...| | hypertension| Hypertension| 38341003| hypertension|38341003:::59621000:::270440008:::31992008:::16...|hypertension:::essential hypertension:::hyperte...|Clinical Finding:::Clinical Finding:::Clinical ...| | chronic renal insufficiency| Kidney_Disease| 723190009| chronic renal insufficiency|723190009:::709044004:::90688005:::425369003:::...|chronic renal insufficiency:::chronic renal imp...|Clinical Finding:::Clinical Finding:::Clinical ...| | COPD|Disease_Syndrome_Disorder| 13645005| copd|13645005:::414400006:::223821008:::60349006:::2...|copd:::coning:::cos:::ump:::ling:::chive:::caev...|Clinical Finding:::Clinical Finding:::Location:...| | gastritis|Disease_Syndrome_Disorder| 4556007| gastritis|4556007:::235656001:::1086791000119100:::425410...|gastritis:::chemical gastritis:::erosive gastri...|Clinical Finding:::Clinical Finding:::Clinical ...| | TIA| Cerebrovascular_Disease| 266257000| tia|266257000:::31597007:::160363004:::396145008:::...|tia:::tui:::fh: tia:::tidac:::tu:::trna:::timor...|Clinical Finding:::Organism:::Context-dependent...| | nonspecific| Modifier| 10003008| non-specific|10003008:::261992003:::863956004:::300844001:::...|non-specific:::non-biological:::non-sterile:::n...|Qualifier Value:::Qualifier Value:::Qualifier V...| | ST-T abnormality| EKG_Findings| 428750005| nonspecific st-t abnormality|428750005:::399504009:::55930002:::455721000124...|nonspecific st-t abnormality:::clinical t categ...|Clinical Finding:::Observable Entity:::Clinical...| | cardiac catheterization| Procedure| 41976001| cardiac catheterization|41976001:::705923009:::721968000:::467735004:::...|cardiac catheterization:::cardiac catheter:::ca...|Procedure:::Physical Object:::Record Artifact::...| |occlusion of the mid left anterior descending c...| Symptom| 840313007|occlusion of mid left anterior descending coron...|840313007:::44771000087108:::840315000:::447810...|occlusion of mid left anterior descending coron...|Clinical Finding:::No_Concept_Class:::Clinical ...| | hypotension| VS_Finding| 45007003| hypotension|45007003:::241727003:::19721008:::28651003:::67...|hypotension:::induced hypotension:::globe hypot...|Clinical Finding:::Procedure:::Clinical Finding...| | bradycardia| VS_Finding| 48867003| bradycardia|48867003:::49710005:::44273001:::42177007:::426...|bradycardia:::sinus bradycardia:::reflex bradyc...|Clinical Finding:::Clinical Finding:::Clinical ...| | atropine| Drug_Ingredient| 73949004| atropine|73949004:::105075009:::349945006:::410493009:::...|atropine:::atropine measurement:::oral atropine...|Pharma/Biol Product:::Procedure:::Clinical Drug...| | fluids| Drug_Ingredient| 255765007| fluid|255765007:::246498002:::258442002:::251851008::...|fluid:::fluid used:::fluid sample:::fluid input...|Qualifier Value:::Attribute:::Specimen:::Observ...| | dopamine| Drug_Ingredient| 59187003| dopamine|59187003:::412383006:::37484001:::32779004:::41...|dopamine:::dopamine agent:::dopamine receptor::...|Pharma/Biol Product:::Substance:::Substance:::P...| | vagal reaction| Symptom| 128968000| vagal stimulation|128968000:::398665005:::106160007:::88882009:::...|vagal stimulation:::vaso vagal episode:::vagus ...|Procedure:::Clinical Finding:::Clinical Finding...| +--------------------------------------------------+-------------------------+-----------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ Model Information Model Name: sbiobertresolve_snomed_findings_auxConcepts Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence_embeddings] Output Labels: [snomed_code] Language: en Size: 2.1 GB Case sensitive: false</summary></entry><entry><title type="html">Bert For Sequence Classification (Biomarker)</title><link href="/2024/02/13/bert_sequence_classifier_biomarker_en.html" rel="alternate" type="text/html" title="Bert For Sequence Classification (Biomarker)" /><published>2024-02-13T00:00:00+00:00</published><updated>2024-02-13T00:00:00+00:00</updated><id>/2024/02/13/bert_sequence_classifier_biomarker_en</id><content type="html" xml:base="/2024/02/13/bert_sequence_classifier_biomarker_en.html">## Description

This model is a [BioBERT](https://sparknlp.org/2023/09/13/biobert_base_cased_v1.2_en.html) based sentence classification model that can determine whether the clinical sentences include terms related to biomarkers or not.

## Predicted Entities

`1`: Contains biomarker related terms

`0`: Doesn't contain biomarker related terms

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/bert_sequence_classifier_biomarker_en_5.2.1_3.0_1707841923776.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/bert_sequence_classifier_biomarker_en_5.2.1_3.0_1707841923776.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler() \
    .setInputCol('text') \
    .setOutputCol('document')

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
    .setInputCols(['sentence']) \
    .setOutputCol('token')

sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_biomarker&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\
    .setInputCols([&quot;sentence&quot;,'token'])\
    .setOutputCol(&quot;prediction&quot;)

pipeline = Pipeline(stages=[
    document_assembler,
    sentence_detector,
    tokenizer,
    sequenceClassifier
])

data = spark.createDataFrame([[&quot;&quot;&quot;In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response. For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer. Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer. Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease. Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome. In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control. Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.&quot;&quot;&quot;]]).toDF(&quot;text&quot;)

model = pipeline.fit(data)
result = model.transform(data)
```
```scala
val documentAssembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_biomarker&quot;,&quot;en&quot;,&quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
  .setOutputCol(&quot;prediction&quot;)

val pipeline = new Pipeline().setStages(Array(
  documentAssembler,
  sentenceDetector,
  tokenizer,
  sequenceClassifier
))

val data = spark.createDataFrame(Seq(
  (&quot;&quot;&quot;In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response. For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer. Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer. Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease. Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome. In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control. Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.&quot;&quot;&quot;,)
)).toDF(&quot;text&quot;)

val model = pipeline.fit(data)
val result = model.transform(data)


```
&lt;/div&gt;

## Results

```bash
+------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+
|sentence                                                                                                                                                    |prediction|
+------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+
|In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response.                       |0         |
|For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer.                                 |1         |
|Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer.                               |1         |
|Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease.|1         |
|Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome.                                 |0         |
|In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control.                                          |0         |
|Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.|0         |
+------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|bert_sequence_classifier_biomarker|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[document, token]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|406.4 MB|
|Case sensitive:|false|
|Max sentence length:|512|</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="bfsc" /><category term="biomarker" /><category term="classification" /><summary type="html">Description This model is a BioBERT based sentence classification model that can determine whether the clinical sentences include terms related to biomarkers or not. Predicted Entities 1: Contains biomarker related terms 0: Doesn’t contain biomarker related terms Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler() \ .setInputCol('text') \ .setOutputCol('document') sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols(['sentence']) \ .setOutputCol('token') sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_biomarker&quot;,&quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;sentence&quot;,'token'])\ .setOutputCol(&quot;prediction&quot;) pipeline = Pipeline(stages=[ document_assembler, sentence_detector, tokenizer, sequenceClassifier ]) data = spark.createDataFrame([[&quot;&quot;&quot;In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response. For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer. Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer. Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease. Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome. In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control. Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.&quot;&quot;&quot;]]).toDF(&quot;text&quot;) model = pipeline.fit(data) result = model.transform(data) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val sequenceClassifier = MedicalBertForSequenceClassification.pretrained(&quot;bert_sequence_classifier_biomarker&quot;,&quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;prediction&quot;) val pipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, sequenceClassifier )) val data = spark.createDataFrame(Seq( (&quot;&quot;&quot;In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response. For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer. Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer. Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease. Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome. In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control. Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.&quot;&quot;&quot;,) )).toDF(&quot;text&quot;) val model = pipeline.fit(data) val result = model.transform(data) Results +------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+ |sentence |prediction| +------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+ |In the realm of cancer research, several biomarkers have emerged as crucial indicators of disease progression and treatment response. |0 | |For instance, the expression levels of HER2/neu, a protein receptor, have been linked to aggressive forms of breast cancer. |1 | |Additionally, the presence of prostate-specific antigen (PSA) is often monitored to track the progression of prostate cancer. |1 | |Moreover, in cardiovascular health, high-sensitivity C-reactive protein (hs-CRP) serves as a biomarker for inflammation and potential risk of heart disease.|1 | |Meanwhile, elevated levels of troponin T are indicative of myocardial damage, commonly observed in acute coronary syndrome. |0 | |In the field of diabetes management, glycated hemoglobin is a widely used to assess long-term blood sugar control. |0 | |Its levels reflect the average blood glucose concentration over the past two to three months, offering valuable insights into disease management strategies.|0 | +------------------------------------------------------------------------------------------------------------------------------------------------------------+----------+ Model Information Model Name: bert_sequence_classifier_biomarker Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [document, token] Output Labels: [prediction] Language: en Size: 406.4 MB Case sensitive: false Max sentence length: 512</summary></entry><entry><title type="html">Detect SNOMED Terms</title><link href="/2024/02/13/ner_snomed_term_en.html" rel="alternate" type="text/html" title="Detect SNOMED Terms" /><published>2024-02-13T00:00:00+00:00</published><updated>2024-02-13T00:00:00+00:00</updated><id>/2024/02/13/ner_snomed_term_en</id><content type="html" xml:base="/2024/02/13/ner_snomed_term_en.html">## Description

This Name Entity Recognition(NER) model extracts SNOMED terms from clinical text. It has been trained using the `embeddings_clinical` embeddings model.

## Predicted Entities

`snomed_term`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_snomed_term_en_5.2.1_3.0_1707823546698.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_snomed_term_en_5.2.1_3.0_1707823546698.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;document&quot;]) \
    .setOutputCol(&quot;sentence&quot;) 

tokenizer = Tokenizer() \
    .setInputCols([&quot;sentence&quot;]) \
    .setOutputCol(&quot;token&quot;)

embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\
    .setOutputCol(&quot;embeddings&quot;)

ner = MedicalNerModel.pretrained(&quot;ner_snomed_term&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \
    .setOutputCol(&quot;ner_chunk&quot;)

nlpPipeline = Pipeline(stages=[document_assembler,
                            sentence_detector,
                            tokenizer,
                            embeddings,
                            ner,
                            ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

model = nlpPipeline.fit(empty_data)

text_list = [&quot;The patient was diagnosed with acute appendicitis and scheduled for immediate surgery.&quot;,
&quot;Due to experiencing chronic pain the patient was referred to a fibromyalgia specialist for further evaluation.&quot;,
&quot;His hypertension is currently managed with a combination of lifestyle modifications and medication.&quot;,
&quot;The child was brought in with symptoms of acute otitis including ear pain and fever.&quot;,
&quot;Laboratory tests indicate the individual has hyperthyroidism requiring further endocrinological assessment.&quot;,
&quot;The radiograph showed evidence of a distal radius fracture from a recent fall.&quot;]

data = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;)

result = model.transform(data)
```
```scala
import spark.implicits._

val documentAssembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
  .setOutputCol(&quot;embeddings&quot;)

val ner = MedicalNerModel.pretrained(&quot;ner_snomed_term&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
  .setOutputCol(&quot;ner&quot;)

val nerConverter = new NerConverter()
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
  .setOutputCol(&quot;ner_chunk&quot;)

val pipeline = new Pipeline()
  .setStages(Array(documentAssembler, sentenceDetector, tokenizer, embeddings, ner, nerConverter))

val textList = Seq(
  &quot;The patient was diagnosed with acute appendicitis and scheduled for immediate surgery.&quot;,
  &quot;Due to experiencing chronic pain the patient was referred to a fibromyalgia specialist for further evaluation.&quot;,
  &quot;His hypertension is currently managed with a combination of lifestyle modifications and medication.&quot;,
  &quot;The child was brought in with symptoms of acute otitis including ear pain and fever.&quot;,
  &quot;Laboratory tests indicate the individual has hyperthyroidism requiring further endocrinological assessment.&quot;,
  &quot;The radiograph showed evidence of a distal radius fracture from a recent fall.&quot;
)

val data = Seq(textList).toDS.toDF(&quot;text&quot;)

val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+------------------+-----------+
|chunk             |ner_label  |
+------------------+-----------+
|acute appendicitis|snomed_term|
|chronic pain      |snomed_term|
|fibromyalgia      |snomed_term|
|hypertension      |snomed_term|
|otitis            |snomed_term|
|ear pain          |snomed_term|
|hyperthyroidism   |snomed_term|
|radiograph        |snomed_term|
|radius fracture   |snomed_term|
+------------------+-----------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_snomed_term|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|en|
|Size:|14.6 MB|

## References

In-house annotated dataset

## Benchmarking

```bash
label          precision  recall  f1-score  support 
B-snomed_term  0.87       0.88    0.87      5210    
I-snomed_term  0.85       0.91    0.88      4922    
micro-avg      0.86       0.89    0.88      10132   
macro-avg      0.86       0.89    0.88      10132   
weighted-avg   0.86       0.89    0.88      10132   
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="en" /><category term="clinical" /><category term="licensed" /><category term="snomed" /><summary type="html">Description This Name Entity Recognition(NER) model extracts SNOMED terms from clinical text. It has been trained using the embeddings_clinical embeddings model. Predicted Entities snomed_term Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;document&quot;]) \ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\ .setOutputCol(&quot;embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_snomed_term&quot;, &quot;en&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \ .setOutputCol(&quot;ner_chunk&quot;) nlpPipeline = Pipeline(stages=[document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) model = nlpPipeline.fit(empty_data) text_list = [&quot;The patient was diagnosed with acute appendicitis and scheduled for immediate surgery.&quot;, &quot;Due to experiencing chronic pain the patient was referred to a fibromyalgia specialist for further evaluation.&quot;, &quot;His hypertension is currently managed with a combination of lifestyle modifications and medication.&quot;, &quot;The child was brought in with symptoms of acute otitis including ear pain and fever.&quot;, &quot;Laboratory tests indicate the individual has hyperthyroidism requiring further endocrinological assessment.&quot;, &quot;The radiograph showed evidence of a distal radius fracture from a recent fall.&quot;] data = spark.createDataFrame(text_list, StringType()).toDF(&quot;text&quot;) result = model.transform(data) import spark.implicits._ val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl_healthcare&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) val ner = MedicalNerModel.pretrained(&quot;ner_snomed_term&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val nerConverter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val pipeline = new Pipeline() .setStages(Array(documentAssembler, sentenceDetector, tokenizer, embeddings, ner, nerConverter)) val textList = Seq( &quot;The patient was diagnosed with acute appendicitis and scheduled for immediate surgery.&quot;, &quot;Due to experiencing chronic pain the patient was referred to a fibromyalgia specialist for further evaluation.&quot;, &quot;His hypertension is currently managed with a combination of lifestyle modifications and medication.&quot;, &quot;The child was brought in with symptoms of acute otitis including ear pain and fever.&quot;, &quot;Laboratory tests indicate the individual has hyperthyroidism requiring further endocrinological assessment.&quot;, &quot;The radiograph showed evidence of a distal radius fracture from a recent fall.&quot; ) val data = Seq(textList).toDS.toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +------------------+-----------+ |chunk |ner_label | +------------------+-----------+ |acute appendicitis|snomed_term| |chronic pain |snomed_term| |fibromyalgia |snomed_term| |hypertension |snomed_term| |otitis |snomed_term| |ear pain |snomed_term| |hyperthyroidism |snomed_term| |radiograph |snomed_term| |radius fracture |snomed_term| +------------------+-----------+ Model Information Model Name: ner_snomed_term Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: en Size: 14.6 MB References In-house annotated dataset Benchmarking label precision recall f1-score support B-snomed_term 0.87 0.88 0.87 5210 I-snomed_term 0.85 0.91 0.88 4922 micro-avg 0.86 0.89 0.88 10132 macro-avg 0.86 0.89 0.88 10132 weighted-avg 0.86 0.89 0.88 10132</summary></entry><entry><title type="html">Text Classification for Age</title><link href="/2024/02/12/genericclassifier_age_e5_en.html" rel="alternate" type="text/html" title="Text Classification for Age" /><published>2024-02-12T00:00:00+00:00</published><updated>2024-02-12T00:00:00+00:00</updated><id>/2024/02/12/genericclassifier_age_e5_en</id><content type="html" xml:base="/2024/02/12/genericclassifier_age_e5_en.html">## Description

The GenericClassifierModel is a sophisticated text classification tool tailored to identify and categorize text according to different age groups. This model distinguishes among 'Old Adult', 'Adult', and 'Child and Teen' contexts, providing valuable insights into textual data that references age-specific scenarios or concerns. Detailed information about the classes is as follows:

`Old Adult`: This category includes texts that pertain to older adults, often addressing age-specific health issues, lifestyle considerations, or geriatric care. For instance, a text might discuss mobility challenges or medical conditions more prevalent in elderly populations.

`Adult`: Texts under this classification refer to the adult age group, encompassing a wide range of topics from general health care to workplace issues. These texts often deal with health, social, and economic aspects relevant to the adult population. 

`Child and Teen`: This classification captures texts related to children and teenagers, focusing on pediatric health, developmental stages, educational concerns, and youth-related social issues.

`Other/Unknown`: This category includes texts where the patient's age is not specified or is irrelevant to the content. These texts may cover a wide range of topics applicable to all age groups or focus on general health and wellness issues that are not age-specific. For example, a text might discuss the importance of maintaining a balanced diet and regular exercise routine for overall health, without targeting a specific age group.

## Predicted Entities

`Old Adult`, `Adult`, `Child and Teen`, `Other/Unknown`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/genericclassifier_age_e5_en_5.2.1_3.0_1707776992202.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/genericclassifier_age_e5_en_5.2.1_3.0_1707776992202.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)
        
embeddings = E5Embeddings.pretrained(&quot;e5_large&quot;, &quot;en&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;embeddings&quot;)\
    .setMaxSentenceLength(512)

features_asm = FeaturesAssembler()\
    .setInputCols([&quot;embeddings&quot;])\
    .setOutputCol(&quot;features&quot;)

generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_age_e5&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols([&quot;features&quot;])\
    .setOutputCol(&quot;prediction&quot;)

pipeline = Pipeline(stages=[
    document_assembler,
    embeddings,
    features_asm,
    generic_classifier    
])

sample_texts = [
&quot;&quot;&quot;The patient presents with conditions often associated with the stresses and lifestyle of early career and possibly higher education stages, including sleep irregularities and repetitive stress injuries. There's a notable emphasis on preventative care, with discussions around lifestyle choices that can impact long-term health, such as smoking cessation, regular exercise, and balanced nutrition. The patient is also counseled on mental health, particularly in managing stress and anxiety that may arise from personal and professional responsibilities and ambitions at this stage of life.&quot;&quot;&quot;,
&quot;&quot;&quot;The patient, in the infancy stage, is experiencing typical developmental milestones such as teething and learning to crawl. Regular check-ups focus on monitoring growth patterns, ensuring proper nutrition, especially with the transition from milk to solid foods, and addressing common infant concerns like colic and sleep patterns. Immunizations are up-to-date, following the recommended schedule for this critical early life stage.&quot;&quot;&quot;,
&quot;&quot;&quot;The toddler patient shows normal signs of curiosity and motor skill development for their age. Concerns include potential delays in speech development and the challenges of transitioning from crib to bed. Nutritional guidance is provided, focusing on balanced diets and managing the picky eating phase common in toddlers. Safety in the home environment is also discussed, given the patient's increased mobility and exploratory behavior.&quot;&quot;&quot;,
&quot;&quot;&quot;The senior patient presents with age-related issues such as reduced hearing and vision, arthritis, and memory lapses. Emphasis is on managing chronic conditions, maintaining social engagement, and adapting lifestyle to changing physical abilities. Discussions include medication management, dietary adjustments to suit older digestion, and the importance of regular, low-impact exercise.&quot;&quot;&quot;,
&quot;&quot;&quot;The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, and decisions about higher education or career paths. Health discussions include maintaining a balanced diet, the importance of regular sleep patterns, and managing academic and social pressures. Mental health support is considered crucial at this stage, with a focus on building resilience and coping mechanisms.&quot;&quot;&quot;,
&quot;&quot;&quot;The patient, faces adjustments to a new lifestyle with changes in daily routines and social interactions. Health concerns include managing the transition from an active work life to more leisure time, which may impact physical and mental health. Preventative health measures are emphasized, along with the importance of staying mentally and physically active and engaged in the community.&quot;&quot;&quot;
]

data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;)

result = pipeline.fit(data).transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;document&quot;)
        
val embeddings = E5Embeddings.pretrained(&quot;e5_large&quot;, &quot;en&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;embeddings&quot;)\
    .setMaxSentenceLength(512)

val features_asm = new FeaturesAssembler()
    .setInputCols(&quot;embeddings&quot;)
    .setOutputCol(&quot;features&quot;)

val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_age_e5&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;features&quot;)
    .setOutputCol(&quot;prediction&quot;)

val pipeline = new PipelineModel().setStages(Array(
    document_assembler,
    embeddings,
    features_asm,
    generic_classifier    
))

val data = Seq(Array(&quot;&quot;&quot;The patient presents with conditions often associated with the stresses and lifestyle of early career and possibly higher education stages, including sleep irregularities and repetitive stress injuries. There's a notable emphasis on preventative care, with discussions around lifestyle choices that can impact long-term health, such as smoking cessation, regular exercise, and balanced nutrition. The patient is also counseled on mental health, particularly in managing stress and anxiety that may arise from personal and professional responsibilities and ambitions at this stage of life.&quot;&quot;&quot;,
&quot;&quot;&quot;The patient, in the infancy stage, is experiencing typical developmental milestones such as teething and learning to crawl. Regular check-ups focus on monitoring growth patterns, ensuring proper nutrition, especially with the transition from milk to solid foods, and addressing common infant concerns like colic and sleep patterns. Immunizations are up-to-date, following the recommended schedule for this critical early life stage.&quot;&quot;&quot;,
&quot;&quot;&quot;The toddler patient shows normal signs of curiosity and motor skill development for their age. Concerns include potential delays in speech development and the challenges of transitioning from crib to bed. Nutritional guidance is provided, focusing on balanced diets and managing the picky eating phase common in toddlers. Safety in the home environment is also discussed, given the patient's increased mobility and exploratory behavior.&quot;&quot;&quot;,
&quot;&quot;&quot;The senior patient presents with age-related issues such as reduced hearing and vision, arthritis, and memory lapses. Emphasis is on managing chronic conditions, maintaining social engagement, and adapting lifestyle to changing physical abilities. Discussions include medication management, dietary adjustments to suit older digestion, and the importance of regular, low-impact exercise.&quot;&quot;&quot;,
&quot;&quot;&quot;The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, and decisions about higher education or career paths. Health discussions include maintaining a balanced diet, the importance of regular sleep patterns, and managing academic and social pressures. Mental health support is considered crucial at this stage, with a focus on building resilience and coping mechanisms.&quot;&quot;&quot;,
&quot;&quot;&quot;The patient, faces adjustments to a new lifestyle with changes in daily routines and social interactions. Health concerns include managing the transition from an active work life to more leisure time, which may impact physical and mental health. Preventative health measures are emphasized, along with the importance of staying mentally and physically active and engaged in the community.&quot;&quot;&quot;)).toDF(&quot;text&quot;)


val result = pipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+----------------------------------------------------------------------------------------------------+----------------+
|                                                                                                text|          result|
+----------------------------------------------------------------------------------------------------+----------------+
|The patient presents with conditions often associated with the stresses and lifestyle of early ca...|         [Adult]|
|The patient, in the infancy stage, is experiencing typical developmental milestones such as teeth...|[Child and Teen]|
|The toddler patient shows normal signs of curiosity and motor skill development for their age. Co...|[Child and Teen]|
|The senior patient presents with age-related issues such as reduced hearing and vision, arthritis...|     [Old Adult]|
|The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, ...|[Child and Teen]|
|The patient, faces adjustments to a new lifestyle with changes in daily routines and social inter...| [Other/Unknown]|
+----------------------------------------------------------------------------------------------------+----------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|genericclassifier_age_e5|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[features]|
|Output Labels:|[prediction]|
|Language:|en|
|Size:|4.3 MB|

## References

In-house annotated datasets

## Benchmarking

```bash
label           precision  recall  f1-score  support 
Adult           0.82       0.80    0.81      367     
Child and Teen  0.95       0.91    0.93      271     
Old Adult       0.84       0.83    0.84      187     
Other/Unknown   0.81       0.86    0.84      342     
accuracy        -          -       0.85      1167    
macro-avg       0.86       0.85    0.85      1167    
weighted-avg    0.85       0.85    0.85      1167    
```</content><author><name>John Snow Labs</name></author><category term="en" /><category term="licensed" /><category term="classification" /><category term="age" /><summary type="html">Description The GenericClassifierModel is a sophisticated text classification tool tailored to identify and categorize text according to different age groups. This model distinguishes among ‘Old Adult’, ‘Adult’, and ‘Child and Teen’ contexts, providing valuable insights into textual data that references age-specific scenarios or concerns. Detailed information about the classes is as follows: Old Adult: This category includes texts that pertain to older adults, often addressing age-specific health issues, lifestyle considerations, or geriatric care. For instance, a text might discuss mobility challenges or medical conditions more prevalent in elderly populations. Adult: Texts under this classification refer to the adult age group, encompassing a wide range of topics from general health care to workplace issues. These texts often deal with health, social, and economic aspects relevant to the adult population. Child and Teen: This classification captures texts related to children and teenagers, focusing on pediatric health, developmental stages, educational concerns, and youth-related social issues. Other/Unknown: This category includes texts where the patient’s age is not specified or is irrelevant to the content. These texts may cover a wide range of topics applicable to all age groups or focus on general health and wellness issues that are not age-specific. For example, a text might discuss the importance of maintaining a balanced diet and regular exercise routine for overall health, without targeting a specific age group. Predicted Entities Old Adult, Adult, Child and Teen, Other/Unknown Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) embeddings = E5Embeddings.pretrained(&quot;e5_large&quot;, &quot;en&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;embeddings&quot;)\ .setMaxSentenceLength(512) features_asm = FeaturesAssembler()\ .setInputCols([&quot;embeddings&quot;])\ .setOutputCol(&quot;features&quot;) generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_age_e5&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols([&quot;features&quot;])\ .setOutputCol(&quot;prediction&quot;) pipeline = Pipeline(stages=[ document_assembler, embeddings, features_asm, generic_classifier ]) sample_texts = [ &quot;&quot;&quot;The patient presents with conditions often associated with the stresses and lifestyle of early career and possibly higher education stages, including sleep irregularities and repetitive stress injuries. There's a notable emphasis on preventative care, with discussions around lifestyle choices that can impact long-term health, such as smoking cessation, regular exercise, and balanced nutrition. The patient is also counseled on mental health, particularly in managing stress and anxiety that may arise from personal and professional responsibilities and ambitions at this stage of life.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, in the infancy stage, is experiencing typical developmental milestones such as teething and learning to crawl. Regular check-ups focus on monitoring growth patterns, ensuring proper nutrition, especially with the transition from milk to solid foods, and addressing common infant concerns like colic and sleep patterns. Immunizations are up-to-date, following the recommended schedule for this critical early life stage.&quot;&quot;&quot;, &quot;&quot;&quot;The toddler patient shows normal signs of curiosity and motor skill development for their age. Concerns include potential delays in speech development and the challenges of transitioning from crib to bed. Nutritional guidance is provided, focusing on balanced diets and managing the picky eating phase common in toddlers. Safety in the home environment is also discussed, given the patient's increased mobility and exploratory behavior.&quot;&quot;&quot;, &quot;&quot;&quot;The senior patient presents with age-related issues such as reduced hearing and vision, arthritis, and memory lapses. Emphasis is on managing chronic conditions, maintaining social engagement, and adapting lifestyle to changing physical abilities. Discussions include medication management, dietary adjustments to suit older digestion, and the importance of regular, low-impact exercise.&quot;&quot;&quot;, &quot;&quot;&quot;The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, and decisions about higher education or career paths. Health discussions include maintaining a balanced diet, the importance of regular sleep patterns, and managing academic and social pressures. Mental health support is considered crucial at this stage, with a focus on building resilience and coping mechanisms.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, faces adjustments to a new lifestyle with changes in daily routines and social interactions. Health concerns include managing the transition from an active work life to more leisure time, which may impact physical and mental health. Preventative health measures are emphasized, along with the importance of staying mentally and physically active and engaged in the community.&quot;&quot;&quot; ] data = spark.createDataFrame(sample_texts, StringType()).toDF(&quot;text&quot;) result = pipeline.fit(data).transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val embeddings = E5Embeddings.pretrained(&quot;e5_large&quot;, &quot;en&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;embeddings&quot;)\ .setMaxSentenceLength(512) val features_asm = new FeaturesAssembler() .setInputCols(&quot;embeddings&quot;) .setOutputCol(&quot;features&quot;) val generic_classifier = GenericClassifierModel.pretrained(&quot;genericclassifier_age_e5&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;features&quot;) .setOutputCol(&quot;prediction&quot;) val pipeline = new PipelineModel().setStages(Array( document_assembler, embeddings, features_asm, generic_classifier )) val data = Seq(Array(&quot;&quot;&quot;The patient presents with conditions often associated with the stresses and lifestyle of early career and possibly higher education stages, including sleep irregularities and repetitive stress injuries. There's a notable emphasis on preventative care, with discussions around lifestyle choices that can impact long-term health, such as smoking cessation, regular exercise, and balanced nutrition. The patient is also counseled on mental health, particularly in managing stress and anxiety that may arise from personal and professional responsibilities and ambitions at this stage of life.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, in the infancy stage, is experiencing typical developmental milestones such as teething and learning to crawl. Regular check-ups focus on monitoring growth patterns, ensuring proper nutrition, especially with the transition from milk to solid foods, and addressing common infant concerns like colic and sleep patterns. Immunizations are up-to-date, following the recommended schedule for this critical early life stage.&quot;&quot;&quot;, &quot;&quot;&quot;The toddler patient shows normal signs of curiosity and motor skill development for their age. Concerns include potential delays in speech development and the challenges of transitioning from crib to bed. Nutritional guidance is provided, focusing on balanced diets and managing the picky eating phase common in toddlers. Safety in the home environment is also discussed, given the patient's increased mobility and exploratory behavior.&quot;&quot;&quot;, &quot;&quot;&quot;The senior patient presents with age-related issues such as reduced hearing and vision, arthritis, and memory lapses. Emphasis is on managing chronic conditions, maintaining social engagement, and adapting lifestyle to changing physical abilities. Discussions include medication management, dietary adjustments to suit older digestion, and the importance of regular, low-impact exercise.&quot;&quot;&quot;, &quot;&quot;&quot;The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, and decisions about higher education or career paths. Health discussions include maintaining a balanced diet, the importance of regular sleep patterns, and managing academic and social pressures. Mental health support is considered crucial at this stage, with a focus on building resilience and coping mechanisms.&quot;&quot;&quot;, &quot;&quot;&quot;The patient, faces adjustments to a new lifestyle with changes in daily routines and social interactions. Health concerns include managing the transition from an active work life to more leisure time, which may impact physical and mental health. Preventative health measures are emphasized, along with the importance of staying mentally and physically active and engaged in the community.&quot;&quot;&quot;)).toDF(&quot;text&quot;) val result = pipeline.fit(data).transform(data) Results +----------------------------------------------------------------------------------------------------+----------------+ | text| result| +----------------------------------------------------------------------------------------------------+----------------+ |The patient presents with conditions often associated with the stresses and lifestyle of early ca...| [Adult]| |The patient, in the infancy stage, is experiencing typical developmental milestones such as teeth...|[Child and Teen]| |The toddler patient shows normal signs of curiosity and motor skill development for their age. Co...|[Child and Teen]| |The senior patient presents with age-related issues such as reduced hearing and vision, arthritis...| [Old Adult]| |The late teenage patient is dealing with final growth spurts, the stress of impending adulthood, ...|[Child and Teen]| |The patient, faces adjustments to a new lifestyle with changes in daily routines and social inter...| [Other/Unknown]| +----------------------------------------------------------------------------------------------------+----------------+ Model Information Model Name: genericclassifier_age_e5 Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [features] Output Labels: [prediction] Language: en Size: 4.3 MB References In-house annotated datasets Benchmarking label precision recall f1-score support Adult 0.82 0.80 0.81 367 Child and Teen 0.95 0.91 0.93 271 Old Adult 0.84 0.83 0.84 187 Other/Unknown 0.81 0.86 0.84 342 accuracy - - 0.85 1167 macro-avg 0.86 0.85 0.85 1167 weighted-avg 0.85 0.85 0.85 1167</summary></entry><entry><title type="html">Detect PHI for Generic Deidentification(multilingual)</title><link href="/2024/02/12/ner_deid_multilingual_xx.html" rel="alternate" type="text/html" title="Detect PHI for Generic Deidentification(multilingual)" /><published>2024-02-12T00:00:00+00:00</published><updated>2024-02-12T00:00:00+00:00</updated><id>/2024/02/12/ner_deid_multilingual_xx</id><content type="html" xml:base="/2024/02/12/ner_deid_multilingual_xx.html">## Description

Deidentification NER is a Named Entity Recognition model that annotates English, German, French, Italian, Spanish, Portuguese, and Romanian text to find protected health information (PHI) that may need to be de-identified. It has been trained with in-house annotated datasets using `xlm-roberta-base` multilingual embeddings.

## Predicted Entities

`AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_multilingual_xx_5.2.1_3.0_1707781448758.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_multilingual_xx_5.2.1_3.0_1707781448758.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetector()\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
    .setInputCols([&quot;sentence&quot;]) \
    .setOutputCol(&quot;token&quot;)

embeddings = XlmRoBertaEmbeddings.pretrained(&quot;xlm_roberta_base&quot;, &quot;xx&quot;) \
    .setInputCols(&quot;sentence&quot;, &quot;token&quot;) \
    .setOutputCol(&quot;embeddings&quot;)\
    .setMaxSentenceLength(512)\

ner = MedicalNerModel.pretrained(&quot;ner_deid_multilingual&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \
    .setOutputCol(&quot;ner_chunk&quot;)

nlpPipeline = Pipeline(stages=[document_assembler,
                            sentence_detector,
                            tokenizer,
                            embeddings,
                            ner,
                            ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

model = nlpPipeline.fit(empty_data)

text_list = [
&quot;&quot;&quot;Record date : 2093-01-13, David Hale, M.D., Name : Hendrickson, Ora MR. # 7194334 Date : 01/13/93 PCP : Oliveira, 25 years old, Record date : 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. Patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;,

&quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;,

&quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;,

&quot;&quot;&quot;Detalhes do paciente.
Nome do paciente:  Pedro Gonçalves
NHC: 2569870.
Endereço: Rua Das Flores 23.
Cidade/ Província: Porto.
Código Postal: 21754-987.
Dados de cuidados.
Data de nascimento: 10/10/1963.
Idade: 53 anos Sexo: Homen
Data de admissão: 17/06/2016.
Doutora: Maria Santos&quot;&quot;&quot;,

&quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401&quot;&quot;&quot;
]

data = spark.createDataFrame(pd.DataFrame({&quot;text&quot;: text_list}))

result = model.transform(data)


```
```scala
import spark.implicits._

val documentAssembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentenceDetector = new SentenceDetector()
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val embeddings = XlmRoBertaEmbeddings.pretrained(&quot;xlm_roberta_base&quot;, &quot;xx&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;))
  .setOutputCol(&quot;embeddings&quot;)
  .setMaxSentenceLength(512)

val ner = MedicalNerModel.pretrained(&quot;ner_deid_multilingual&quot;, &quot;xx&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
  .setOutputCol(&quot;ner&quot;)

val nerConverter = new NerConverter()
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
  .setOutputCol(&quot;ner_chunk&quot;)

val nlpPipeline = new Pipeline().setStages(Array(
  documentAssembler,
  sentenceDetector,
  tokenizer,
  embeddings,
  ner,
  nerConverter))

val text_list = Seq(
&quot;&quot;&quot;Record date : 2093-01-13, David Hale, M.D., Name : Hendrickson, Ora MR. # 7194334 Date : 01/13/93 PCP : Oliveira, 25 years old, Record date : 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. Patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;,

&quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;,

&quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;,

&quot;&quot;&quot;Detalhes do paciente.
Nome do paciente:  Pedro Gonçalves
NHC: 2569870.
Endereço: Rua Das Flores 23.
Cidade/ Província: Porto.
Código Postal: 21754-987.
Dados de cuidados.
Data de nascimento: 10/10/1963.
Idade: 53 anos Sexo: Homen
Data de admissão: 17/06/2016.
Doutora: Maria Santos&quot;&quot;&quot;,

&quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România
Tel: +40(235)413773
Data setului de analize: 25 May 2022 15:36:00
Nume si Prenume : BUREAN MARIA, Varsta: 77
Medic : Agota Evelyn Tımar
C.N.P : 2450502264401&quot;&quot;&quot;
)

val data = Seq(text_list).toDS.toDF(&quot;text&quot;)

val result = nlpPipeline.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-----------------------------+----------+
|chunk                        |ner_label |
+-----------------------------+----------+
|2093-01-13                   |DATE      |
|David Hale                   |NAME      |
|Hendrickson                  |NAME      |
|7194334                      |ID        |
|01/13/93                     |DATE      |
|Oliveira                     |NAME      |
|25                           |AGE       |
|1-11-2000                    |DATE      |
|Cocke County Baptist Hospital|LOCATION  |
|0295 Keats Street            |LOCATION  |
|(302) 786-5227               |CONTACT   |
|Brothers Coal-Mine           |LOCATION  |
|Michel Martinez              |NAME      |
|49 ans                       |AGE       |
|Centre Hospitalier De Plaisir|LOCATION  |
|Mars 2015                    |DATE      |
|Michael Berger               |NAME      |
|Bad Kissingen                |LOCATION  |
|Berger                       |NAME      |
|76                           |AGE       |
|Gastone Montanariello        |NAME      |
|49                           |AGE       |
|Ospedale San Camillo         |LOCATION  |
|marzo 2015                   |DATE      |
|Antonio Miguel Martínez      |NAME      |
|35                           |AGE       |
|auxiliar de enfermería       |PROFESSION|
|Cadiz                        |LOCATION  |
|España                       |LOCATION  |
|14 de Marzo                  |DATE      |
|Clinica San Carlos           |LOCATION  |
|Pedro Gonçalves              |NAME      |
|2569870                      |ID        |
|Rua Das Flores               |NAME      |
|Porto                        |LOCATION  |
|21754-987                    |ID        |
|10/10/1963                   |DATE      |
|53                           |AGE       |
|17/06/2016                   |DATE      |
|Maria Santos                 |NAME      |
|Spitalul Pentru Ochi de Deal |LOCATION  |
|Drumul Oprea Nr              |LOCATION  |
|972                          |LOCATION  |
|Vaslui                       |LOCATION  |
|737405                       |LOCATION  |
|România                      |LOCATION  |
|+40(235)413773               |CONTACT   |
|25 May 2022                  |DATE      |
|BUREAN MARIA                 |NAME      |
|77                           |AGE       |
|Agota Evelyn Tımar           |NAME      |
|2450502264401                |ID        |
+-----------------------------+----------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_multilingual|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|xx|
|Size:|3.2 MB|

## References

In-house annotated datasets

## Benchmarking

```bash
label         precision  recall  f1-score  support 
AGE           0.96       0.97    0.97      2815    
CONTACT       0.96       0.94    0.95      835     
DATE          0.94       0.90    0.92      1255    
ID            0.92       0.92    0.92      857     
LOCATION      0.82       0.81    0.81      3144    
NAME          0.91       0.86    0.88      2769    
PROFESSION    0.90       0.79    0.84      1414    
micro-avg     0.90       0.88    0.89      13089   
macro-avg     0.92       0.88    0.90      13089   
weighted-avg  0.90       0.88    0.89      13089   
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="licensed" /><category term="deidentification" /><category term="multilingual" /><category term="xx" /><category term="roberta" /><summary type="html">Description Deidentification NER is a Named Entity Recognition model that annotates English, German, French, Italian, Spanish, Portuguese, and Romanian text to find protected health information (PHI) that may need to be de-identified. It has been trained with in-house annotated datasets using xlm-roberta-base multilingual embeddings. Predicted Entities AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetector()\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) embeddings = XlmRoBertaEmbeddings.pretrained(&quot;xlm_roberta_base&quot;, &quot;xx&quot;) \ .setInputCols(&quot;sentence&quot;, &quot;token&quot;) \ .setOutputCol(&quot;embeddings&quot;)\ .setMaxSentenceLength(512)\ ner = MedicalNerModel.pretrained(&quot;ner_deid_multilingual&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \ .setOutputCol(&quot;ner_chunk&quot;) nlpPipeline = Pipeline(stages=[document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) model = nlpPipeline.fit(empty_data) text_list = [ &quot;&quot;&quot;Record date : 2093-01-13, David Hale, M.D., Name : Hendrickson, Ora MR. # 7194334 Date : 01/13/93 PCP : Oliveira, 25 years old, Record date : 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. Patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;, &quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;, &quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;, &quot;&quot;&quot;Detalhes do paciente. Nome do paciente: Pedro Gonçalves NHC: 2569870. Endereço: Rua Das Flores 23. Cidade/ Província: Porto. Código Postal: 21754-987. Dados de cuidados. Data de nascimento: 10/10/1963. Idade: 53 anos Sexo: Homen Data de admissão: 17/06/2016. Doutora: Maria Santos&quot;&quot;&quot;, &quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401&quot;&quot;&quot; ] data = spark.createDataFrame(pd.DataFrame({&quot;text&quot;: text_list})) result = model.transform(data) import spark.implicits._ val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentenceDetector = new SentenceDetector() .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val embeddings = XlmRoBertaEmbeddings.pretrained(&quot;xlm_roberta_base&quot;, &quot;xx&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;)) .setOutputCol(&quot;embeddings&quot;) .setMaxSentenceLength(512) val ner = MedicalNerModel.pretrained(&quot;ner_deid_multilingual&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val nerConverter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val nlpPipeline = new Pipeline().setStages(Array( documentAssembler, sentenceDetector, tokenizer, embeddings, ner, nerConverter)) val text_list = Seq( &quot;&quot;&quot;Record date : 2093-01-13, David Hale, M.D., Name : Hendrickson, Ora MR. # 7194334 Date : 01/13/93 PCP : Oliveira, 25 years old, Record date : 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. Patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;, &quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;, &quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;, &quot;&quot;&quot;Detalhes do paciente. Nome do paciente: Pedro Gonçalves NHC: 2569870. Endereço: Rua Das Flores 23. Cidade/ Província: Porto. Código Postal: 21754-987. Dados de cuidados. Data de nascimento: 10/10/1963. Idade: 53 anos Sexo: Homen Data de admissão: 17/06/2016. Doutora: Maria Santos&quot;&quot;&quot;, &quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume si Prenume : BUREAN MARIA, Varsta: 77 Medic : Agota Evelyn Tımar C.N.P : 2450502264401&quot;&quot;&quot; ) val data = Seq(text_list).toDS.toDF(&quot;text&quot;) val result = nlpPipeline.fit(data).transform(data) Results +-----------------------------+----------+ |chunk |ner_label | +-----------------------------+----------+ |2093-01-13 |DATE | |David Hale |NAME | |Hendrickson |NAME | |7194334 |ID | |01/13/93 |DATE | |Oliveira |NAME | |25 |AGE | |1-11-2000 |DATE | |Cocke County Baptist Hospital|LOCATION | |0295 Keats Street |LOCATION | |(302) 786-5227 |CONTACT | |Brothers Coal-Mine |LOCATION | |Michel Martinez |NAME | |49 ans |AGE | |Centre Hospitalier De Plaisir|LOCATION | |Mars 2015 |DATE | |Michael Berger |NAME | |Bad Kissingen |LOCATION | |Berger |NAME | |76 |AGE | |Gastone Montanariello |NAME | |49 |AGE | |Ospedale San Camillo |LOCATION | |marzo 2015 |DATE | |Antonio Miguel Martínez |NAME | |35 |AGE | |auxiliar de enfermería |PROFESSION| |Cadiz |LOCATION | |España |LOCATION | |14 de Marzo |DATE | |Clinica San Carlos |LOCATION | |Pedro Gonçalves |NAME | |2569870 |ID | |Rua Das Flores |NAME | |Porto |LOCATION | |21754-987 |ID | |10/10/1963 |DATE | |53 |AGE | |17/06/2016 |DATE | |Maria Santos |NAME | |Spitalul Pentru Ochi de Deal |LOCATION | |Drumul Oprea Nr |LOCATION | |972 |LOCATION | |Vaslui |LOCATION | |737405 |LOCATION | |România |LOCATION | |+40(235)413773 |CONTACT | |25 May 2022 |DATE | |BUREAN MARIA |NAME | |77 |AGE | |Agota Evelyn Tımar |NAME | |2450502264401 |ID | +-----------------------------+----------+ Model Information Model Name: ner_deid_multilingual Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: xx Size: 3.2 MB References In-house annotated datasets Benchmarking label precision recall f1-score support AGE 0.96 0.97 0.97 2815 CONTACT 0.96 0.94 0.95 835 DATE 0.94 0.90 0.92 1255 ID 0.92 0.92 0.92 857 LOCATION 0.82 0.81 0.81 3144 NAME 0.91 0.86 0.88 2769 PROFESSION 0.90 0.79 0.84 1414 micro-avg 0.90 0.88 0.89 13089 macro-avg 0.92 0.88 0.90 13089 weighted-avg 0.90 0.88 0.89 13089</summary></entry><entry><title type="html">Detect Name for Deidentification (multilingual - clinical)</title><link href="/2024/02/12/ner_deid_name_multilingual_clinical_xx.html" rel="alternate" type="text/html" title="Detect Name for Deidentification (multilingual - clinical)" /><published>2024-02-12T00:00:00+00:00</published><updated>2024-02-12T00:00:00+00:00</updated><id>/2024/02/12/ner_deid_name_multilingual_clinical_xx</id><content type="html" xml:base="/2024/02/12/ner_deid_name_multilingual_clinical_xx.html">## Description

Deidentification NER is a Named Entity Recognition model that annotates English, German, French, Italian, Spanish, Portuguese, and Romanian text to find protected health information (PHI) that may need to be de-identified. It was trained with in-house annotated datasets using `embeddings_clinical` and detects NAME entities.

## Predicted Entities

`NAME`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/ner_deid_name_multilingual_clinical_xx_5.2.1_3.0_1707765799717.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/ner_deid_name_multilingual_clinical_xx_5.2.1_3.0_1707765799717.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python
document_assembler = DocumentAssembler()\
    .setInputCol(&quot;text&quot;)\
    .setOutputCol(&quot;document&quot;)

sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;,&quot;xx&quot;)\
    .setInputCols([&quot;document&quot;])\
    .setOutputCol(&quot;sentence&quot;)

tokenizer = Tokenizer() \
    .setInputCols([&quot;sentence&quot;]) \
    .setOutputCol(&quot;token&quot;)

embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\
    .setOutputCol(&quot;embeddings&quot;)

ner = MedicalNerModel.pretrained(&quot;ner_deid_name_multilingual_clinical&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \
    .setOutputCol(&quot;ner&quot;)

ner_converter = NerConverter() \
    .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \
    .setOutputCol(&quot;ner_chunk&quot;)

nlpPipeline = Pipeline(stages=[document_assembler,
                            sentence_detector,
                            tokenizer,
                            embeddings,
                            ner,
                            ner_converter])

empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)

model = nlpPipeline.fit(empty_data)

text_list = [&quot;&quot;&quot;Record date: 2093-01-13, David Hale, M.D., Name: Hendrickson, Ora MR. # 7194334 Date: 01/13/93 PCP: Oliveira, 25 years old, Record date: 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. The patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;,
             
&quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;,
             
&quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;,

&quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;,
    
&quot;&quot;&quot;
Detalhes do paciente:
Nome do paciente: Pedro Gonçalves NHC: 2569870 Endereço: Rua Das Flores 23. Cidade/ Província: Porto Código Postal: 21754-987 Dados de cuidados Data de nascimento: 10/10/1963 Idade: 53 anos Data de admissão: 17/06/2016 Doutora: Maria Santos&quot;&quot;&quot;,

&quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume&amp;Prenume: BUREAN MARIA, Varsta: 77 CNP: 2450502264401&quot;&quot;&quot;
]

data = spark.createDataFrame(pd.DataFrame({&quot;text&quot;: text_list}))

result = model.transform(data)
```
```scala
val document_assembler = new DocumentAssembler()
  .setInputCol(&quot;text&quot;)
  .setOutputCol(&quot;document&quot;)

val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;,&quot;xx&quot;)
  .setInputCols(Array(&quot;document&quot;))
  .setOutputCol(&quot;sentence&quot;)

val tokenizer = new Tokenizer()
  .setInputCols(Array(&quot;sentence&quot;))
  .setOutputCol(&quot;token&quot;)

val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
    .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\
    .setOutputCol(&quot;embeddings&quot;)

val ner = MedicalNerModel.pretrained(&quot;ner_deid_name_multilingual_clinical&quot;, &quot;xx&quot;, &quot;clinical/models&quot;)
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;))
  .setOutputCol(&quot;ner&quot;)

val ner_converter = new NerConverter()
  .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;))
  .setOutputCol(&quot;ner_chunk&quot;)

val nlpPipeline = new Pipeline().setStages(Array(
  document_assembler,
  sentence_detector,
  tokenizer,
  embeddings,
  ner,
  ner_converter
))

val text_list = Seq(
&quot;&quot;&quot;Record date: 2093-01-13, David Hale, M.D., Name: Hendrickson, Ora MR. # 7194334 Date: 01/13/93 PCP: Oliveira, 25 years old, Record date: 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. The patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;,
             
&quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;,
             
&quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;,

&quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;,

&quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;,
    
&quot;&quot;&quot;
Detalhes do paciente:
Nome do paciente: Pedro Gonçalves NHC: 2569870 Endereço: Rua Das Flores 23. Cidade/ Província: Porto Código Postal: 21754-987 Dados de cuidados Data de nascimento: 10/10/1963 Idade: 53 anos Data de admissão: 17/06/2016 Doutora: Maria Santos&quot;&quot;&quot;,

&quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume&amp;Prenume: BUREAN MARIA, Varsta: 77 CNP: 2450502264401&quot;&quot;&quot;
)

val data = Seq(text_list).toDS.toDF(&quot;text&quot;)

val result = model.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
+-----------------------+---------+
|chunk                  |ner_label|
+-----------------------+---------+
|David Hale             |NAME     |
|Hendrickson, Ora       |NAME     |
|Oliveira               |NAME     |
|Michel Martinez        |NAME     |
|Michael Berger         |NAME     |
|Berger                 |NAME     |
|Gastone Montanariello  |NAME     |
|Antonio Miguel Martínez|NAME     |
|Pedro Gonçalves        |NAME     |
|Maria Santos           |NAME     |
|BUREAN MARIA           |NAME     |
+-----------------------+---------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|ner_deid_name_multilingual_clinical|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence, token, embeddings]|
|Output Labels:|[ner]|
|Language:|xx|
|Size:|14.8 MB|

## References

It was trained with in-house annotated datasets

## Benchmarking

```bash
label         precision  recall  f1-score  support 
B-NAME        0.90       0.90    0.90      4986    
I-NAME        0.92       0.92    0.92      4059    
micro-avg     0.91       0.91    0.91      9045    
macro-avg     0.91       0.91    0.91      9045    
weighted-avg  0.91       0.91    0.91      9045    
```</content><author><name>John Snow Labs</name></author><category term="ner" /><category term="cilnical" /><category term="licensed" /><category term="multilingual" /><category term="deid" /><category term="xx" /><summary type="html">Description Deidentification NER is a Named Entity Recognition model that annotates English, German, French, Italian, Spanish, Portuguese, and Romanian text to find protected health information (PHI) that may need to be de-identified. It was trained with in-house annotated datasets using embeddings_clinical and detects NAME entities. Predicted Entities NAME Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU document_assembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;document&quot;) sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;,&quot;xx&quot;)\ .setInputCols([&quot;document&quot;])\ .setOutputCol(&quot;sentence&quot;) tokenizer = Tokenizer() \ .setInputCols([&quot;sentence&quot;]) \ .setOutputCol(&quot;token&quot;) embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\ .setOutputCol(&quot;embeddings&quot;) ner = MedicalNerModel.pretrained(&quot;ner_deid_name_multilingual_clinical&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;]) \ .setOutputCol(&quot;ner&quot;) ner_converter = NerConverter() \ .setInputCols([&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;]) \ .setOutputCol(&quot;ner_chunk&quot;) nlpPipeline = Pipeline(stages=[document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter]) empty_data = spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;) model = nlpPipeline.fit(empty_data) text_list = [&quot;&quot;&quot;Record date: 2093-01-13, David Hale, M.D., Name: Hendrickson, Ora MR. # 7194334 Date: 01/13/93 PCP: Oliveira, 25 years old, Record date: 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. The patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;, &quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;, &quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;, &quot;&quot;&quot; Detalhes do paciente: Nome do paciente: Pedro Gonçalves NHC: 2569870 Endereço: Rua Das Flores 23. Cidade/ Província: Porto Código Postal: 21754-987 Dados de cuidados Data de nascimento: 10/10/1963 Idade: 53 anos Data de admissão: 17/06/2016 Doutora: Maria Santos&quot;&quot;&quot;, &quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume&amp;amp;Prenume: BUREAN MARIA, Varsta: 77 CNP: 2450502264401&quot;&quot;&quot; ] data = spark.createDataFrame(pd.DataFrame({&quot;text&quot;: text_list})) result = model.transform(data) val document_assembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;document&quot;) val sentence_detector = SentenceDetectorDLModel.pretrained(&quot;sentence_detector_dl&quot;,&quot;xx&quot;) .setInputCols(Array(&quot;document&quot;)) .setOutputCol(&quot;sentence&quot;) val tokenizer = new Tokenizer() .setInputCols(Array(&quot;sentence&quot;)) .setOutputCol(&quot;token&quot;) val embeddings = WordEmbeddingsModel.pretrained(&quot;embeddings_clinical&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;sentence&quot;, &quot;token&quot;)\ .setOutputCol(&quot;embeddings&quot;) val ner = MedicalNerModel.pretrained(&quot;ner_deid_name_multilingual_clinical&quot;, &quot;xx&quot;, &quot;clinical/models&quot;) .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;embeddings&quot;)) .setOutputCol(&quot;ner&quot;) val ner_converter = new NerConverter() .setInputCols(Array(&quot;sentence&quot;, &quot;token&quot;, &quot;ner&quot;)) .setOutputCol(&quot;ner_chunk&quot;) val nlpPipeline = new Pipeline().setStages(Array( document_assembler, sentence_detector, tokenizer, embeddings, ner, ner_converter )) val text_list = Seq( &quot;&quot;&quot;Record date: 2093-01-13, David Hale, M.D., Name: Hendrickson, Ora MR. # 7194334 Date: 01/13/93 PCP: Oliveira, 25 years old, Record date: 1-11-2000. Cocke County Baptist Hospital. 0295 Keats Street. Phone +1 (302) 786-5227. The patient's complaints first surfaced when he started working for Brothers Coal-Mine.&quot;&quot;&quot;, &quot;&quot;&quot;J'ai vu en consultation Michel Martinez (49 ans) adressé au Centre Hospitalier De Plaisir pour un diabète mal contrôlé avec des symptômes datant de Mars 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Michael Berger wird am Morgen des 12 Dezember 2018 ins St. Elisabeth-Krankenhaus in Bad Kissingen eingeliefert. Herr Berger ist 76 Jahre alt und hat zu viel Wasser in den Beinen.&quot;&quot;&quot;, &quot;&quot;&quot;Ho visto Gastone Montanariello (49 anni) riferito all' Ospedale San Camillo per diabete mal controllato con sintomi risalenti a marzo 2015.&quot;&quot;&quot;, &quot;&quot;&quot;Antonio Miguel Martínez, un varón de 35 años de edad, de profesión auxiliar de enfermería y nacido en Cadiz, España. Aún no estaba vacunado, se infectó con Covid-19 el dia 14 de Marzo y tuvo que ir al Hospital. Fue tratado con anticuerpos monoclonales en la Clinica San Carlos.&quot;&quot;&quot;, &quot;&quot;&quot; Detalhes do paciente: Nome do paciente: Pedro Gonçalves NHC: 2569870 Endereço: Rua Das Flores 23. Cidade/ Província: Porto Código Postal: 21754-987 Dados de cuidados Data de nascimento: 10/10/1963 Idade: 53 anos Data de admissão: 17/06/2016 Doutora: Maria Santos&quot;&quot;&quot;, &quot;&quot;&quot;Spitalul Pentru Ochi de Deal, Drumul Oprea Nr. 972 Vaslui, 737405 România Tel: +40(235)413773 Data setului de analize: 25 May 2022 15:36:00 Nume&amp;amp;Prenume: BUREAN MARIA, Varsta: 77 CNP: 2450502264401&quot;&quot;&quot; ) val data = Seq(text_list).toDS.toDF(&quot;text&quot;) val result = model.fit(data).transform(data) Results +-----------------------+---------+ |chunk |ner_label| +-----------------------+---------+ |David Hale |NAME | |Hendrickson, Ora |NAME | |Oliveira |NAME | |Michel Martinez |NAME | |Michael Berger |NAME | |Berger |NAME | |Gastone Montanariello |NAME | |Antonio Miguel Martínez|NAME | |Pedro Gonçalves |NAME | |Maria Santos |NAME | |BUREAN MARIA |NAME | +-----------------------+---------+ Model Information Model Name: ner_deid_name_multilingual_clinical Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence, token, embeddings] Output Labels: [ner] Language: xx Size: 14.8 MB References It was trained with in-house annotated datasets Benchmarking label precision recall f1-score support B-NAME 0.90 0.90 0.90 4986 I-NAME 0.92 0.92 0.92 4059 micro-avg 0.91 0.91 0.91 9045 macro-avg 0.91 0.91 0.91 9045 weighted-avg 0.91 0.91 0.91 9045</summary></entry><entry><title type="html">Clinical Deidentification Pipeline - Obfuscation (Medium)</title><link href="/2024/02/09/clinical_deidentification_obfuscation_medium_en.html" rel="alternate" type="text/html" title="Clinical Deidentification Pipeline - Obfuscation (Medium)" /><published>2024-02-09T00:00:00+00:00</published><updated>2024-02-09T00:00:00+00:00</updated><id>/2024/02/09/clinical_deidentification_obfuscation_medium_en</id><content type="html" xml:base="/2024/02/09/clinical_deidentification_obfuscation_medium_en.html">## Description

This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text.
Obfuscated entities: `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`, `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_medium_en_5.2.1_3.2_1707497848383.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_medium_en_5.2.1_3.2_1707497848383.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
```scala


import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
&lt;/div&gt;

## Results

```bash

Obfuscated
------------------------------
Name : Dellia Beckwith, Record date: 2093-03-07, MR #161096.
Dr. Ruthell Rummage, ID: 9811914782, IP 001.001.001.001.
He is a 78-year-old male was admitted to the ALLEGIANCE SPECIALTY HOSPITAL OF GREENVILLE for cystectomy on 26/09/1993.
SSN #956-21-3086, Driver's license no: V784696E.
Phone 952-841-3244, Huntstad, Urbana, E-MAIL: Pius@yahoo.com.

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification_obfuscation_medium|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- MedicalNerModel
- NerConverter
- TextMatcherModel
- RegexMatcherModel
- ChunkMergeModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="deid" /><category term="pipeline" /><summary type="html">Description This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text. Obfuscated entities: AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) Results Obfuscated ------------------------------ Name : Dellia Beckwith, Record date: 2093-03-07, MR #161096. Dr. Ruthell Rummage, ID: 9811914782, IP 001.001.001.001. He is a 78-year-old male was admitted to the ALLEGIANCE SPECIALTY HOSPITAL OF GREENVILLE for cystectomy on 26/09/1993. SSN #956-21-3086, Driver's license no: V784696E. Phone 952-841-3244, Huntstad, Urbana, E-MAIL: Pius@yahoo.com. Model Information Model Name: clinical_deidentification_obfuscation_medium Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter MedicalNerModel NerConverter TextMatcherModel RegexMatcherModel ChunkMergeModel DeIdentificationModel Finisher</summary></entry><entry><title type="html">Clinical Deidentification Pipeline - Obfuscation (Small)</title><link href="/2024/02/09/clinical_deidentification_obfuscation_small_en.html" rel="alternate" type="text/html" title="Clinical Deidentification Pipeline - Obfuscation (Small)" /><published>2024-02-09T00:00:00+00:00</published><updated>2024-02-09T00:00:00+00:00</updated><id>/2024/02/09/clinical_deidentification_obfuscation_small_en</id><content type="html" xml:base="/2024/02/09/clinical_deidentification_obfuscation_small_en.html">## Description

This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text.
Obfuscated entities: `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`, `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_small_en_5.2.1_3.2_1707496853724.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_small_en_5.2.1_3.2_1707496853724.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_small&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR 719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 12/17/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
```scala


import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_small&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR 719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 12/17/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
&lt;/div&gt;

## Results

```bash

Obfuscated
------------------------------
Name : Renda Rolls, Record date: 2093-02-26, MR 161096.
Dr. Josephina Shih, ID: 9811914782, IP 444.444.444.444.
He is a 69-year-old male was admitted to the STONE COUNTY HOSPITAL for cystectomy on 01/30/1994.
SSN #956-21-3086, Driver's license no: V784696E.
Phone 952-841-3244, Lestad, Big bear lake, E-MAIL: November@hotmail.com.

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification_obfuscation_small|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- TextMatcherModel
- RegexMatcherModel
- ChunkMergeModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="deid" /><category term="pipeline" /><summary type="html">Description This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text. Obfuscated entities: AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_small&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR 719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 12/17/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_small&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR 719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 12/17/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) Results Obfuscated ------------------------------ Name : Renda Rolls, Record date: 2093-02-26, MR 161096. Dr. Josephina Shih, ID: 9811914782, IP 444.444.444.444. He is a 69-year-old male was admitted to the STONE COUNTY HOSPITAL for cystectomy on 01/30/1994. SSN #956-21-3086, Driver's license no: V784696E. Phone 952-841-3244, Lestad, Big bear lake, E-MAIL: November@hotmail.com. Model Information Model Name: clinical_deidentification_obfuscation_small Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter TextMatcherModel RegexMatcherModel ChunkMergeModel DeIdentificationModel Finisher</summary></entry><entry><title type="html">Clinical Deidentification Pipeline - Obfuscation (Medium)</title><link href="/2024/02/09/clinical_deidentification_obfuscation_medium_en.html" rel="alternate" type="text/html" title="Clinical Deidentification Pipeline - Obfuscation (Medium)" /><published>2024-02-09T00:00:00+00:00</published><updated>2024-02-09T00:00:00+00:00</updated><id>/2024/02/09/clinical_deidentification_obfuscation_medium_en</id><content type="html" xml:base="/2024/02/09/clinical_deidentification_obfuscation_medium_en.html">## Description

This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text.
Obfuscated entities: `AGE`, `CONTACT`, `DATE`, `ID`, `LOCATION`, `NAME`, `PROFESSION`, `CITY`, `COUNTRY`, `DOCTOR`, `HOSPITAL`, `IDNUM`, `MEDICALRECORD`, `ORGANIZATION`, `PATIENT`, `PHONE`, `PROFESSION`, `STREET`, `USERNAME`, `ZIP`, `ACCOUNT`, `LICENSE`, `VIN`, `SSN`, `DLN`, `PLATE`, `IPADDR`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_medium_en_5.2.1_3.4_1707498412968.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/clinical_deidentification_obfuscation_medium_en_5.2.1_3.4_1707498412968.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
```scala


import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435.
Dr. John Green, ID: 1231511863, IP 203.120.223.13.
He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993.
SSN #333-44-6666, Driver's license no: A334455B.
Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;)


```
&lt;/div&gt;

## Results

```bash

Obfuscated
------------------------------
Name : Leonette Most, Record date: 2093-01-25, MR #161096.
Dr. Arnette Felts, ID: 9811914782, IP 001.001.001.001.
He is a 70-year-old male was admitted to the PIEDMONT FAYETTE HOSPITAL for cystectomy on 16/08/1993.
SSN #956-21-3086, Driver's license no: V784696E.
Phone 952-841-3244, 2122 Manchester Expressway, South Thomas, E-MAIL: Tomke@yahoo.com.

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|clinical_deidentification_obfuscation_medium|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.7 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverter
- MedicalNerModel
- NerConverter
- TextMatcherModel
- RegexMatcherModel
- ChunkMergeModel
- DeIdentificationModel
- Finisher</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="clinical" /><category term="deid" /><category term="pipeline" /><summary type="html">Description This pipeline can be used to detect the PHI information from medical texts and obfuscate (replace them with fake ones) in the resulting text. Obfuscated entities: AGE, CONTACT, DATE, ID, LOCATION, NAME, PROFESSION, CITY, COUNTRY, DOCTOR, HOSPITAL, IDNUM, MEDICALRECORD, ORGANIZATION, PATIENT, PHONE, PROFESSION, STREET, USERNAME, ZIP, ACCOUNT, LICENSE, VIN, SSN, DLN, PLATE, IPADDR Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val deid_pipeline = PretrainedPipeline(&quot;clinical_deidentification_obfuscation_medium&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = deid_pipeline.annotate(&quot;&quot;&quot;Name : Hendrickson, Ora, Record date: 2093-01-13, MR #719435. Dr. John Green, ID: 1231511863, IP 203.120.223.13. He is a 60-year-old male was admitted to the Day Hospital for cystectomy on 04/08/1993. SSN #333-44-6666, Driver's license no: A334455B. Phone 302-786-5227, 0295 Keats Street, San Francisco, E-MAIL: smith@gmail.com.&quot;&quot;&quot;) Results Obfuscated ------------------------------ Name : Leonette Most, Record date: 2093-01-25, MR #161096. Dr. Arnette Felts, ID: 9811914782, IP 001.001.001.001. He is a 70-year-old male was admitted to the PIEDMONT FAYETTE HOSPITAL for cystectomy on 16/08/1993. SSN #956-21-3086, Driver's license no: V784696E. Phone 952-841-3244, 2122 Manchester Expressway, South Thomas, E-MAIL: Tomke@yahoo.com. Model Information Model Name: clinical_deidentification_obfuscation_medium Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 1.7 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverter MedicalNerModel NerConverter TextMatcherModel RegexMatcherModel ChunkMergeModel DeIdentificationModel Finisher</summary></entry></feed>