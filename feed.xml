<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2024-01-22T08:15:23+00:00</updated><id>/feed.xml</id><title type="html">Spark NLP</title><subtitle>High Performance NLP with Apache Spark
</subtitle><author><name>{&quot;type&quot;=&gt;nil, &quot;name&quot;=&gt;nil, &quot;url&quot;=&gt;nil, &quot;avatar&quot;=&gt;nil, &quot;bio&quot;=&gt;nil, &quot;email&quot;=&gt;nil, &quot;facebook&quot;=&gt;nil, &quot;twitter&quot;=&gt;nil, &quot;weibo&quot;=&gt;nil, &quot;googleplus&quot;=&gt;nil, &quot;telegram&quot;=&gt;nil, &quot;medium&quot;=&gt;nil, &quot;zhihu&quot;=&gt;nil, &quot;douban&quot;=&gt;nil, &quot;linkedin&quot;=&gt;nil, &quot;github&quot;=&gt;nil, &quot;npm&quot;=&gt;nil}</name></author><entry><title type="html">Sentence Entity Resolver for RxNorm (sbiobert_base_cased_mli embeddings)</title><link href="/2024/01/17/sbiobertresolve_rxnorm_augmented_en.html" rel="alternate" type="text/html" title="Sentence Entity Resolver for RxNorm (sbiobert_base_cased_mli embeddings)" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/sbiobertresolve_rxnorm_augmented_en</id><content type="html" xml:base="/2024/01/17/sbiobertresolve_rxnorm_augmented_en.html">## Description

This model maps clinical entities and concepts (like drugs/ingredients) to RxNorm codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings. It trained on the augmented version of the dataset which is used in previous RxNorm resolver models. Additionally, this model returns concept classes of the drugs in `all_k_aux_labels` column.

## Predicted Entities

`RxNorm Codes`, `Concept Classes`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
[Open in Colab](https://colab.research.google.com/github/JohnSnowLabs/spark-nlp-workshop/blob/master/tutorials/Certification_Trainings/Healthcare/3.Clinical_Entity_Resolvers.ipynb){:.button.button-orange.button-orange-trans.co.button-icon}
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_rxnorm_augmented_en_5.2.1_3.0_1705502473156.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/sbiobertresolve_rxnorm_augmented_en_5.2.1_3.0_1705502473156.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python
documentAssembler = DocumentAssembler()\
  .setInputCol(&quot;text&quot;)\
  .setOutputCol(&quot;ner_chunk&quot;)

sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;,&quot;clinical/models&quot;)\
  .setInputCols([&quot;ner_chunk&quot;])\
  .setOutputCol(&quot;sbert_embeddings&quot;)\
  .setCaseSensitive(False)

rxnorm_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_rxnorm_augmented&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\
  .setInputCols(&quot;sbert_embeddings&quot;)\
  .setOutputCol(&quot;rxnorm_code&quot;)\
  .setDistanceFunction(&quot;EUCLIDEAN&quot;)

rxnorm_pipeline = Pipeline(stages = [
  documentAssembler,
  sbert_embedder,
  rxnorm_resolver])

model = rxnorm_pipeline.fit(spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;))

light_model = LightPipeline(model)

result = light_model.fullAnnotate([&quot;Coumadin 5 mg&quot;, &quot;aspirin&quot;, &quot;avandia 4 mg&quot;])
```
```scala
val documentAssembler = new DocumentAssembler()
    .setInputCol(&quot;text&quot;)
    .setOutputCol(&quot;ner_chunk&quot;)

val sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;,&quot;clinical/models&quot;)
    .setInputCols(Array(&quot;ner_chunk&quot;))
    .setOutputCol(&quot;sbert_embeddings&quot;)
    .setCaseSensitive(False)

val rxnorm_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_rxnorm_augmented&quot;, &quot;en&quot;, &quot;clinical/models&quot;)
    .setInputCols(&quot;sbert_embeddings&quot;)
    .setOutputCol(&quot;rxnorm_code&quot;)
    .setDistanceFunction(&quot;EUCLIDEAN&quot;)

val rxnorm_pipelineModel = new PipelineModel().setStages(Array(documentAssembler, 
                                                               sbert_embedder, 
                                                               rxnorm_resolver))

val data = Seq(Array(&quot;Coumadin 5 mg&quot;, &quot;aspirin&quot;, &quot;avandia 4 mg&quot;)).toDS.toDF(&quot;text&quot;)

val result= rxnorm_pipelineModel.fit(data).transform(data)
```
&lt;/div&gt;

## Results

```bash
|    |   RxNormCode | Resolution                               | all_k_results                     | all_k_distances                   | all_k_cosine_distances            | all_k_resolutions                                               | all_k_aux_labels                  |
|---:|-------------:|:-----------------------------------------|:----------------------------------|:----------------------------------|:----------------------------------|:----------------------------------------------------------------|:----------------------------------|
|  0 |       855333 | warfarin sodium 5 MG [Coumadin]          | 855333:::432467:::438740:::103... | 3.0367:::4.7790:::4.7790:::5.3... | 0.0161:::0.0395:::0.0395:::0.0... | warfarin sodium 5 MG [Coumadin]:::coumarin 5 MG Oral Tablet:... | Branded Drug Comp:::Clinical D... |
|  1 |      1537020 | aspirin Effervescent Oral Tablet         | 1537020:::1191:::1295740:::405... | 0.0000:::0.0000:::4.1826:::5.7... | 0.0000:::0.0000:::0.0292:::0.0... | aspirin Effervescent Oral Tablet:::aspirin:::aspirin Oral Po... | Clinical Drug Form:::Ingredien... |
|  2 |       261242 | rosiglitazone 4 MG Oral Tablet [Avandia] | 261242:::810073:::153845:::109... | 0.0000:::4.7482:::5.0125:::5.2... | 0.0000:::0.0365:::0.0409:::0.0... | rosiglitazone 4 MG Oral Tablet [Avandia]:::fesoterodine fuma... | Branded Drug:::Branded Drug Co... |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|sbiobertresolve_rxnorm_augmented|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Input Labels:|[sentence_embeddings]|
|Output Labels:|[rxnorm_code]|
|Language:|en|
|Size:|1.3 GB|
|Case sensitive:|false|

## References

In this model, RxNorm  version 5.0 was used for the training.</content><author><name>John Snow Labs</name></author><category term="rxnorm" /><category term="licensed" /><category term="en" /><category term="clinical" /><category term="entity_resolution" /><summary type="html">Description This model maps clinical entities and concepts (like drugs/ingredients) to RxNorm codes using sbiobert_base_cased_mli Sentence Bert Embeddings. It trained on the augmented version of the dataset which is used in previous RxNorm resolver models. Additionally, this model returns concept classes of the drugs in all_k_aux_labels column. Predicted Entities RxNorm Codes, Concept Classes Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU documentAssembler = DocumentAssembler()\ .setInputCol(&quot;text&quot;)\ .setOutputCol(&quot;ner_chunk&quot;) sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;,&quot;clinical/models&quot;)\ .setInputCols([&quot;ner_chunk&quot;])\ .setOutputCol(&quot;sbert_embeddings&quot;)\ .setCaseSensitive(False) rxnorm_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_rxnorm_augmented&quot;, &quot;en&quot;, &quot;clinical/models&quot;)\ .setInputCols(&quot;sbert_embeddings&quot;)\ .setOutputCol(&quot;rxnorm_code&quot;)\ .setDistanceFunction(&quot;EUCLIDEAN&quot;) rxnorm_pipeline = Pipeline(stages = [ documentAssembler, sbert_embedder, rxnorm_resolver]) model = rxnorm_pipeline.fit(spark.createDataFrame([[&quot;&quot;]]).toDF(&quot;text&quot;)) light_model = LightPipeline(model) result = light_model.fullAnnotate([&quot;Coumadin 5 mg&quot;, &quot;aspirin&quot;, &quot;avandia 4 mg&quot;]) val documentAssembler = new DocumentAssembler() .setInputCol(&quot;text&quot;) .setOutputCol(&quot;ner_chunk&quot;) val sbert_embedder = BertSentenceEmbeddings.pretrained(&quot;sbiobert_base_cased_mli&quot;, &quot;en&quot;,&quot;clinical/models&quot;) .setInputCols(Array(&quot;ner_chunk&quot;)) .setOutputCol(&quot;sbert_embeddings&quot;) .setCaseSensitive(False) val rxnorm_resolver = SentenceEntityResolverModel.pretrained(&quot;sbiobertresolve_rxnorm_augmented&quot;, &quot;en&quot;, &quot;clinical/models&quot;) .setInputCols(&quot;sbert_embeddings&quot;) .setOutputCol(&quot;rxnorm_code&quot;) .setDistanceFunction(&quot;EUCLIDEAN&quot;) val rxnorm_pipelineModel = new PipelineModel().setStages(Array(documentAssembler, sbert_embedder, rxnorm_resolver)) val data = Seq(Array(&quot;Coumadin 5 mg&quot;, &quot;aspirin&quot;, &quot;avandia 4 mg&quot;)).toDS.toDF(&quot;text&quot;) val result= rxnorm_pipelineModel.fit(data).transform(data) Results | | RxNormCode | Resolution | all_k_results | all_k_distances | all_k_cosine_distances | all_k_resolutions | all_k_aux_labels | |---:|-------------:|:-----------------------------------------|:----------------------------------|:----------------------------------|:----------------------------------|:----------------------------------------------------------------|:----------------------------------| | 0 | 855333 | warfarin sodium 5 MG [Coumadin] | 855333:::432467:::438740:::103... | 3.0367:::4.7790:::4.7790:::5.3... | 0.0161:::0.0395:::0.0395:::0.0... | warfarin sodium 5 MG [Coumadin]:::coumarin 5 MG Oral Tablet:... | Branded Drug Comp:::Clinical D... | | 1 | 1537020 | aspirin Effervescent Oral Tablet | 1537020:::1191:::1295740:::405... | 0.0000:::0.0000:::4.1826:::5.7... | 0.0000:::0.0000:::0.0292:::0.0... | aspirin Effervescent Oral Tablet:::aspirin:::aspirin Oral Po... | Clinical Drug Form:::Ingredien... | | 2 | 261242 | rosiglitazone 4 MG Oral Tablet [Avandia] | 261242:::810073:::153845:::109... | 0.0000:::4.7482:::5.0125:::5.2... | 0.0000:::0.0365:::0.0409:::0.0... | rosiglitazone 4 MG Oral Tablet [Avandia]:::fesoterodine fuma... | Branded Drug:::Branded Drug Co... | Model Information Model Name: sbiobertresolve_rxnorm_augmented Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Input Labels: [sentence_embeddings] Output Labels: [rxnorm_code] Language: en Size: 1.3 GB Case sensitive: false References In this model, RxNorm version 5.0 was used for the training.</summary></entry><entry><title type="html">Pipeline for Anatomic Therapeutic Chemical (ATC) Sentence Entity Resolver</title><link href="/2024/01/17/atc_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Anatomic Therapeutic Chemical (ATC) Sentence Entity Resolver" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/atc_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/atc_resolver_pipeline_en.html">## Description

This advanced pipeline extracts `DRUG` entities from clinical texts and utilizes the `sbiobert_base_cased_mli` Sentence Bert Embeddings to map these entities to their corresponding Anatomic Therapeutic Chemical (ATC) codes. 

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/atc_resolver_pipeline_en_5.2.1_3.2_1705491262682.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/atc_resolver_pipeline_en_5.2.1_3.2_1705491262682.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;)

```
&lt;/div&gt;

## Results

```bash
|    | chunks              |   begin |   end | entities   | atc_code   | resolutions         |
|---:|:--------------------|--------:|------:|:-----------|:-----------|:--------------------|
|  0 | hydrogen peroxide   |      26 |    42 | DRUG       | A01AB02    | hydrogen peroxide   |
|  1 | amoxicillin         |      54 |    64 | DRUG       | J01CA04    | amoxicillin         |
|  2 | magnesium hydroxide |     153 |   171 | DRUG       | A02AA04    | magnesium hydroxide |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|atc_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.2 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="entity_resolution" /><category term="clinical" /><category term="pipeline" /><category term="atc" /><summary type="html">Description This advanced pipeline extracts DRUG entities from clinical texts and utilizes the sbiobert_base_cased_mli Sentence Bert Embeddings to map these entities to their corresponding Anatomic Therapeutic Chemical (ATC) codes. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;) Results | | chunks | begin | end | entities | atc_code | resolutions | |---:|:--------------------|--------:|------:|:-----------|:-----------|:--------------------| | 0 | hydrogen peroxide | 26 | 42 | DRUG | A01AB02 | hydrogen peroxide | | 1 | amoxicillin | 54 | 64 | DRUG | J01CA04 | amoxicillin | | 2 | magnesium hydroxide | 153 | 171 | DRUG | A02AA04 | magnesium hydroxide | Model Information Model Name: atc_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.2 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Current Procedural Terminology (CPT) Sentence Entity Resolver</title><link href="/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Current Procedural Terminology (CPT) Sentence Entity Resolver" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en.html">## Description

This pipeline extracts `Procedure` and `Measurement` entities and maps them to corresponding Current Procedural Terminology (CPT) codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/cpt_procedures_measurements_resolver_pipeline_en_5.2.1_3.2_1705494476998.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/cpt_procedures_measurements_resolver_pipeline_en_5.2.1_3.2_1705494476998.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node.
We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma.
At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node.
We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma.
At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
|    | chunks               |   begin |   end | entities   |   cpt_code | resolutions| all_codes                                                                                                                                                   |
|---:|:---------------------|--------:|------:|:-----------|-----------:||:------------------------------------------------------------------------------------------------------------------------------------------------------------|
|  0 | pericardectomy       |     239 |   252 | Procedure  |      33030 | Pericardectomy [Pericardiectomy, subtotal or complete; without cardiopulmonary bypass]:::Pericardotomy [Pericardiotomy for removal of clot or foreign body (primary procedure)]:::Phrenicectomy [Transection or avulsion of; phrenic nerve]:::Omphalectomy [Umbilectomy, omphalectomy, excision of umbilicus (separate procedure)]:::Patellectomy [Patellectomy or hemipatellectomy]:::Dacryocystectomy [Excision of lacrimal sac (dacryocystectomy)]:::Parietal pleurectomy [Pleurectomy, parietal (separate procedure)]:::Excision, prepatellar bursa [Excision, prepatellar bursa]:::Partial resection of pericardium for drainage [Creation of pericardial window or partial resection for drainage]:::Pleurodesis (procedure) [Pleural scarification for repeat pneumothorax]:::Operculectomy, excision pericoronal tissues [Operculectomy, excision pericoronal tissues]:::Rhinectomy [Rhinectomy]:::Pericardiectomy, subtotal or complete [Pericardiectomy, subtotal or complete]:::Talectomy [Talectomy (astragalectomy)]:::Decortication and parietal pleurectomy [Decortication and parietal pleurectomy]:::Buccal frenectomy [Excision of frenum, labial or buccal (frenumectomy, frenulectomy, frenectomy)]:::Labyrinthectomy [Labyrinthectomy| 33030:::33020:::64746:::49250:::27350:::68520:::32310:::27340:::33025:::32215:::41821:::1005708:::1006065:::28130:::32320:::40819:::1010234                 |
|  1 | chest tube placement |     321 |   340 | Procedure  |      39503 | Insertion of chest tube [Repair, neonatal diaphragmatic hernia, with or without chest tube insertion and with or without creation of ventral hernia]:::Chemotherapy administration into chest cavity requiring insertion of catheter [Chemotherapy administration into pleural cavity, requiring and including thoracentesis]:::Insertion of devices in chest cavity for radiation therapy guidance, accessed through the skin [Placement of interstitial device(s) for radiation therapy guidance (eg, fiducial markers, dosimeter), percutaneous, intra-thoracic, single or multiple]:::Incision of chest wall [Exploration for postoperative hemorrhage, thrombosis or infection; chest]:::Incision and exploration of chest cavity [Thoracotomy; with exploration]:::Insertion of catheter into chest artery for diagnosis or treatment including radiological supervision and interpretation [Selective catheter placement, vertebral artery, unilateral, with angiography of the ipsilateral vertebral circulation and all associated radiological supervision and interpretation, includes angiography of the cervicocerebral arch, when performed]:::Neck or chest procedure [Unlisted procedure, neck or thorax]:::Strapping of chest [Strapping; thorax]:::CAD CHEST RADIOGRAPH CONCURRENT W/INTERPRETATION [Computer-aided detection (CAD) (computer algorithm analysis of digital image data for lesion detection) with further physician review for interpretation and report, with or without digitization of film radiographic images, chest radiograph(s), performe...]:::Changing endotracheal tube [Tracheotomy tube change prior to establishment of fistula tract]:::Emergent surgical opening of windpipe for insertion of breathing tube [Tracheostomy, emergency procedure; cricothyroid membrane]:::VENTILATING TUBE RMVL REQUIRING GENERAL ANES [Ventilating tube removal requiring general anesthesia]:::Surgical Procedures on the Respiratory System [Surgical Procedures on the Respiratory System]:::Critical Care Services [Critical Care Services]:::Insertion of breathing sensor electrode or electrode array into chest wall [Insertion of chest wall respiratory sensor electrode or electrode array, including connection to pulse generator (List separately in addition to code for primary procedure)]:::Thoracoscopy, surgical; with control of traumatic hemorrhage | [Health Care Activity] - [Therapeutic or Preventive Procedure] [Thoracoscopy, surgical; with control of traumatic hemorrhage]:::Anesthesia for Intrathoracic Procedures [Anesthesia for Intrathoracic Procedures]:::Procedure on respiratory system [Unlisted respiratory procedure, diagnostic nuclear medicine]:::Pulmonary medical procedure [Intrapulmonary surfactant administration by a physician or other qualified health care professional through endotracheal tube] | 39503:::96440:::32553:::35820:::32100:::36226:::21899:::29200:::0174T:::31502:::31605:::69424:::1005690:::1013729:::0466T:::32654:::1002859:::78599:::94610 |
|  2 | thoracoscopy         |     381 |   392 | Procedure  |    1020900 | Thoracoscopy [Thoracoscopy]:::Thoracoscopy, surgical; with control of traumatic hemorrhage | [Health Care Activity] - [Therapeutic or Preventive Procedure] [Thoracoscopy, surgical; with control of traumatic hemorrhage]:::Thoracoscopy (procedure) [Thoracoscopy, surgical; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)]:::Thoracoscopy, surgical [Thoracoscopy, surgical]:::Thoracostomy [Exploration for postoperative hemorrhage, thrombosis or infection; chest]:::THORACOSCOPY DX MEDIASTINAL SPACE W/BIOPSY SPX [Thoracoscopy, diagnostic (separate procedure); mediastinal space, with biopsy]:::Thoracentesis (procedure) [Thoracentesis, needle or catheter, aspiration of the pleural space; with imaging guidance]:::EXC TRACHEAL STENOSIS&amp;ANAST CERVICOTHORACIC [Excision tracheal stenosis and anastomosis; cervicothoracic]:::Tracheoscopy [Laryngoscopy direct, with or without tracheoscopy; for aspiration]:::Strapping of thorax (procedure) [Strapping; thorax| 1020900:::32654:::32668:::1006014:::35820:::32606:::32555:::31781:::31515:::29200                                                                           |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|cpt_procedures_measurements_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.5 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="entity_resolution" /><category term="clinical" /><category term="pipeline" /><category term="cpt" /><summary type="html">Description This pipeline extracts Procedure and Measurement entities and maps them to corresponding Current Procedural Terminology (CPT) codes using sbiobert_base_cased_mli Sentence Bert Embeddings. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;) Results | | chunks | begin | end | entities | cpt_code | resolutions | all_codes | |---:|:---------------------|--------:|------:|:-----------|-----------:||:------------------------------------------------------------------------------------------------------------------------------------------------------------| | 0 | pericardectomy | 239 | 252 | Procedure | 33030 | Pericardectomy [Pericardiectomy, subtotal or complete; without cardiopulmonary bypass]:::Pericardotomy [Pericardiotomy for removal of clot or foreign body (primary procedure)]:::Phrenicectomy [Transection or avulsion of; phrenic nerve]:::Omphalectomy [Umbilectomy, omphalectomy, excision of umbilicus (separate procedure)]:::Patellectomy [Patellectomy or hemipatellectomy]:::Dacryocystectomy [Excision of lacrimal sac (dacryocystectomy)]:::Parietal pleurectomy [Pleurectomy, parietal (separate procedure)]:::Excision, prepatellar bursa [Excision, prepatellar bursa]:::Partial resection of pericardium for drainage [Creation of pericardial window or partial resection for drainage]:::Pleurodesis (procedure) [Pleural scarification for repeat pneumothorax]:::Operculectomy, excision pericoronal tissues [Operculectomy, excision pericoronal tissues]:::Rhinectomy [Rhinectomy]:::Pericardiectomy, subtotal or complete [Pericardiectomy, subtotal or complete]:::Talectomy [Talectomy (astragalectomy)]:::Decortication and parietal pleurectomy [Decortication and parietal pleurectomy]:::Buccal frenectomy [Excision of frenum, labial or buccal (frenumectomy, frenulectomy, frenectomy)]:::Labyrinthectomy [Labyrinthectomy] | 33030:::33020:::64746:::49250:::27350:::68520:::32310:::27340:::33025:::32215:::41821:::1005708:::1006065:::28130:::32320:::40819:::1010234 | | 1 | chest tube placement | 321 | 340 | Procedure | 39503 | Insertion of chest tube [Repair, neonatal diaphragmatic hernia, with or without chest tube insertion and with or without creation of ventral hernia]:::Chemotherapy administration into chest cavity requiring insertion of catheter [Chemotherapy administration into pleural cavity, requiring and including thoracentesis]:::Insertion of devices in chest cavity for radiation therapy guidance, accessed through the skin [Placement of interstitial device(s) for radiation therapy guidance (eg, fiducial markers, dosimeter), percutaneous, intra-thoracic, single or multiple]:::Incision of chest wall [Exploration for postoperative hemorrhage, thrombosis or infection; chest]:::Incision and exploration of chest cavity [Thoracotomy; with exploration]:::Insertion of catheter into chest artery for diagnosis or treatment including radiological supervision and interpretation [Selective catheter placement, vertebral artery, unilateral, with angiography of the ipsilateral vertebral circulation and all associated radiological supervision and interpretation, includes angiography of the cervicocerebral arch, when performed]:::Neck or chest procedure [Unlisted procedure, neck or thorax]:::Strapping of chest [Strapping; thorax]:::CAD CHEST RADIOGRAPH CONCURRENT W/INTERPRETATION [Computer-aided detection (CAD) (computer algorithm analysis of digital image data for lesion detection) with further physician review for interpretation and report, with or without digitization of film radiographic images, chest radiograph(s), performe...]:::Changing endotracheal tube [Tracheotomy tube change prior to establishment of fistula tract]:::Emergent surgical opening of windpipe for insertion of breathing tube [Tracheostomy, emergency procedure; cricothyroid membrane]:::VENTILATING TUBE RMVL REQUIRING GENERAL ANES [Ventilating tube removal requiring general anesthesia]:::Surgical Procedures on the Respiratory System [Surgical Procedures on the Respiratory System]:::Critical Care Services [Critical Care Services]:::Insertion of breathing sensor electrode or electrode array into chest wall [Insertion of chest wall respiratory sensor electrode or electrode array, including connection to pulse generator (List separately in addition to code for primary procedure)]:::Thoracoscopy, surgical; with control of traumatic hemorrhage | [Health Care Activity] - [Therapeutic or Preventive Procedure] [Thoracoscopy, surgical; with control of traumatic hemorrhage]:::Anesthesia for Intrathoracic Procedures [Anesthesia for Intrathoracic Procedures]:::Procedure on respiratory system [Unlisted respiratory procedure, diagnostic nuclear medicine]:::Pulmonary medical procedure [Intrapulmonary surfactant administration by a physician or other qualified health care professional through endotracheal tube] | 39503:::96440:::32553:::35820:::32100:::36226:::21899:::29200:::0174T:::31502:::31605:::69424:::1005690:::1013729:::0466T:::32654:::1002859:::78599:::94610 | | 2 | thoracoscopy | 381 | 392 | Procedure | 1020900 | Thoracoscopy [Thoracoscopy]:::Thoracoscopy, surgical; with control of traumatic hemorrhage | [Health Care Activity] - [Therapeutic or Preventive Procedure] [Thoracoscopy, surgical; with control of traumatic hemorrhage]:::Thoracoscopy (procedure) [Thoracoscopy, surgical; with diagnostic wedge resection followed by anatomic lung resection (List separately in addition to code for primary procedure)]:::Thoracoscopy, surgical [Thoracoscopy, surgical]:::Thoracostomy [Exploration for postoperative hemorrhage, thrombosis or infection; chest]:::THORACOSCOPY DX MEDIASTINAL SPACE W/BIOPSY SPX [Thoracoscopy, diagnostic (separate procedure); mediastinal space, with biopsy]:::Thoracentesis (procedure) [Thoracentesis, needle or catheter, aspiration of the pleural space; with imaging guidance]:::EXC TRACHEAL STENOSIS&amp;amp;ANAST CERVICOTHORACIC [Excision tracheal stenosis and anastomosis; cervicothoracic]:::Tracheoscopy [Laryngoscopy direct, with or without tracheoscopy; for aspiration]:::Strapping of thorax (procedure) [Strapping; thorax] | 1020900:::32654:::32668:::1006014:::35820:::32606:::32555:::31781:::31515:::29200 | Model Information Model Name: cpt_procedures_measurements_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.5 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Explain Clinical Document Generic</title><link href="/2024/01/17/explain_clinical_doc_generic_en.html" rel="alternate" type="text/html" title="Explain Clinical Document Generic" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/explain_clinical_doc_generic_en</id><content type="html" xml:base="/2024/01/17/explain_clinical_doc_generic_en.html">## Description

This pipeline is designed to:

- extract clinical/medical entities
- assign assertion status to the extracted entities
- establish relations between the extracted entities

from clinical texts. In this pipeline, 4 NER models, one assertion model, and one relation extraction model were used to achieve those tasks. Here are the NER, assertion, and relation extraction labels this pipeline can extract.

- Clinical Entity Labels: `PROBLEM`, `TEST`, `TREATMENT` 

- Assertion Status Labels: `Present`, `Absent`, `Possible`, `Planned`, `Past`, `Family`, `Hypotetical`, `SomeoneElse`

- Relation Extraction Labels: `TrAP`, `TeRP`, `TrIP`, `TrWP`, `TrCP`, `TrAP`, `TrNAP`, `TeCP`, `PIP`

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/explain_clinical_doc_generic_en_5.2.1_3.2_1705509431473.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/explain_clinical_doc_generic_en_5.2.1_3.2_1705509431473.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;explain_clinical_doc_generic&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;&quot;&quot;Patient with severe fever and sore throat.
He shows no stomach pain. He maintained on an epidural and PCA for pain control.
After CT, lung tumor located at the right lower lobe. Father with Alzheimer.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;explain_clinical_doc_generic&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;&quot;&quot;Patient with severe fever and sore throat.
He shows no stomach pain. He maintained on an epidural and PCA for pain control.
After CT, lung tumor located at the right lower lobe. Father with Alzheimer.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
# NER and Assertion Result
|    | chunks       | entities   | assertion    |
|---:|:-------------|:-----------|:-------------|
|  0 | severe fever | PROBLEM    | Present      |
|  1 | sore throat  | PROBLEM    | Present      |
|  2 | stomach pain | PROBLEM    | Absent       |
|  3 | an epidural  | TREATMENT  | Past         |
|  4 | PCA          | TREATMENT  | Past         |
|  5 | pain         | PROBLEM    | Hypothetical |
|  6 | CT           | TEST       | Past         |
|  7 | lung tumor   | PROBLEM    | Present      |
|  8 | Alzheimer    | PROBLEM    | Family       |

# Relation Extraction Result
|    |   sentence |   entity1_begin |   entity1_end | chunk1       | entity1   |   entity2_begin |   entity2_end | chunk2      | entity2   | relation   |   confidence |
|---:|-----------:|----------------:|--------------:|:-------------|:----------|----------------:|--------------:|:------------|:----------|:-----------|-------------:|
|  0 |          0 |              13 |            24 | severe fever | PROBLEM   |              30 |            40 | sore throat | PROBLEM   | PIP        |     0.999998 |
|  2 |          2 |             102 |           104 | PCA          | TREATMENT |             110 |           113 | pain        | PROBLEM   | TrAP       |     0.998956 |
|  3 |          3 |             130 |           131 | CT           | TEST      |             134 |           143 | lung tumor  | PROBLEM   | TeRP       |     1        |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|explain_clinical_doc_generic|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|1.8 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- AssertionDLModel
- PerceptronModel
- DependencyParserModel
- RelationExtractionModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="clinical" /><category term="en" /><category term="doc" /><category term="pipeline" /><category term="ner" /><category term="assertion" /><category term="relation_extraction" /><category term="generic" /><summary type="html">Description This pipeline is designed to: extract clinical/medical entities assign assertion status to the extracted entities establish relations between the extracted entities from clinical texts. In this pipeline, 4 NER models, one assertion model, and one relation extraction model were used to achieve those tasks. Here are the NER, assertion, and relation extraction labels this pipeline can extract. Clinical Entity Labels: PROBLEM, TEST, TREATMENT Assertion Status Labels: Present, Absent, Possible, Planned, Past, Family, Hypotetical, SomeoneElse Relation Extraction Labels: TrAP, TeRP, TrIP, TrWP, TrCP, TrAP, TrNAP, TeCP, PIP Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;explain_clinical_doc_generic&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;&quot;&quot;Patient with severe fever and sore throat. He shows no stomach pain. He maintained on an epidural and PCA for pain control. After CT, lung tumor located at the right lower lobe. Father with Alzheimer.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;explain_clinical_doc_generic&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;&quot;&quot;Patient with severe fever and sore throat. He shows no stomach pain. He maintained on an epidural and PCA for pain control. After CT, lung tumor located at the right lower lobe. Father with Alzheimer.&quot;&quot;&quot;) Results # NER and Assertion Result | | chunks | entities | assertion | |---:|:-------------|:-----------|:-------------| | 0 | severe fever | PROBLEM | Present | | 1 | sore throat | PROBLEM | Present | | 2 | stomach pain | PROBLEM | Absent | | 3 | an epidural | TREATMENT | Past | | 4 | PCA | TREATMENT | Past | | 5 | pain | PROBLEM | Hypothetical | | 6 | CT | TEST | Past | | 7 | lung tumor | PROBLEM | Present | | 8 | Alzheimer | PROBLEM | Family | # Relation Extraction Result | | sentence | entity1_begin | entity1_end | chunk1 | entity1 | entity2_begin | entity2_end | chunk2 | entity2 | relation | confidence | |---:|-----------:|----------------:|--------------:|:-------------|:----------|----------------:|--------------:|:------------|:----------|:-----------|-------------:| | 0 | 0 | 13 | 24 | severe fever | PROBLEM | 30 | 40 | sore throat | PROBLEM | PIP | 0.999998 | | 2 | 2 | 102 | 104 | PCA | TREATMENT | 110 | 113 | pain | PROBLEM | TrAP | 0.998956 | | 3 | 3 | 130 | 131 | CT | TEST | 134 | 143 | lung tumor | PROBLEM | TeRP | 1 | Model Information Model Name: explain_clinical_doc_generic Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 1.8 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel AssertionDLModel PerceptronModel DependencyParserModel RelationExtractionModel</summary></entry><entry><title type="html">Pipeline for Hierarchical Condition Categories (HCC) Sentence Entity Resolver</title><link href="/2024/01/17/hcc_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Hierarchical Condition Categories (HCC) Sentence Entity Resolver" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/hcc_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/hcc_resolver_pipeline_en.html">## Description

This advanced pipeline extracts clinical conditions from clinical texts and utilizes the `sbiobert_base_cased_mli` Sentence Bert Embeddings to map these entities to their corresponding Hierarchical Condition Categories (HCC) codes.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/hcc_resolver_pipeline_en_5.2.1_3.2_1705487625394.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/hcc_resolver_pipeline_en_5.2.1_3.2_1705487625394.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;hcc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;The patient's medical record indicates a diagnosis of Diabetes and Chronic Obstructive Pulmonary Disease, requiring comprehensive care and management.&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;hcc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;The patient's medical record indicates a diagnosis of Diabetes and Chronic Obstructive Pulmonary Disease, requiring comprehensive care and management.&quot;)

```
&lt;/div&gt;

## Results

```bash
|    | chunks                                |   begin |   end | entities   |   hcc_code | resolutions                                                                                                                                                                                                                                                                                                                                 | all_codes          |
|---:|:--------------------------------------|--------:|------:|:-----------|-----------:|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------|
|  0 | Diabetes                              |      54 |    61 | PROBLEM    |         19 | diabetes monitored [type 2 diabetes mellitus without complications]:::anaemia of diabetes [anemia, unspecified]:::anemia of diabetes (disorder) [type 2 diabetes mellitus with other specified complication]                                                                                                                                | 19:::0:::18        |
|  1 | Chronic Obstructive Pulmonary Disease |      67 |   103 | PROBLEM    |        111 | chronic obstructive pulmonary disease [chronic obstructive pulmonary disease, unspecified]:::chronic lung disease [pneumoconiosis due to other dust containing silica]:::chronic pulmonary heart disease [pulmonary heart disease, unspecified]:::other chronic obstructive pulmonary disease [other chronic obstructive pulmonary disease] | 111:::112:::85:::0 |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|hcc_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|3.5 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="entity_resolution" /><category term="clinical" /><category term="pipeline" /><category term="hcc" /><summary type="html">Description This advanced pipeline extracts clinical conditions from clinical texts and utilizes the sbiobert_base_cased_mli Sentence Bert Embeddings to map these entities to their corresponding Hierarchical Condition Categories (HCC) codes. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;hcc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;The patient's medical record indicates a diagnosis of Diabetes and Chronic Obstructive Pulmonary Disease, requiring comprehensive care and management.&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;hcc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;The patient's medical record indicates a diagnosis of Diabetes and Chronic Obstructive Pulmonary Disease, requiring comprehensive care and management.&quot;) Results | | chunks | begin | end | entities | hcc_code | resolutions | all_codes | |---:|:--------------------------------------|--------:|------:|:-----------|-----------:|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:-------------------| | 0 | Diabetes | 54 | 61 | PROBLEM | 19 | diabetes monitored [type 2 diabetes mellitus without complications]:::anaemia of diabetes [anemia, unspecified]:::anemia of diabetes (disorder) [type 2 diabetes mellitus with other specified complication] | 19:::0:::18 | | 1 | Chronic Obstructive Pulmonary Disease | 67 | 103 | PROBLEM | 111 | chronic obstructive pulmonary disease [chronic obstructive pulmonary disease, unspecified]:::chronic lung disease [pneumoconiosis due to other dust containing silica]:::chronic pulmonary heart disease [pulmonary heart disease, unspecified]:::other chronic obstructive pulmonary disease [other chronic obstructive pulmonary disease] | 111:::112:::85:::0 | Model Information Model Name: hcc_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 3.5 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Snomed Concept, Body Structure Version</title><link href="/2024/01/17/snomed_body_structure_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Snomed Concept, Body Structure Version" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/snomed_body_structure_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/snomed_body_structure_resolver_pipeline_en.html">## Description

This pipeline extracts anatomical structure entities and maps them to their corresponding SNOMED (body structure version) codes using  `sbiobert_base_cased_mli` Sentence Bert Embeddings.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/snomed_body_structure_resolver_pipeline_en_5.2.1_3.2_1705498980703.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/snomed_body_structure_resolver_pipeline_en_5.2.1_3.2_1705498980703.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

snomed_pipeline = PretrainedPipeline(&quot;snomed_body_structure_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;The patient is a 30-year-old female with a long history of insulin-dependent diabetes, type 2; coronary artery disease; chronic renal insufficiency; peripheral vascular disease, also secondary to diabetes; who was originally admitted to an outside hospital for what appeared to be acute paraplegia, lower extremities. She did receive a course of Bactrim for 14 days for UTI.&quot;&quot;&quot;

result = snomed_pipeline.fullAnnotate(text)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val snomed_pipeline = PretrainedPipeline(&quot;snomed_body_structure_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;&quot;&quot;The patient is a 30-year-old female with a long history of insulin-dependent diabetes, type 2; coronary artery disease; chronic renal insufficiency; peripheral vascular disease, also secondary to diabetes; who was originally admitted to an outside hospital for what appeared to be acute paraplegia, lower extremities. She did receive a course of Bactrim for 14 days for UTI.&quot;&quot;&quot;

val result = snomed_pipeline.fullAnnotate(text)

```
&lt;/div&gt;

## Results

```bash

+-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|             chunks|begin|end|     code|                                         all_codes|                                       resolutions|                                     all_distances|
+-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|    coronary artery|   95|109|119204004|[119204004, 360487004, 41801008, 312553002, 181...|[Coronary artery part, Segment of coronary arte...|[0.0384, 0.0437, 0.0624, 0.0738, 0.0749, 0.0805...|
|              renal|  128|132|243968009|[243968009, 84924000, 363530009, 119219003, 640...|[Renal area, Structure of renal segment, Struct...|[0.0594, 0.0790, 0.1002, 0.1007, 0.1013, 0.1052...|
|peripheral vascular|  149|167| 51833009|[51833009, 361391003, 371671000000102, 36200600...|[Peripheral vascular system structure, Regional...|[0.0796, 0.0809, 0.0847, 0.0864, 0.0881, 0.0940...|
|  lower extremities|  299|315|120575009|[120575009, 61685007, 69548008, 229757002, 1282...|[Lower extremity part, Lower limb structure, Lo...|[0.0313, 0.0385, 0.0454, 0.0462, 0.0500, 0.0546...|
+-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|snomed_body_structure_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.3 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="snomed" /><category term="pipeline" /><category term="resolver" /><summary type="html">Description This pipeline extracts anatomical structure entities and maps them to their corresponding SNOMED (body structure version) codes using sbiobert_base_cased_mli Sentence Bert Embeddings. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline snomed_pipeline = PretrainedPipeline(&quot;snomed_body_structure_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;The patient is a 30-year-old female with a long history of insulin-dependent diabetes, type 2; coronary artery disease; chronic renal insufficiency; peripheral vascular disease, also secondary to diabetes; who was originally admitted to an outside hospital for what appeared to be acute paraplegia, lower extremities. She did receive a course of Bactrim for 14 days for UTI.&quot;&quot;&quot; result = snomed_pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val snomed_pipeline = PretrainedPipeline(&quot;snomed_body_structure_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;&quot;&quot;The patient is a 30-year-old female with a long history of insulin-dependent diabetes, type 2; coronary artery disease; chronic renal insufficiency; peripheral vascular disease, also secondary to diabetes; who was originally admitted to an outside hospital for what appeared to be acute paraplegia, lower extremities. She did receive a course of Bactrim for 14 days for UTI.&quot;&quot;&quot; val result = snomed_pipeline.fullAnnotate(text) Results +-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | chunks|begin|end| code| all_codes| resolutions| all_distances| +-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | coronary artery| 95|109|119204004|[119204004, 360487004, 41801008, 312553002, 181...|[Coronary artery part, Segment of coronary arte...|[0.0384, 0.0437, 0.0624, 0.0738, 0.0749, 0.0805...| | renal| 128|132|243968009|[243968009, 84924000, 363530009, 119219003, 640...|[Renal area, Structure of renal segment, Struct...|[0.0594, 0.0790, 0.1002, 0.1007, 0.1013, 0.1052...| |peripheral vascular| 149|167| 51833009|[51833009, 361391003, 371671000000102, 36200600...|[Peripheral vascular system structure, Regional...|[0.0796, 0.0809, 0.0847, 0.0864, 0.0881, 0.0940...| | lower extremities| 299|315|120575009|[120575009, 61685007, 69548008, 229757002, 1282...|[Lower extremity part, Lower limb structure, Lo...|[0.0313, 0.0385, 0.0454, 0.0462, 0.0500, 0.0546...| +-------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ Model Information Model Name: snomed_body_structure_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.3 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Snomed Concept, Findings Version</title><link href="/2024/01/17/snomed_findings_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Snomed Concept, Findings Version" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/snomed_findings_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/snomed_findings_resolver_pipeline_en.html">## Description

This pipeline extracts clinical findings and maps them to their corresponding SNOMED (CT version) codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/snomed_findings_resolver_pipeline_en_5.2.1_3.2_1705500443233.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/snomed_findings_resolver_pipeline_en_5.2.1_3.2_1705500443233.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

snomed_pipeline = PretrainedPipeline(&quot;snomed_findings_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;The patient exhibited recurrent upper respiratory tract infections, subjective fevers, unintentional weight loss, and occasional night sweats. Clinically, they appeared cachectic and pale, with notable hepatosplenomegaly. Laboratory results confirmed pancytopenia.&quot;&quot;&quot;

result = snomed_pipeline.fullAnnotate(text)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val snomed_pipeline = PretrainedPipeline(&quot;snomed_findings_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;&quot;&quot;The patient exhibited recurrent upper respiratory tract infections, subjective fevers, unintentional weight loss, and occasional night sweats. Clinically, they appeared cachectic and pale, with notable hepatosplenomegaly. Laboratory results confirmed pancytopenia.&quot;&quot;&quot;

val result = snomed_pipeline.fullAnnotate(text)

```
&lt;/div&gt;

## Results

```bash

+--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|                                      chunks|begin|end|     code|                                         all_codes|                                       resolutions|                                     all_distances|
+--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+
|recurrent upper respiratory tract infections|   22| 65|195708003|[195708003, 308130008, 195746005, 54150009, 783...|[recurrent upper respiratory tract infection, r...|[0.0073, 0.0664, 0.0664, 0.0694, 0.0712, 0.0737...|
|                           subjective fevers|   68| 84|103001002|[103001002, 248425001, 186694006, 77957000, 271...|[feeling feverish (finding), feels feverish, sw...|[0.0494, 0.0514, 0.0535, 0.0552, 0.0661, 0.0674...|
|                   unintentional weight loss|   87|111|448765001|[448765001, 422868009, 699205002, 416528001, 16...|[unintentional weight loss, unexplained weight ...|[0.0000, 0.0400, 0.0472, 0.0564, 0.0666, 0.0666...|
|                     occasional night sweats|  118|140|161859009|[161859009, 42984000, 139115006, 423052008, 672...|[night sweats, night sweats, night sweats, freq...|[0.0480, 0.0480, 0.0480, 0.1043, 0.1100, 0.1256...|
|                                   cachectic|  169|177|238108007|[238108007, 28928000, 74633007, 422003001, 2845...|[cachectic, cachexia, aids with cachexia, cache...|[0.0000, 0.0619, 0.0651, 0.0965, 0.0961, 0.0986...|
|                                        pale|  183|186|274643008|[274643008, 139121005, 161865009, 398979000, 16...|[pale, pale color, pale color, pale complexion,...|[0.0000, 0.0733, 0.0733, 0.0812, 0.0812, 0.0892...|
|                  notable hepatosplenomegaly|  194|219| 36760000|[36760000, 19058002, 80378000, 16294009, 469330...|[hepatosplenomegaly, congestive splenomegaly, n...|[0.0225, 0.0835, 0.0857, 0.0875, 0.0928, 0.0959...|
|                                pancytopenia|  251|262|127034005|[127034005, 736024007, 191249008, 5876000, 1249...|[pancytopenia, drug induced pancytopenia, pancy...|[0.0000, 0.0407, 0.0425, 0.0425, 0.0493, 0.0495...|
+--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|snomed_findings_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|3.6 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="snomed" /><category term="pipeline" /><category term="resolver" /><summary type="html">Description This pipeline extracts clinical findings and maps them to their corresponding SNOMED (CT version) codes using sbiobert_base_cased_mli Sentence Bert Embeddings. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline snomed_pipeline = PretrainedPipeline(&quot;snomed_findings_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;The patient exhibited recurrent upper respiratory tract infections, subjective fevers, unintentional weight loss, and occasional night sweats. Clinically, they appeared cachectic and pale, with notable hepatosplenomegaly. Laboratory results confirmed pancytopenia.&quot;&quot;&quot; result = snomed_pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val snomed_pipeline = PretrainedPipeline(&quot;snomed_findings_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;&quot;&quot;The patient exhibited recurrent upper respiratory tract infections, subjective fevers, unintentional weight loss, and occasional night sweats. Clinically, they appeared cachectic and pale, with notable hepatosplenomegaly. Laboratory results confirmed pancytopenia.&quot;&quot;&quot; val result = snomed_pipeline.fullAnnotate(text) Results +--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ | chunks|begin|end| code| all_codes| resolutions| all_distances| +--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ |recurrent upper respiratory tract infections| 22| 65|195708003|[195708003, 308130008, 195746005, 54150009, 783...|[recurrent upper respiratory tract infection, r...|[0.0073, 0.0664, 0.0664, 0.0694, 0.0712, 0.0737...| | subjective fevers| 68| 84|103001002|[103001002, 248425001, 186694006, 77957000, 271...|[feeling feverish (finding), feels feverish, sw...|[0.0494, 0.0514, 0.0535, 0.0552, 0.0661, 0.0674...| | unintentional weight loss| 87|111|448765001|[448765001, 422868009, 699205002, 416528001, 16...|[unintentional weight loss, unexplained weight ...|[0.0000, 0.0400, 0.0472, 0.0564, 0.0666, 0.0666...| | occasional night sweats| 118|140|161859009|[161859009, 42984000, 139115006, 423052008, 672...|[night sweats, night sweats, night sweats, freq...|[0.0480, 0.0480, 0.0480, 0.1043, 0.1100, 0.1256...| | cachectic| 169|177|238108007|[238108007, 28928000, 74633007, 422003001, 2845...|[cachectic, cachexia, aids with cachexia, cache...|[0.0000, 0.0619, 0.0651, 0.0965, 0.0961, 0.0986...| | pale| 183|186|274643008|[274643008, 139121005, 161865009, 398979000, 16...|[pale, pale color, pale color, pale complexion,...|[0.0000, 0.0733, 0.0733, 0.0812, 0.0812, 0.0892...| | notable hepatosplenomegaly| 194|219| 36760000|[36760000, 19058002, 80378000, 16294009, 469330...|[hepatosplenomegaly, congestive splenomegaly, n...|[0.0225, 0.0835, 0.0857, 0.0875, 0.0928, 0.0959...| | pancytopenia| 251|262|127034005|[127034005, 736024007, 191249008, 5876000, 1249...|[pancytopenia, drug induced pancytopenia, pancy...|[0.0000, 0.0407, 0.0425, 0.0425, 0.0493, 0.0495...| +--------------------------------------------+-----+---+---------+--------------------------------------------------+--------------------------------------------------+--------------------------------------------------+ Model Information Model Name: snomed_findings_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 3.6 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Snomed Codes - Procedure and Measurements Version</title><link href="/2024/01/17/snomed_procedures_measurements_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Snomed Codes - Procedure and Measurements Version" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/snomed_procedures_measurements_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/snomed_procedures_measurements_resolver_pipeline_en.html">## Description

This pipeline extracts `Procedure` and `Measurements` entities and maps them to their corresponding SNOMED codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/snomed_procedures_measurements_resolver_pipeline_en_5.2.1_3.2_1705512168177.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/snomed_procedures_measurements_resolver_pipeline_en_5.2.1_3.2_1705512168177.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
  
```python

from sparknlp.pretrained import PretrainedPipeline

snomed_pipeline = PretrainedPipeline(&quot;snomed_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

text = &quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;

result = snomed_pipeline.fullAnnotate(text)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val snomed_pipeline = PretrainedPipeline(&quot;snomed_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val text = &quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;

val result = snomed_pipeline.fullAnnotate(text)

```
&lt;/div&gt;

## Results

```bash

+--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+
|              chunks|begin|end|     code|                                                        all_codes|                                                      resolutions|                                                    all_distances|
+--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+
|      pericardectomy|  239|252| 34646007|[34646007, 13830001, 58380004, 67057001, 232191001, 50070009, ...|[Pericardiectomy, Incision of pericardium, Pericardiostomy, Ph...|[0.0000, 0.0703, 0.0763, 0.1048, 0.1031, 0.1148, 0.1167, 0.119...|
|chest tube placement|  321|340|264957007|[264957007, 55628002, 290649006, 238327005, 297941000000109, 1...|[Insertion of pleural tube drain, Maintenance of thoracic drai...|[0.0331, 0.0768, 0.1047, 0.1082, 0.1126, 0.1143, 0.1245, 0.128...|
|        thoracoscopy|  381|392| 14671001|[14671001, 430927004, 367408005, 229317003, 387640008, 1201600...|[Thoracoscopy, Thoracoscopic procedure, Incision of chest wall...|[0.0000, 0.0437, 0.0875, 0.0943, 0.1135, 0.1081, 0.1159, 0.123...|
+--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+

```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|snomed_procedures_measurements_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.5 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="snomed" /><category term="pipeline" /><category term="resolver" /><category term="procedure" /><category term="measurements" /><summary type="html">Description This pipeline extracts Procedure and Measurements entities and maps them to their corresponding SNOMED codes using sbiobert_base_cased_mli Sentence Bert Embeddings. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline snomed_pipeline = PretrainedPipeline(&quot;snomed_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) text = &quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot; result = snomed_pipeline.fullAnnotate(text) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val snomed_pipeline = PretrainedPipeline(&quot;snomed_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val text = &quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot; val result = snomed_pipeline.fullAnnotate(text) Results +--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+ | chunks|begin|end| code| all_codes| resolutions| all_distances| +--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+ | pericardectomy| 239|252| 34646007|[34646007, 13830001, 58380004, 67057001, 232191001, 50070009, ...|[Pericardiectomy, Incision of pericardium, Pericardiostomy, Ph...|[0.0000, 0.0703, 0.0763, 0.1048, 0.1031, 0.1148, 0.1167, 0.119...| |chest tube placement| 321|340|264957007|[264957007, 55628002, 290649006, 238327005, 297941000000109, 1...|[Insertion of pleural tube drain, Maintenance of thoracic drai...|[0.0331, 0.0768, 0.1047, 0.1082, 0.1126, 0.1143, 0.1245, 0.128...| | thoracoscopy| 381|392| 14671001|[14671001, 430927004, 367408005, 229317003, 387640008, 1201600...|[Thoracoscopy, Thoracoscopic procedure, Incision of chest wall...|[0.0000, 0.0437, 0.0875, 0.0943, 0.1135, 0.1081, 0.1159, 0.123...| +--------------------+-----+---+---------+-----------------------------------------------------------------+-----------------------------------------------------------------+-----------------------------------------------------------------+ Model Information Model Name: snomed_procedures_measurements_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.5 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Anatomic Therapeutic Chemical (ATC) Sentence Entity Resolver</title><link href="/2024/01/17/atc_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Anatomic Therapeutic Chemical (ATC) Sentence Entity Resolver" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/atc_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/atc_resolver_pipeline_en.html">## Description

This advanced pipeline extracts `DRUG` entities from clinical texts and utilizes the `sbiobert_base_cased_mli` Sentence Bert Embeddings to map these entities to their corresponding Anatomic Therapeutic Chemical (ATC) codes. 

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/atc_resolver_pipeline_en_5.2.1_3.4_1705491797364.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/atc_resolver_pipeline_en_5.2.1_3.4_1705491797364.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;&quot;&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;&quot;&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
|    | chunks              |   begin |   end | entities   | atc_code   | resolutions         |
|---:|:--------------------|--------:|------:|:-----------|:-----------|:--------------------|
|  0 | hydrogen peroxide   |      26 |    42 | DRUG       | A01AB02    | hydrogen peroxide   |
|  1 | amoxicillin         |      54 |    64 | DRUG       | J01CA04    | amoxicillin         |
|  2 | magnesium hydroxide |     153 |   171 | DRUG       | A02AA04    | magnesium hydroxide |
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|atc_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.2 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="entity_resolution" /><category term="clinical" /><category term="pipeline" /><category term="atc" /><summary type="html">Description This advanced pipeline extracts DRUG entities from clinical texts and utilizes the sbiobert_base_cased_mli Sentence Bert Embeddings to map these entities to their corresponding Anatomic Therapeutic Chemical (ATC) codes. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;&quot;&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;atc_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;&quot;&quot;She was immediately given hydrogen peroxide 30 mg and amoxicillin twice daily for 10 days to treat the infection on her leg. She has a history of taking magnesium hydroxide.&quot;&quot;&quot;) Results | | chunks | begin | end | entities | atc_code | resolutions | |---:|:--------------------|--------:|------:|:-----------|:-----------|:--------------------| | 0 | hydrogen peroxide | 26 | 42 | DRUG | A01AB02 | hydrogen peroxide | | 1 | amoxicillin | 54 | 64 | DRUG | J01CA04 | amoxicillin | | 2 | magnesium hydroxide | 153 | 171 | DRUG | A02AA04 | magnesium hydroxide | Model Information Model Name: atc_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.2 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry><entry><title type="html">Pipeline for Current Procedural Terminology (CPT) Sentence Entity Resolver</title><link href="/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en.html" rel="alternate" type="text/html" title="Pipeline for Current Procedural Terminology (CPT) Sentence Entity Resolver" /><published>2024-01-17T00:00:00+00:00</published><updated>2024-01-17T00:00:00+00:00</updated><id>/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en</id><content type="html" xml:base="/2024/01/17/cpt_procedures_measurements_resolver_pipeline_en.html">## Description

This pipeline extracts `Procedure` and `Measurement` entities and maps them to corresponding Current Procedural Terminology (CPT) codes using `sbiobert_base_cased_mli` Sentence Bert Embeddings.

{:.btn-box}
&lt;button class=&quot;button button-orange&quot; disabled&gt;Live Demo&lt;/button&gt;
&lt;button class=&quot;button button-orange&quot; disabled&gt;Open in Colab&lt;/button&gt;
[Download](https://s3.amazonaws.com/auxdata.johnsnowlabs.com/clinical/models/cpt_procedures_measurements_resolver_pipeline_en_5.2.1_3.4_1705496174409.zip){:.button.button-orange.button-orange-trans.arr.button-icon.hidden}
[Copy S3 URI](s3://auxdata.johnsnowlabs.com/clinical/models/cpt_procedures_measurements_resolver_pipeline_en_5.2.1_3.4_1705496174409.zip){:.button.button-orange.button-orange-trans.button-icon.button-copy-s3}

## How to use



&lt;div class=&quot;tabs-box&quot; markdown=&quot;1&quot;&gt;
{% include programmingLanguageSelectScalaPythonNLU.html %}
```python

from sparknlp.pretrained import PretrainedPipeline

ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node.
We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma.
At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;)

```
```scala

import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline

val ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;)

val result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node.
We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma.
At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;)

```
&lt;/div&gt;

## Results

```bash
+--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+
|               chunk|begin|end|ner_label|cpt_code|                                                 resolutions|                                                 all_k_codes|
+--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+
|      pericardectomy|  239|252|Procedure|   33030|Pericardectomy [Pericardiectomy, subtotal or complete; wi...|33030:::33020:::64746:::49250:::27350:::68520:::32310:::2...|
|chest tube placement|  321|340|Procedure|   39503|Insertion of chest tube [Repair, neonatal diaphragmatic h...|39503:::96440:::32553:::35820:::32100:::36226:::21899:::2...|
|        thoracoscopy|  381|392|Procedure| 1020900|Thoracoscopy [Thoracoscopy]:::Thoracoscopy, surgical; wit...|1020900:::32654:::32668:::1006014:::35820:::32606:::32555...|
+--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+
```

{:.model-param}
## Model Information

{:.table-model}
|---|---|
|Model Name:|cpt_procedures_measurements_resolver_pipeline|
|Type:|pipeline|
|Compatibility:|Healthcare NLP 5.2.1+|
|License:|Licensed|
|Edition:|Official|
|Language:|en|
|Size:|2.5 GB|

## Included Models

- DocumentAssembler
- SentenceDetectorDLModel
- TokenizerModel
- WordEmbeddingsModel
- MedicalNerModel
- NerConverterInternalModel
- MedicalNerModel
- NerConverterInternalModel
- ChunkMergeModel
- Chunk2Doc
- BertSentenceEmbeddings
- SentenceEntityResolverModel</content><author><name>John Snow Labs</name></author><category term="licensed" /><category term="en" /><category term="entity_resolution" /><category term="clinical" /><category term="pipeline" /><category term="cpt" /><summary type="html">Description This pipeline extracts Procedure and Measurement entities and maps them to corresponding Current Procedural Terminology (CPT) codes using sbiobert_base_cased_mli Sentence Bert Embeddings. Live Demo Open in Colab Download Copy S3 URI How to use PythonJSLScalaNLU from sparknlp.pretrained import PretrainedPipeline ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;) import com.johnsnowlabs.nlp.pretrained.PretrainedPipeline val ner_pipeline = PretrainedPipeline(&quot;cpt_procedures_measurements_resolver_pipeline&quot;, &quot;en&quot;, &quot;clinical/models&quot;) val result = ner_pipeline.annotate(&quot;&quot;&quot;She was admitted to the hospital with chest pain and found to have bilateral pleural effusion, the right greater than the left. CT scan of the chest also revealed a large mediastinal lymph node. We reviewed the pathology obtained from the pericardectomy in March 2006, which was diagnostic of mesothelioma. At this time, chest tube placement for drainage of the fluid occurred and thoracoscopy, which were performed, which revealed epithelioid malignant mesothelioma.&quot;&quot;&quot;) Results +--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+ | chunk|begin|end|ner_label|cpt_code| resolutions| all_k_codes| +--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+ | pericardectomy| 239|252|Procedure| 33030|Pericardectomy [Pericardiectomy, subtotal or complete; wi...|33030:::33020:::64746:::49250:::27350:::68520:::32310:::2...| |chest tube placement| 321|340|Procedure| 39503|Insertion of chest tube [Repair, neonatal diaphragmatic h...|39503:::96440:::32553:::35820:::32100:::36226:::21899:::2...| | thoracoscopy| 381|392|Procedure| 1020900|Thoracoscopy [Thoracoscopy]:::Thoracoscopy, surgical; wit...|1020900:::32654:::32668:::1006014:::35820:::32606:::32555...| +--------------------+-----+---+---------+--------+------------------------------------------------------------+------------------------------------------------------------+ Model Information Model Name: cpt_procedures_measurements_resolver_pipeline Type: pipeline Compatibility: Healthcare NLP 5.2.1+ License: Licensed Edition: Official Language: en Size: 2.5 GB Included Models DocumentAssembler SentenceDetectorDLModel TokenizerModel WordEmbeddingsModel MedicalNerModel NerConverterInternalModel MedicalNerModel NerConverterInternalModel ChunkMergeModel Chunk2Doc BertSentenceEmbeddings SentenceEntityResolverModel</summary></entry></feed>